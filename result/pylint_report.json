[
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 78,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 92,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (131/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 93,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (132/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 123,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 125,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 141,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 148,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 164,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 167,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 170,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 171,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (142/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 178,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 186,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 187,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 191,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (133/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 192,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (134/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 199,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 204,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 234,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 238,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 241,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 246,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 248,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 253,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 262,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 265,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 269,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 279,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 281,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\benchmarks.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 13,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import export\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 44,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import attempt_load\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": 44,
        "endColumn": 41,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import SegmentationModel\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 38,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from segment.val import run as val_seg\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 31,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils import notebook_init\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 67,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, check_yaml, file_size, print_args\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 43,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 30,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from val import run as val_det\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "benchmarks",
        "obj": "run",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 7,
        "path": "yolov5\\benchmarks.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "benchmarks",
        "obj": "run",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 7,
        "path": "yolov5\\benchmarks.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "benchmarks",
        "obj": "run",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 7,
        "path": "yolov5\\benchmarks.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (27/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 59,
        "column": 4,
        "endLine": 59,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'test' from outer scope (line 152)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 129,
        "column": 15,
        "endLine": 129,
        "endColumn": 24,
        "path": "yolov5\\benchmarks.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "run",
        "line": 131,
        "column": 23,
        "endLine": 131,
        "endColumn": 48,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unidiomatic-typecheck",
        "message": "Use isinstance() rather than type() for a typecheck.",
        "message-id": "C0123"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 132,
        "column": 12,
        "endLine": 132,
        "endColumn": 79,
        "path": "yolov5\\benchmarks.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 141,
        "column": 70,
        "endLine": 141,
        "endColumn": 73,
        "path": "yolov5\\benchmarks.py",
        "symbol": "using-constant-test",
        "message": "Using a conditional statement with a constant value",
        "message-id": "W0125"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 143,
        "column": 4,
        "endLine": 143,
        "endColumn": 66,
        "path": "yolov5\\benchmarks.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 144,
        "column": 26,
        "endLine": 144,
        "endColumn": 29,
        "path": "yolov5\\benchmarks.py",
        "symbol": "using-constant-test",
        "message": "Using a conditional statement with a constant value",
        "message-id": "W0125"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 147,
        "column": 16,
        "endLine": 147,
        "endColumn": 31,
        "path": "yolov5\\benchmarks.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "run",
        "line": 59,
        "column": 4,
        "endLine": 59,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'test'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "benchmarks",
        "obj": "test",
        "line": 152,
        "column": 0,
        "endLine": 152,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "benchmarks",
        "obj": "test",
        "line": 152,
        "column": 0,
        "endLine": 152,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "benchmarks",
        "obj": "test",
        "line": 152,
        "column": 0,
        "endLine": 152,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 159,
        "column": 4,
        "endLine": 159,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'test' from outer scope (line 152)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 208,
        "column": 15,
        "endLine": 208,
        "endColumn": 24,
        "path": "yolov5\\benchmarks.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 216,
        "column": 4,
        "endLine": 216,
        "endColumn": 63,
        "path": "yolov5\\benchmarks.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 155,
        "column": 4,
        "endLine": 155,
        "endColumn": 14,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'batch_size'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 156,
        "column": 4,
        "endLine": 156,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'data'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 159,
        "column": 4,
        "endLine": 159,
        "endColumn": 8,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'test'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 160,
        "column": 4,
        "endLine": 160,
        "endColumn": 11,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'pt_only'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 161,
        "column": 4,
        "endLine": 161,
        "endColumn": 13,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'hard_fail'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 199,
        "column": 8,
        "endLine": 199,
        "endColumn": 9,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'i'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "test",
        "line": 199,
        "column": 29,
        "endLine": 199,
        "endColumn": 32,
        "path": "yolov5\\benchmarks.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'gpu'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "parse_opt",
        "line": 254,
        "column": 4,
        "endLine": 254,
        "endColumn": 7,
        "path": "yolov5\\benchmarks.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 293)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "main",
        "line": 260,
        "column": 9,
        "endLine": 260,
        "endColumn": 12,
        "path": "yolov5\\benchmarks.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 293)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "benchmarks",
        "obj": "main",
        "line": 289,
        "column": 4,
        "endLine": 289,
        "endColumn": 55,
        "path": "yolov5\\benchmarks.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"test(**vars(opt)) if opt.test else run(**vars(opt))\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "convention",
        "module": "benchmarks",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 30,
        "path": "yolov5\\benchmarks.py",
        "symbol": "wrong-import-order",
        "message": "third party import \"val.run\" should be placed before first party imports \"utils.notebook_init\", \"utils.general.LOGGER\", \"utils.torch_utils.select_device\" ",
        "message-id": "C0411"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 109,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 111,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 113,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 127,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (125/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 132,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 135,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 184,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 197,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 204,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 210,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 239,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 276,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 279,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 286,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 306,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 307,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 315,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 317,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 325,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 328,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 329,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 339,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 342,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 346,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 348,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 349,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 355,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 368,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 369,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 370,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 371,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 382,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (140/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 385,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 388,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 393,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 395,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 396,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 410,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 413,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 419,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (128/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 420,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\detect.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 70,
        "path": "yolov5\\detect.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from ultralytics.utils.plotting import Annotator, colors, save_one_box\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 44,
        "path": "yolov5\\detect.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import DetectMultiBackend\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 96,
        "path": "yolov5\\detect.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": 65,
        "endColumn": 1,
        "path": "yolov5\\detect.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, Profile, check_file, check_img_size, check_imshow, check_requirements, colorstr, cv2, increment_path, non_max_suppression, print_args, scale_boxes, strip_optimizer, xyxy2xywh\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 65,
        "path": "yolov5\\detect.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "detect",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\detect.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (29/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "detect",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\detect.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (29/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "detect",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\detect.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (81/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run.write_to_csv",
        "line": 222,
        "column": 17,
        "endLine": 222,
        "endColumn": 53,
        "path": "yolov5\\detect.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run.write_to_csv",
        "line": 222,
        "column": 22,
        "endLine": 222,
        "endColumn": 30,
        "path": "yolov5\\detect.py",
        "symbol": "cell-var-from-loop",
        "message": "Cell variable csv_path defined in loop",
        "message-id": "W0640"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run.write_to_csv",
        "line": 224,
        "column": 23,
        "endLine": 224,
        "endColumn": 31,
        "path": "yolov5\\detect.py",
        "symbol": "cell-var-from-loop",
        "message": "Cell variable csv_path defined in loop",
        "message-id": "W0640"
    },
    {
        "type": "convention",
        "module": "detect",
        "obj": "run",
        "line": 240,
        "column": 17,
        "endLine": 240,
        "endColumn": 29,
        "path": "yolov5\\detect.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run",
        "line": 271,
        "column": 29,
        "endLine": 271,
        "endColumn": 57,
        "path": "yolov5\\detect.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 286,
        "column": 20,
        "endLine": 286,
        "endColumn": 35,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'namedWindow' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 286,
        "column": 44,
        "endLine": 286,
        "endColumn": 61,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'WINDOW_NORMAL' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 286,
        "column": 64,
        "endLine": 286,
        "endColumn": 84,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'WINDOW_KEEPRATIO' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 287,
        "column": 20,
        "endLine": 287,
        "endColumn": 36,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resizeWindow' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 289,
        "column": 16,
        "endLine": 289,
        "endColumn": 27,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'waitKey' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 298,
        "column": 53,
        "endLine": 298,
        "endColumn": 68,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 301,
        "column": 46,
        "endLine": 301,
        "endColumn": 62,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FPS' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 302,
        "column": 48,
        "endLine": 302,
        "endColumn": 72,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_WIDTH' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 303,
        "column": 48,
        "endLine": 303,
        "endColumn": 73,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_HEIGHT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 307,
        "column": 40,
        "endLine": 307,
        "endColumn": 55,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "detect",
        "obj": "run",
        "line": 307,
        "column": 67,
        "endLine": 307,
        "endColumn": 89,
        "path": "yolov5\\detect.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter_fourcc' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run",
        "line": 311,
        "column": 8,
        "endLine": 311,
        "endColumn": 90,
        "path": "yolov5\\detect.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run",
        "line": 311,
        "column": 36,
        "endLine": 311,
        "endColumn": 39,
        "path": "yolov5\\detect.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'det'",
        "message-id": "W0631"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run",
        "line": 315,
        "column": 4,
        "endLine": 315,
        "endColumn": 115,
        "path": "yolov5\\detect.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "run",
        "line": 318,
        "column": 8,
        "endLine": 318,
        "endColumn": 72,
        "path": "yolov5\\detect.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "detect",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\detect.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (35/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "detect",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\detect.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (125/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "parse_opt",
        "line": 402,
        "column": 4,
        "endLine": 402,
        "endColumn": 7,
        "path": "yolov5\\detect.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 436)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "detect",
        "obj": "main",
        "line": 408,
        "column": 9,
        "endLine": 408,
        "endColumn": 12,
        "path": "yolov5\\detect.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 436)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 109,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 110,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 121,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 125,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 131,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 132,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 150,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 151,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 187,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 193,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 194,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 214,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 219,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 241,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 247,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 249,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (127/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 287,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 291,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 299,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 302,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 342,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 352,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 398,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 413,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 417,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 420,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 429,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 432,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 439,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 443,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 461,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 469,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 479,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 489,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 507,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 537,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 541,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 586,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 588,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 597,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 631,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (128/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 634,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 642,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 686,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 689,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 692,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 721,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 731,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 732,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 739,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (126/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 758,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 769,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (134/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 778,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 790,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 810,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 816,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 833,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 836,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 842,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 860,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 876,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 919,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 930,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 933,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 947,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 948,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 951,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (143/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 956,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 984,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 986,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 996,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (137/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 997,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1043,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1048,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (125/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1050,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1068,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1110,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (128/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1166,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1245,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1246,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1247,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1270,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1271,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1273,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1308,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1312,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1320,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1339,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1376,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1377,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1378,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1383,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1384,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1390,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1412,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1416,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1430,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1431,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1449,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1469,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1476,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1478,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1489,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (133/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1503,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1504,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1505,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1523,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1524,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1526,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1531,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\export.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1546/1000)",
        "message-id": "C0302"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 44,
        "path": "yolov5\\export.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import attempt_load\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": 71,
        "endColumn": 86,
        "path": "yolov5\\export.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import ClassificationModel, Detect, DetectionModel, SegmentationModel\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 40,
        "path": "yolov5\\export.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import LoadImages\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": 87,
        "endColumn": 1,
        "path": "yolov5\\export.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, Profile, check_dataset, check_img_size, check_requirements, check_version, check_yaml, colorstr, file_size, get_default_args, print_args, url2file, yaml_save\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "",
        "line": 88,
        "column": 0,
        "endLine": 88,
        "endColumn": 65,
        "path": "yolov5\\export.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "iOSModel",
        "line": 93,
        "column": 0,
        "endLine": 93,
        "endColumn": 14,
        "path": "yolov5\\export.py",
        "symbol": "invalid-name",
        "message": "Class name \"iOSModel\" doesn't conform to PascalCase naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "iOSModel.__init__",
        "line": 113,
        "column": 8,
        "endLine": 113,
        "endColumn": 9,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'b'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "iOSModel.__init__",
        "line": 113,
        "column": 11,
        "endLine": 113,
        "endColumn": 12,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'c'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "try_export.outer_func",
        "line": 221,
        "column": 15,
        "endLine": 221,
        "endColumn": 24,
        "path": "yolov5\\export.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "try_export.outer_func",
        "line": 219,
        "column": 12,
        "endLine": 219,
        "endColumn": 105,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "try_export.outer_func",
        "line": 222,
        "column": 12,
        "endLine": 222,
        "endColumn": 72,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_torchscript",
        "line": 271,
        "column": 4,
        "endLine": 271,
        "endColumn": 80,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_torchscript",
        "line": 278,
        "column": 8,
        "endLine": 278,
        "endColumn": 58,
        "path": "yolov5\\export.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _save_for_lite_interpreter of a client class",
        "message-id": "W0212"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_onnx",
        "line": 285,
        "column": 0,
        "endLine": 285,
        "endColumn": 15,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_onnx",
        "line": 285,
        "column": 0,
        "endLine": 285,
        "endColumn": 15,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_onnx",
        "line": 285,
        "column": 0,
        "endLine": 285,
        "endColumn": 15,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_onnx",
        "line": 332,
        "column": 4,
        "endLine": 332,
        "endColumn": 15,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (onnx)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_onnx",
        "line": 334,
        "column": 4,
        "endLine": 334,
        "endColumn": 78,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_onnx",
        "line": 379,
        "column": 15,
        "endLine": 379,
        "endColumn": 24,
        "path": "yolov5\\export.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_onnx",
        "line": 374,
        "column": 12,
        "endLine": 374,
        "endColumn": 27,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (onnxslim)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_onnx",
        "line": 374,
        "column": 12,
        "endLine": 374,
        "endColumn": 27,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'onnxslim'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_onnx",
        "line": 376,
        "column": 12,
        "endLine": 376,
        "endColumn": 85,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_onnx",
        "line": 380,
        "column": 12,
        "endLine": 380,
        "endColumn": 60,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_openvino",
        "line": 385,
        "column": 0,
        "endLine": 385,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_openvino",
        "line": 385,
        "column": 0,
        "endLine": 385,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_openvino",
        "line": 385,
        "column": 0,
        "endLine": 385,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (19/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_openvino",
        "line": 421,
        "column": 4,
        "endLine": 421,
        "endColumn": 33,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (openvino.runtime)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_openvino",
        "line": 421,
        "column": 4,
        "endLine": 421,
        "endColumn": 33,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'openvino.runtime'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_openvino",
        "line": 422,
        "column": 4,
        "endLine": 422,
        "endColumn": 33,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'openvino.tools'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_openvino",
        "line": 422,
        "column": 4,
        "endLine": 422,
        "endColumn": 33,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (openvino.tools.mo)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_openvino",
        "line": 424,
        "column": 4,
        "endLine": 424,
        "endColumn": 80,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_openvino",
        "line": 433,
        "column": 8,
        "endLine": 433,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (nncf)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_openvino",
        "line": 433,
        "column": 8,
        "endLine": 433,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'nncf'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_openvino",
        "line": 434,
        "column": 8,
        "endLine": 434,
        "endColumn": 26,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (numpy)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_openvino",
        "line": 436,
        "column": 8,
        "endLine": 436,
        "endColumn": 55,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.dataloaders.create_dataloader)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_paddle",
        "line": 514,
        "column": 4,
        "endLine": 514,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (x2paddle)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_paddle",
        "line": 514,
        "column": 4,
        "endLine": 514,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'x2paddle'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_paddle",
        "line": 515,
        "column": 4,
        "endLine": 515,
        "endColumn": 47,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'x2paddle.convert'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_paddle",
        "line": 515,
        "column": 4,
        "endLine": 515,
        "endColumn": 47,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (x2paddle.convert.pytorch2paddle)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_paddle",
        "line": 517,
        "column": 4,
        "endLine": 517,
        "endColumn": 86,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_coreml",
        "line": 526,
        "column": 0,
        "endLine": 526,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_coreml",
        "line": 526,
        "column": 0,
        "endLine": 526,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_coreml",
        "line": 526,
        "column": 0,
        "endLine": 526,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_coreml",
        "line": 559,
        "column": 4,
        "endLine": 559,
        "endColumn": 28,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (coremltools)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_coreml",
        "line": 559,
        "column": 4,
        "endLine": 559,
        "endColumn": 28,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'coremltools'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_coreml",
        "line": 561,
        "column": 4,
        "endLine": 561,
        "endColumn": 83,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_engine",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_engine",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (10/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_engine",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (32/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_engine",
        "line": 637,
        "column": 11,
        "endLine": 637,
        "endColumn": 20,
        "path": "yolov5\\export.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_engine",
        "line": 636,
        "column": 8,
        "endLine": 636,
        "endColumn": 30,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorrt)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_engine",
        "line": 640,
        "column": 8,
        "endLine": 640,
        "endColumn": 30,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorrt)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_engine",
        "line": 652,
        "column": 4,
        "endLine": 652,
        "endColumn": 81,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_engine",
        "line": 680,
        "column": 8,
        "endLine": 680,
        "endColumn": 85,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_engine",
        "line": 682,
        "column": 8,
        "endLine": 682,
        "endColumn": 86,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_engine",
        "line": 686,
        "column": 12,
        "endLine": 686,
        "endColumn": 109,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_engine",
        "line": 692,
        "column": 4,
        "endLine": 692,
        "endColumn": 109,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_engine",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_engine",
        "line": 596,
        "column": 0,
        "endLine": 596,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (59/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_saved_model",
        "line": 706,
        "column": 0,
        "endLine": 706,
        "endColumn": 22,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (12/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_saved_model",
        "line": 706,
        "column": 0,
        "endLine": 706,
        "endColumn": 22,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (12/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_saved_model",
        "line": 706,
        "column": 0,
        "endLine": 706,
        "endColumn": 22,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (28/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_saved_model",
        "line": 757,
        "column": 11,
        "endLine": 757,
        "endColumn": 20,
        "path": "yolov5\\export.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_saved_model",
        "line": 756,
        "column": 8,
        "endLine": 756,
        "endColumn": 31,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_saved_model",
        "line": 760,
        "column": 8,
        "endLine": 760,
        "endColumn": 31,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_saved_model",
        "line": 761,
        "column": 4,
        "endLine": 761,
        "endColumn": 98,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow.python.framework.convert_to_constants'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_saved_model",
        "line": 761,
        "column": 4,
        "endLine": 761,
        "endColumn": 98,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_v2)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_saved_model",
        "line": 763,
        "column": 4,
        "endLine": 763,
        "endColumn": 33,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.tf.TFModel)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_saved_model",
        "line": 765,
        "column": 4,
        "endLine": 765,
        "endColumn": 82,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_saved_model",
        "line": 768,
        "column": 8,
        "endLine": 770,
        "endColumn": 9,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_saved_model.<lambda>",
        "line": 786,
        "column": 24,
        "endLine": 786,
        "endColumn": 48,
        "path": "yolov5\\export.py",
        "symbol": "unnecessary-lambda",
        "message": "Lambda may not be necessary",
        "message-id": "W0108"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_saved_model",
        "line": 791,
        "column": 8,
        "endLine": 791,
        "endColumn": 24,
        "path": "yolov5\\export.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __call__. Invoke instance directly.",
        "message-id": "C2801"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_pb",
        "line": 826,
        "column": 4,
        "endLine": 826,
        "endColumn": 27,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_pb",
        "line": 826,
        "column": 4,
        "endLine": 826,
        "endColumn": 27,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_pb",
        "line": 827,
        "column": 4,
        "endLine": 827,
        "endColumn": 98,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow.python.framework.convert_to_constants'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_pb",
        "line": 827,
        "column": 4,
        "endLine": 827,
        "endColumn": 98,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow.python.framework.convert_to_constants.convert_variables_to_constants_v2)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_pb",
        "line": 829,
        "column": 4,
        "endLine": 829,
        "endColumn": 82,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_pb.<lambda>",
        "line": 832,
        "column": 20,
        "endLine": 832,
        "endColumn": 44,
        "path": "yolov5\\export.py",
        "symbol": "unnecessary-lambda",
        "message": "Lambda may not be necessary",
        "message-id": "W0108"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_tflite",
        "line": 841,
        "column": 0,
        "endLine": 841,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_tflite",
        "line": 841,
        "column": 0,
        "endLine": 841,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_tflite",
        "line": 841,
        "column": 0,
        "endLine": 841,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_tflite",
        "line": 885,
        "column": 4,
        "endLine": 885,
        "endColumn": 27,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_tflite",
        "line": 885,
        "column": 4,
        "endLine": 885,
        "endColumn": 27,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tflite",
        "line": 887,
        "column": 4,
        "endLine": 887,
        "endColumn": 82,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_tflite",
        "line": 896,
        "column": 8,
        "endLine": 896,
        "endColumn": 56,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.tf.representative_dataset_gen)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tflite",
        "line": 906,
        "column": 12,
        "endLine": 906,
        "endColumn": 55,
        "path": "yolov5\\export.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _experimental_disable_per_channel of a client class",
        "message-id": "W0212"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "export_tflite",
        "line": 912,
        "column": 4,
        "endLine": 912,
        "endColumn": 17,
        "path": "yolov5\\export.py",
        "symbol": "consider-using-with",
        "message": "Consider using 'with' for resource-allocating operations",
        "message-id": "R1732"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tflite",
        "line": 888,
        "column": 4,
        "endLine": 888,
        "endColumn": 14,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'batch_size'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tflite",
        "line": 888,
        "column": 16,
        "endLine": 888,
        "endColumn": 18,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'ch'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_edgetpu",
        "line": 946,
        "column": 7,
        "endLine": 946,
        "endColumn": 60,
        "path": "yolov5\\export.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_edgetpu",
        "line": 947,
        "column": 8,
        "endLine": 947,
        "endColumn": 104,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_edgetpu",
        "line": 948,
        "column": 15,
        "endLine": 948,
        "endColumn": 70,
        "path": "yolov5\\export.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_edgetpu",
        "line": 958,
        "column": 4,
        "endLine": 958,
        "endColumn": 78,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tfjs",
        "line": 1024,
        "column": 4,
        "endLine": 1024,
        "endColumn": 8,
        "path": "yolov5\\export.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'json' from outer scope (line 49)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "export_tfjs",
        "line": 1007,
        "column": 4,
        "endLine": 1007,
        "endColumn": 31,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflowjs)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "export_tfjs",
        "line": 1007,
        "column": 4,
        "endLine": 1007,
        "endColumn": 31,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflowjs'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tfjs",
        "line": 1009,
        "column": 4,
        "endLine": 1009,
        "endColumn": 86,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tfjs",
        "line": 1024,
        "column": 11,
        "endLine": 1024,
        "endColumn": 35,
        "path": "yolov5\\export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "export_tfjs",
        "line": 1025,
        "column": 9,
        "endLine": 1025,
        "endColumn": 26,
        "path": "yolov5\\export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "add_tflite_metadata",
        "line": 1074,
        "column": 8,
        "endLine": 1074,
        "endColumn": 46,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tflite_support.flatbuffers)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "add_tflite_metadata",
        "line": 1075,
        "column": 8,
        "endLine": 1075,
        "endColumn": 56,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tflite_support.metadata)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "add_tflite_metadata",
        "line": 1076,
        "column": 8,
        "endLine": 1076,
        "endColumn": 79,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tflite_support.metadata_schema_py_generated)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "add_tflite_metadata",
        "line": 1079,
        "column": 13,
        "endLine": 1079,
        "endColumn": 32,
        "path": "yolov5\\export.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1103,
        "column": 0,
        "endLine": 1103,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1103,
        "column": 0,
        "endLine": 1103,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1103,
        "column": 0,
        "endLine": 1103,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (36/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1145,
        "column": 4,
        "endLine": 1145,
        "endColumn": 28,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (coremltools)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1145,
        "column": 4,
        "endLine": 1145,
        "endColumn": 28,
        "path": "yolov5\\export.py",
        "symbol": "import-error",
        "message": "Unable to import 'coremltools'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1146,
        "column": 4,
        "endLine": 1146,
        "endColumn": 25,
        "path": "yolov5\\export.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (PIL.Image)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1199,
        "column": 25,
        "endLine": 1199,
        "endColumn": 36,
        "path": "yolov5\\export.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _spec of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1245,
        "column": 55,
        "endLine": 1245,
        "endColumn": 66,
        "path": "yolov5\\export.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _spec of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1246,
        "column": 56,
        "endLine": 1246,
        "endColumn": 71,
        "path": "yolov5\\export.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _spec of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1247,
        "column": 56,
        "endLine": 1247,
        "endColumn": 71,
        "path": "yolov5\\export.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _spec of a client class",
        "message-id": "W0212"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1103,
        "column": 0,
        "endLine": 1103,
        "endColumn": 19,
        "path": "yolov5\\export.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (75/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1150,
        "column": 4,
        "endLine": 1150,
        "endColumn": 14,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'batch_size'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1150,
        "column": 16,
        "endLine": 1150,
        "endColumn": 18,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'ch'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "pipeline_coreml",
        "line": 1167,
        "column": 4,
        "endLine": 1167,
        "endColumn": 6,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'na'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "run",
        "line": 1277,
        "column": 0,
        "endLine": 1277,
        "endColumn": 7,
        "path": "yolov5\\export.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (25/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "run",
        "line": 1277,
        "column": 0,
        "endLine": 1277,
        "endColumn": 7,
        "path": "yolov5\\export.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (25/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "run",
        "line": 1277,
        "column": 0,
        "endLine": 1277,
        "endColumn": 7,
        "path": "yolov5\\export.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (58/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "run",
        "line": 1464,
        "column": 8,
        "endLine": 1464,
        "endColumn": 11,
        "path": "yolov5\\export.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "run",
        "line": 1412,
        "column": 4,
        "endLine": 1412,
        "endColumn": 118,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "run",
        "line": 1473,
        "column": 8,
        "endLine": 1480,
        "endColumn": 9,
        "path": "yolov5\\export.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "run",
        "line": 1277,
        "column": 0,
        "endLine": 1277,
        "endColumn": 7,
        "path": "yolov5\\export.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (19/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "export",
        "obj": "run",
        "line": 1277,
        "column": 0,
        "endLine": 1277,
        "endColumn": 7,
        "path": "yolov5\\export.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (68/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "run",
        "line": 1400,
        "column": 8,
        "endLine": 1400,
        "endColumn": 9,
        "path": "yolov5\\export.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'k'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "parse_opt",
        "line": 1533,
        "column": 4,
        "endLine": 1533,
        "endColumn": 7,
        "path": "yolov5\\export.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 1545)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "export",
        "obj": "main",
        "line": 1538,
        "column": 9,
        "endLine": 1538,
        "endColumn": 12,
        "path": "yolov5\\export.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 1545)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (129/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (131/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (128/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 65,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 74,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 87,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 112,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 114,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 132,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 147,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 150,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 154,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 158,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 178,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 185,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 187,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 188,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 189,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 192,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 220,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 224,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 227,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 229,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (125/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 240,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 241,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 243,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 253,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 262,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (128/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 284,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 291,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 293,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 294,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (134/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 298,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (125/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 315,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 318,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 321,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 323,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 332,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 336,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 343,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 350,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 353,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (125/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 364,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 365,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 366,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 370,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 381,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 388,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 391,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 397,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 416,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 420,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 423,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (131/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 425,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (127/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 436,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 437,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 441,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 448,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 455,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 457,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "",
        "line": 492,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\hubconf.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "hubconf",
        "obj": "_create",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 11,
        "path": "yolov5\\hubconf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "hubconf",
        "obj": "_create",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 11,
        "path": "yolov5\\hubconf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "hubconf",
        "obj": "_create",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 11,
        "path": "yolov5\\hubconf.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (29/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "hubconf",
        "obj": "_create",
        "line": 70,
        "column": 16,
        "endLine": 70,
        "endColumn": 21,
        "path": "yolov5\\hubconf.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'model' from outer scope (line 492)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "hubconf",
        "obj": "_create",
        "line": 52,
        "column": 4,
        "endLine": 52,
        "endColumn": 28,
        "path": "yolov5\\hubconf.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'Path' from outer scope (line 478)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 52,
        "column": 4,
        "endLine": 52,
        "endColumn": 28,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pathlib.Path)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 54,
        "column": 4,
        "endLine": 54,
        "endColumn": 59,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.common.AutoShape, models.common.DetectMultiBackend)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 55,
        "column": 4,
        "endLine": 55,
        "endColumn": 48,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.experimental.attempt_load)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 56,
        "column": 4,
        "endLine": 56,
        "endColumn": 82,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.yolo.ClassificationModel, models.yolo.DetectionModel, models.yolo.SegmentationModel)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 57,
        "column": 4,
        "endLine": 57,
        "endColumn": 48,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.downloads.attempt_download)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 58,
        "column": 4,
        "endLine": 58,
        "endColumn": 88,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.general.LOGGER, utils.general.ROOT, utils.general.check_requirements, utils.general.intersect_dicts, utils.general.logging)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "hubconf",
        "obj": "_create",
        "line": 59,
        "column": 4,
        "endLine": 59,
        "endColumn": 47,
        "path": "yolov5\\hubconf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.torch_utils.select_device)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "hubconf",
        "obj": "_create",
        "line": 84,
        "column": 19,
        "endLine": 84,
        "endColumn": 28,
        "path": "yolov5\\hubconf.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "hubconf",
        "obj": "_create",
        "line": 103,
        "column": 8,
        "endLine": 103,
        "endColumn": 33,
        "path": "yolov5\\hubconf.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (149/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 123,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 137,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 206,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 215,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 216,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 221,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 227,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 248,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 259,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 268,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 274,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 275,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 305,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 326,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 343,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 349,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 365,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 383,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 387,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 390,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 395,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 399,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 408,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 409,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 414,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 437,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 445,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 454,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 472,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 511,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 512,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 514,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 536,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 549,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 567,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 569,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 570,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 572,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 573,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 575,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 580,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 582,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 584,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 587,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 590,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 591,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 592,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 593,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 596,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 599,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 600,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 601,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 602,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 604,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 608,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 609,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 610,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 621,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 624,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 625,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 664,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 666,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 677,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 678,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 692,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 742,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 782,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 795,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 805,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 812,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 849,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 858,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 862,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 867,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 894,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 899,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 910,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 922,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 927,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 928,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (125/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 930,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (129/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 933,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 938,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 940,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (126/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 941,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 944,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 945,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 946,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 948,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 949,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 951,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 953,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 957,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 958,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 959,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 964,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": 36,
        "endColumn": 21,
        "path": "yolov5\\train.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 22,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import val as validate\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 44,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import attempt_load\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 29,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import Model\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": 50,
        "endColumn": 42,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.autoanchor import check_anchors\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": 51,
        "endColumn": 50,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.autobatch import check_train_batch_size\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 37,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.callbacks import Callbacks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 47,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import create_dataloader\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": 54,
        "endColumn": 52,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.downloads import attempt_download, is_url\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": 80,
        "endColumn": 1,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, TQDM_BAR_FORMAT, check_amp, check_dataset, check_file, check_git_info, check_git_status, check_img_size, check_requirements, check_suffix, check_yaml, colorstr, get_latest_run, increment_path, init_seeds, intersect_dicts, labels_to_class_weights, labels_to_image_weights, methods, one_cycle, print_args, print_mutation, strip_optimizer, yaml_save\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": 81,
        "endColumn": 42,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.loggers import LOGGERS, Loggers\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": 82,
        "endColumn": 62,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.loggers.comet.comet_utils import check_comet_resume\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 83,
        "column": 0,
        "endLine": 83,
        "endColumn": 34,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.loss import ComputeLoss\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 84,
        "column": 0,
        "endLine": 84,
        "endColumn": 33,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.metrics import fitness\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 85,
        "column": 0,
        "endLine": 85,
        "endColumn": 35,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.plots import plot_evolve\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "",
        "line": 86,
        "column": 0,
        "endLine": 95,
        "endColumn": 1,
        "path": "yolov5\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import EarlyStopping, ModelEMA, de_parallel, select_device, smart_DDP, smart_optimizer, smart_resume, torch_distributed_zero_first\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "",
        "line": 97,
        "column": 17,
        "endLine": 97,
        "endColumn": 44,
        "path": "yolov5\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "",
        "line": 98,
        "column": 11,
        "endLine": 98,
        "endColumn": 32,
        "path": "yolov5\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "",
        "line": 99,
        "column": 17,
        "endLine": 99,
        "endColumn": 43,
        "path": "yolov5\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "train",
        "line": 103,
        "column": 0,
        "endLine": 103,
        "endColumn": 9,
        "path": "yolov5\\train.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (90/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 103,
        "column": 15,
        "endLine": 103,
        "endColumn": 18,
        "path": "yolov5\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 985)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 161,
        "column": 13,
        "endLine": 161,
        "endColumn": 39,
        "path": "yolov5\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 163,
        "column": 4,
        "endLine": 163,
        "endColumn": 94,
        "path": "yolov5\\train.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 221,
        "column": 8,
        "endLine": 221,
        "endColumn": 93,
        "path": "yolov5\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 232,
        "column": 12,
        "endLine": 232,
        "endColumn": 40,
        "path": "yolov5\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 359,
        "column": 4,
        "endLine": 364,
        "endColumn": 5,
        "path": "yolov5\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 383,
        "column": 8,
        "endLine": 383,
        "endColumn": 120,
        "path": "yolov5\\train.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "train",
        "line": 474,
        "column": 12,
        "endLine": 475,
        "endColumn": 33,
        "path": "yolov5\\train.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'best_fitness = max(best_fitness, fi)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 514,
        "column": 8,
        "endLine": 514,
        "endColumn": 110,
        "path": "yolov5\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "train",
        "line": 519,
        "column": 20,
        "endLine": 519,
        "endColumn": 55,
        "path": "yolov5\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "train",
        "line": 103,
        "column": 0,
        "endLine": 103,
        "endColumn": 9,
        "path": "yolov5\\train.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "train",
        "line": 103,
        "column": 0,
        "endLine": 103,
        "endColumn": 9,
        "path": "yolov5\\train.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (52/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "train",
        "line": 103,
        "column": 0,
        "endLine": 103,
        "endColumn": 9,
        "path": "yolov5\\train.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (207/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "main",
        "line": 619,
        "column": 0,
        "endLine": 619,
        "endColumn": 8,
        "path": "yolov5\\train.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (65/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 619,
        "column": 9,
        "endLine": 619,
        "endColumn": 12,
        "path": "yolov5\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 985)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 646,
        "column": 17,
        "endLine": 646,
        "endColumn": 48,
        "path": "yolov5\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 736,
        "column": 13,
        "endLine": 736,
        "endColumn": 43,
        "path": "yolov5\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 747,
        "column": 12,
        "endLine": 754,
        "endColumn": 13,
        "path": "yolov5\\train.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "convention",
        "module": "train",
        "obj": "main",
        "line": 758,
        "column": 8,
        "endLine": 758,
        "endColumn": 14,
        "path": "yolov5\\train.py",
        "symbol": "invalid-name",
        "message": "Variable name \"hyp_GA\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 776,
        "column": 17,
        "endLine": 776,
        "endColumn": 64,
        "path": "yolov5\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 786,
        "column": 21,
        "endLine": 786,
        "endColumn": 73,
        "path": "yolov5\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 808,
        "column": 21,
        "endLine": 808,
        "endColumn": 67,
        "path": "yolov5\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 838,
        "column": 34,
        "endLine": 841,
        "endColumn": 17,
        "path": "yolov5\\train.py",
        "symbol": "nested-min-max",
        "message": "Do not use nested call of 'max'; it's possible to do 'max(2, tournament_size_min, int(min(tournament_size_max, pop_size) - generation / (opt.evolve / 10)))' instead",
        "message-id": "W3301"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "main",
        "line": 882,
        "column": 8,
        "endLine": 886,
        "endColumn": 9,
        "path": "yolov5\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "main",
        "line": 619,
        "column": 0,
        "endLine": 619,
        "endColumn": 8,
        "path": "yolov5\\train.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (34/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "train",
        "obj": "main",
        "line": 619,
        "column": 0,
        "endLine": 619,
        "endColumn": 8,
        "path": "yolov5\\train.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (131/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "run",
        "line": 977,
        "column": 4,
        "endLine": 977,
        "endColumn": 7,
        "path": "yolov5\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 985)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "train",
        "obj": "",
        "line": 29,
        "column": 4,
        "endLine": 29,
        "endColumn": 19,
        "path": "yolov5\\train.py",
        "symbol": "unused-import",
        "message": "Unused import comet_ml",
        "message-id": "W0611"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (122/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 80,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 99,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 103,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (126/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 149,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 151,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 156,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 169,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 177,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 223,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 224,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 229,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 231,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 232,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (127/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 238,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 243,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 250,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 259,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 267,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 280,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 288,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 299,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 302,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 349,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 352,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 384,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 396,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 397,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 404,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 413,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 424,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 433,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 451,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 482,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 483,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (149/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 484,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 485,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 489,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 490,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 494,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 502,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 513,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 518,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 519,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 521,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 527,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 532,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 533,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 537,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 550,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 554,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 555,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 556,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 572,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 574,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 581,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 587,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 589,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 599,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 44,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import DetectMultiBackend\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 37,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.callbacks import Callbacks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": 41,
        "endColumn": 47,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import create_dataloader\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 58,
        "endColumn": 1,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, TQDM_BAR_FORMAT, Profile, check_dataset, check_img_size, check_requirements, check_yaml, coco80_to_coco91_class, colorstr, increment_path, non_max_suppression, print_args, scale_boxes, xywh2xyxy, xyxy2xywh\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": 59,
        "endColumn": 64,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.metrics import ConfusionMatrix, ap_per_class, box_iou\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": 60,
        "endColumn": 69,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.plots import output_to_target, plot_images, plot_val_study\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "",
        "line": 61,
        "column": 0,
        "endLine": 61,
        "endColumn": 65,
        "path": "yolov5\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "save_one_txt",
        "line": 93,
        "column": 13,
        "endLine": 93,
        "endColumn": 28,
        "path": "yolov5\\val.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "process_batch",
        "line": 174,
        "column": 4,
        "endLine": 183,
        "endColumn": 56,
        "path": "yolov5\\val.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "val",
        "obj": "run",
        "line": 188,
        "column": 0,
        "endLine": 188,
        "endColumn": 7,
        "path": "yolov5\\val.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (28/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "val",
        "obj": "run",
        "line": 188,
        "column": 0,
        "endLine": 188,
        "endColumn": 7,
        "path": "yolov5\\val.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (28/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "val",
        "obj": "run",
        "line": 188,
        "column": 0,
        "endLine": 188,
        "endColumn": 7,
        "path": "yolov5\\val.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (100/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 323,
        "column": 43,
        "endLine": 323,
        "endColumn": 46,
        "path": "yolov5\\val.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'map'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 449,
        "column": 12,
        "endLine": 449,
        "endColumn": 16,
        "path": "yolov5\\val.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'eval'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 261,
        "column": 8,
        "endLine": 261,
        "endColumn": 47,
        "path": "yolov5\\val.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"model.half() if half else model.float()\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 280,
        "column": 16,
        "endLine": 280,
        "endColumn": 116,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 411,
        "column": 4,
        "endLine": 411,
        "endColumn": 65,
        "path": "yolov5\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 413,
        "column": 8,
        "endLine": 413,
        "endColumn": 111,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 418,
        "column": 12,
        "endLine": 418,
        "endColumn": 81,
        "path": "yolov5\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 424,
        "column": 8,
        "endLine": 424,
        "endColumn": 110,
        "path": "yolov5\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "run",
        "line": 432,
        "column": 21,
        "endLine": 432,
        "endColumn": 31,
        "path": "yolov5\\val.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 438,
        "column": 8,
        "endLine": 438,
        "endColumn": 77,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 439,
        "column": 13,
        "endLine": 439,
        "endColumn": 33,
        "path": "yolov5\\val.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 456,
        "column": 15,
        "endLine": 456,
        "endColumn": 24,
        "path": "yolov5\\val.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "val",
        "obj": "run",
        "line": 444,
        "column": 12,
        "endLine": 444,
        "endColumn": 45,
        "path": "yolov5\\val.py",
        "symbol": "import-error",
        "message": "Unable to import 'pycocotools.coco'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "run",
        "line": 444,
        "column": 12,
        "endLine": 444,
        "endColumn": 45,
        "path": "yolov5\\val.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pycocotools.coco.COCO)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "val",
        "obj": "run",
        "line": 445,
        "column": 12,
        "endLine": 445,
        "endColumn": 53,
        "path": "yolov5\\val.py",
        "symbol": "import-error",
        "message": "Unable to import 'pycocotools.cocoeval'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "val",
        "obj": "run",
        "line": 445,
        "column": 12,
        "endLine": 445,
        "endColumn": 53,
        "path": "yolov5\\val.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pycocotools.cocoeval.COCOeval)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 457,
        "column": 12,
        "endLine": 457,
        "endColumn": 58,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "run",
        "line": 463,
        "column": 8,
        "endLine": 463,
        "endColumn": 72,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "val",
        "obj": "run",
        "line": 188,
        "column": 0,
        "endLine": 188,
        "endColumn": 7,
        "path": "yolov5\\val.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (33/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "val",
        "obj": "run",
        "line": 188,
        "column": 0,
        "endLine": 188,
        "endColumn": 7,
        "path": "yolov5\\val.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (147/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "parse_opt",
        "line": 540,
        "column": 4,
        "endLine": 540,
        "endColumn": 7,
        "path": "yolov5\\val.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 603)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "main",
        "line": 548,
        "column": 9,
        "endLine": 548,
        "endColumn": 12,
        "path": "yolov5\\val.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 603)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "main",
        "line": 572,
        "column": 12,
        "endLine": 572,
        "endColumn": 113,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "main",
        "line": 592,
        "column": 20,
        "endLine": 592,
        "endColumn": 72,
        "path": "yolov5\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "val",
        "obj": "main",
        "line": 596,
        "column": 12,
        "endLine": 596,
        "endColumn": 69,
        "path": "yolov5\\val.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 111,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 121,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 148,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 170,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 190,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 191,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 199,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 201,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 208,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 210,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 211,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 212,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 213,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 221,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 223,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 234,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 48,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from ultralytics.utils.plotting import Annotator\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 44,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import DetectMultiBackend\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 51,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.augmentations import classify_transforms\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": 50,
        "endColumn": 96,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": 63,
        "endColumn": 1,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, Profile, check_file, check_img_size, check_imshow, check_requirements, colorstr, cv2, increment_path, print_args, strip_optimizer\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": 64,
        "endColumn": 65,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "classify.predict",
        "obj": "run",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 7,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (17/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "classify.predict",
        "obj": "run",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 7,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (17/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "classify.predict",
        "obj": "run",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 7,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (56/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "classify.predict",
        "obj": "run",
        "line": 150,
        "column": 17,
        "endLine": 150,
        "endColumn": 29,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "run",
        "line": 162,
        "column": 21,
        "endLine": 162,
        "endColumn": 49,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 170,
        "column": 20,
        "endLine": 170,
        "endColumn": 35,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'namedWindow' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 170,
        "column": 44,
        "endLine": 170,
        "endColumn": 61,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'WINDOW_NORMAL' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 170,
        "column": 64,
        "endLine": 170,
        "endColumn": 84,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'WINDOW_KEEPRATIO' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 171,
        "column": 20,
        "endLine": 171,
        "endColumn": 36,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resizeWindow' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 173,
        "column": 16,
        "endLine": 173,
        "endColumn": 27,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'waitKey' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 182,
        "column": 53,
        "endLine": 182,
        "endColumn": 68,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 185,
        "column": 46,
        "endLine": 185,
        "endColumn": 62,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FPS' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 186,
        "column": 48,
        "endLine": 186,
        "endColumn": 72,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_WIDTH' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 187,
        "column": 48,
        "endLine": 187,
        "endColumn": 73,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_HEIGHT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 191,
        "column": 40,
        "endLine": 191,
        "endColumn": 55,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "classify.predict",
        "obj": "run",
        "line": 191,
        "column": 67,
        "endLine": 191,
        "endColumn": 89,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter_fourcc' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "run",
        "line": 195,
        "column": 8,
        "endLine": 195,
        "endColumn": 49,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "run",
        "line": 199,
        "column": 4,
        "endLine": 199,
        "endColumn": 115,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "run",
        "line": 202,
        "column": 8,
        "endLine": 202,
        "endColumn": 72,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "classify.predict",
        "obj": "run",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 7,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (22/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "classify.predict",
        "obj": "run",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 7,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (88/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "run",
        "line": 77,
        "column": 4,
        "endLine": 77,
        "endColumn": 11,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'augment'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "run",
        "line": 78,
        "column": 4,
        "endLine": 78,
        "endColumn": 13,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'visualize'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "parse_opt",
        "line": 227,
        "column": 4,
        "endLine": 227,
        "endColumn": 7,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 240)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "classify.predict",
        "obj": "main",
        "line": 233,
        "column": 9,
        "endLine": 233,
        "endColumn": 12,
        "path": "yolov5\\classify\\predict.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 240)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (170/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 110,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 114,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 129,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 145,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 146,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 149,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 151,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 152,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 171,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 183,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 207,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 208,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 240,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 305,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 314,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 319,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 322,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 326,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 329,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 330,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 331,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 334,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 335,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 339,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 344,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 353,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 354,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 361,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 369,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "classify.train",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 23,
        "path": "yolov5\\classify\\train.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import hub' instead",
        "message-id": "R0402"
    },
    {
        "type": "refactor",
        "module": "classify.train",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 47,
        "path": "yolov5\\classify\\train.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch.optim import lr_scheduler' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 39,
        "endColumn": 36,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from classify import val as validate\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": 40,
        "endColumn": 44,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import attempt_load\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": 41,
        "endColumn": 59,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import ClassificationModel, DetectionModel\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": 42,
        "endColumn": 62,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import create_classification_dataloader\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 57,
        "endColumn": 1,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import DATASETS_DIR, LOGGER, TQDM_BAR_FORMAT, WorkingDirectory, check_git_info, check_git_status, check_requirements, colorstr, download, increment_path, init_seeds, print_args, yaml_save\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": 58,
        "endColumn": 39,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.loggers import GenericLogger\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": 59,
        "endColumn": 34,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.plots import imshow_cls\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": 70,
        "endColumn": 1,
        "path": "yolov5\\classify\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import ModelEMA, de_parallel, model_info, reshape_classifier_output, select_device, smart_DDP, smart_optimizer, smartCrossEntropyLoss, torch_distributed_zero_first\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "",
        "line": 72,
        "column": 17,
        "endLine": 72,
        "endColumn": 44,
        "path": "yolov5\\classify\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "",
        "line": 73,
        "column": 11,
        "endLine": 73,
        "endColumn": 32,
        "path": "yolov5\\classify\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "",
        "line": 74,
        "column": 17,
        "endLine": 74,
        "endColumn": 43,
        "path": "yolov5\\classify\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "refactor",
        "module": "classify.train",
        "obj": "train",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 9,
        "path": "yolov5\\classify\\train.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (53/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "train",
        "line": 78,
        "column": 10,
        "endLine": 78,
        "endColumn": 13,
        "path": "yolov5\\classify\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 381)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "train",
        "line": 107,
        "column": 12,
        "endLine": 107,
        "endColumn": 103,
        "path": "yolov5\\classify\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "train",
        "line": 203,
        "column": 4,
        "endLine": 209,
        "endColumn": 5,
        "path": "yolov5\\classify\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "classify.train",
        "obj": "train",
        "line": 240,
        "column": 22,
        "endLine": 240,
        "endColumn": 29,
        "path": "yolov5\\classify\\train.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "refactor",
        "module": "classify.train",
        "obj": "train",
        "line": 256,
        "column": 12,
        "endLine": 257,
        "endColumn": 38,
        "path": "yolov5\\classify\\train.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'best_fitness = max(best_fitness, fitness)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "train",
        "line": 292,
        "column": 8,
        "endLine": 300,
        "endColumn": 9,
        "path": "yolov5\\classify\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "classify.train",
        "obj": "train",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 9,
        "path": "yolov5\\classify\\train.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (27/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "classify.train",
        "obj": "train",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 9,
        "path": "yolov5\\classify\\train.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (112/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "main",
        "line": 343,
        "column": 9,
        "endLine": 343,
        "endColumn": 12,
        "path": "yolov5\\classify\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 381)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "classify.train",
        "obj": "run",
        "line": 373,
        "column": 4,
        "endLine": 373,
        "endColumn": 7,
        "path": "yolov5\\classify\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 381)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 96,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 100,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 144,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 151,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 154,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 156,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 158,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 162,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 171,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\classify\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 44,
        "path": "yolov5\\classify\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import DetectMultiBackend\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 62,
        "path": "yolov5\\classify\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import create_classification_dataloader\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": 48,
        "endColumn": 1,
        "path": "yolov5\\classify\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, TQDM_BAR_FORMAT, Profile, check_img_size, check_requirements, colorstr, increment_path, print_args\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 65,
        "path": "yolov5\\classify\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "classify.val",
        "obj": "run",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 7,
        "path": "yolov5\\classify\\val.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (16/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "classify.val",
        "obj": "run",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 7,
        "path": "yolov5\\classify\\val.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (16/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "classify.val",
        "obj": "run",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 7,
        "path": "yolov5\\classify\\val.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (45/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 77,
        "column": 8,
        "endLine": 77,
        "endColumn": 47,
        "path": "yolov5\\classify\\val.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"model.half() if half else model.float()\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 96,
        "column": 16,
        "endLine": 96,
        "endColumn": 116,
        "path": "yolov5\\classify\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "classify.val",
        "obj": "run",
        "line": 110,
        "column": 4,
        "endLine": 110,
        "endColumn": 7,
        "path": "yolov5\\classify\\val.py",
        "symbol": "disallowed-name",
        "message": "Disallowed name \"bar\"",
        "message-id": "C0104"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 134,
        "column": 8,
        "endLine": 134,
        "endColumn": 83,
        "path": "yolov5\\classify\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 135,
        "column": 8,
        "endLine": 135,
        "endColumn": 83,
        "path": "yolov5\\classify\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 139,
        "column": 12,
        "endLine": 139,
        "endColumn": 83,
        "path": "yolov5\\classify\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 144,
        "column": 8,
        "endLine": 144,
        "endColumn": 119,
        "path": "yolov5\\classify\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "run",
        "line": 145,
        "column": 8,
        "endLine": 145,
        "endColumn": 69,
        "path": "yolov5\\classify\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "classify.val",
        "obj": "run",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 7,
        "path": "yolov5\\classify\\val.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (57/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "parse_opt",
        "line": 165,
        "column": 4,
        "endLine": 165,
        "endColumn": 7,
        "path": "yolov5\\classify\\val.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 177)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "classify.val",
        "obj": "main",
        "line": 170,
        "column": 9,
        "endLine": 170,
        "endColumn": 12,
        "path": "yolov5\\classify\\val.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 177)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 74,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 83,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 86,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 95,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 132,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 139,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 142,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 154,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 165,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 168,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 178,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 185,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 188,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 202,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 215,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 227,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 232,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 235,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 246,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 251,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 263,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 275,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 278,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 290,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 297,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 300,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (170/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 308,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 318,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 322,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 334,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 344,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 347,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 355,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 356,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 361,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 364,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 379,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 382,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (145/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 391,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 400,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 403,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 410,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 421,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 425,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 434,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 445,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 453,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 460,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 463,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 476,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 480,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 489,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 491,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 514,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 522,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 534,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 562,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 601,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 603,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 606,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 611,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 617,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 618,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 629,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 632,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 680,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 688,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 710,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 766,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 767,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 769,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 780,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 790,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 795,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 803,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 809,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 814,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 818,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 856,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 862,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 863,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 869,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 874,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 881,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 915,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 918,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 921,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 935,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 936,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 950,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 966,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 978,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 983,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1017,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1031,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1063,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1069,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1074,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1077,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1090,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1095,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1109/1000)",
        "message-id": "C0302"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 21,
        "path": "yolov5\\models\\common.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Conv.__init__",
        "line": 78,
        "column": 4,
        "endLine": 78,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Conv.__init__",
        "line": 78,
        "column": 4,
        "endLine": 78,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DWConv.__init__",
        "line": 97,
        "column": 4,
        "endLine": 97,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DWConv.__init__",
        "line": 97,
        "column": 4,
        "endLine": 97,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DWConvTranspose2d.__init__",
        "line": 107,
        "column": 4,
        "endLine": 107,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DWConvTranspose2d.__init__",
        "line": 107,
        "column": 4,
        "endLine": 107,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Bottleneck.__init__",
        "line": 167,
        "column": 4,
        "endLine": 167,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Bottleneck.__init__",
        "line": 167,
        "column": 4,
        "endLine": 167,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "BottleneckCSP.__init__",
        "line": 187,
        "column": 4,
        "endLine": 187,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "BottleneckCSP.__init__",
        "line": 187,
        "column": 4,
        "endLine": 187,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "CrossConv.__init__",
        "line": 213,
        "column": 4,
        "endLine": 213,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "CrossConv.__init__",
        "line": 213,
        "column": 4,
        "endLine": 213,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3.__init__",
        "line": 234,
        "column": 4,
        "endLine": 234,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3.__init__",
        "line": 234,
        "column": 4,
        "endLine": 234,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3x.__init__",
        "line": 253,
        "column": 4,
        "endLine": 253,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3x.__init__",
        "line": 253,
        "column": 4,
        "endLine": 253,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3TR.__init__",
        "line": 265,
        "column": 4,
        "endLine": 265,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3TR.__init__",
        "line": 265,
        "column": 4,
        "endLine": 265,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3SPP.__init__",
        "line": 277,
        "column": 4,
        "endLine": 277,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3SPP.__init__",
        "line": 277,
        "column": 4,
        "endLine": 277,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3Ghost.__init__",
        "line": 289,
        "column": 4,
        "endLine": 289,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "C3Ghost.__init__",
        "line": 289,
        "column": 4,
        "endLine": 289,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Focus.__init__",
        "line": 346,
        "column": 4,
        "endLine": 346,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Focus.__init__",
        "line": 346,
        "column": 4,
        "endLine": 346,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "GhostConv.__init__",
        "line": 363,
        "column": 4,
        "endLine": 363,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "GhostConv.__init__",
        "line": 363,
        "column": 4,
        "endLine": 363,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 462,
        "column": 4,
        "endLine": 462,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 462,
        "column": 4,
        "endLine": 462,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 462,
        "column": 4,
        "endLine": 462,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (80/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 476,
        "column": 8,
        "endLine": 476,
        "endColumn": 70,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.experimental.attempt_download, models.experimental.attempt_load)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 492,
        "column": 12,
        "endLine": 492,
        "endColumn": 51,
        "path": "yolov5\\models\\common.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"model.half() if fp16 else model.float()\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 495,
        "column": 12,
        "endLine": 495,
        "endColumn": 68,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 498,
        "column": 12,
        "endLine": 498,
        "endColumn": 51,
        "path": "yolov5\\models\\common.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"model.half() if fp16 else model.float()\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 506,
        "column": 12,
        "endLine": 506,
        "endColumn": 72,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 510,
        "column": 12,
        "endLine": 510,
        "endColumn": 69,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 512,
        "column": 12,
        "endLine": 512,
        "endColumn": 30,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (onnxruntime)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 519,
        "column": 53,
        "endLine": 519,
        "endColumn": 72,
        "path": "yolov5\\models\\common.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 521,
        "column": 12,
        "endLine": 521,
        "endColumn": 65,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 523,
        "column": 12,
        "endLine": 523,
        "endColumn": 64,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'openvino.runtime'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 523,
        "column": 12,
        "endLine": 523,
        "endColumn": 64,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (openvino.runtime.Core, openvino.runtime.Layout, openvino.runtime.get_batch)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 537,
        "column": 12,
        "endLine": 537,
        "endColumn": 65,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 538,
        "column": 12,
        "endLine": 538,
        "endColumn": 34,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorrt)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 538,
        "column": 12,
        "endLine": 538,
        "endColumn": 34,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorrt'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 585,
        "column": 12,
        "endLine": 585,
        "endColumn": 63,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 586,
        "column": 12,
        "endLine": 586,
        "endColumn": 36,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (coremltools)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 586,
        "column": 12,
        "endLine": 586,
        "endColumn": 36,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'coremltools'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 590,
        "column": 12,
        "endLine": 590,
        "endColumn": 78,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 591,
        "column": 12,
        "endLine": 591,
        "endColumn": 35,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 591,
        "column": 12,
        "endLine": 591,
        "endColumn": 35,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 596,
        "column": 12,
        "endLine": 596,
        "endColumn": 76,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 597,
        "column": 12,
        "endLine": 597,
        "endColumn": 35,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 597,
        "column": 12,
        "endLine": 597,
        "endColumn": 35,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 619,
        "column": 16,
        "endLine": 619,
        "endColumn": 81,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tflite_runtime.interpreter.Interpreter, tflite_runtime.interpreter.load_delegate)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 621,
        "column": 16,
        "endLine": 621,
        "endColumn": 39,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tensorflow)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 628,
        "column": 16,
        "endLine": 628,
        "endColumn": 85,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 634,
        "column": 16,
        "endLine": 634,
        "endColumn": 76,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 648,
        "column": 12,
        "endLine": 648,
        "endColumn": 69,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 650,
        "column": 12,
        "endLine": 650,
        "endColumn": 42,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (paddle.inference)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 650,
        "column": 12,
        "endLine": 650,
        "endColumn": 42,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'paddle.inference'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 662,
        "column": 12,
        "endLine": 662,
        "endColumn": 67,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 664,
        "column": 12,
        "endLine": 664,
        "endColumn": 54,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.triton.TritonRemoteModel)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 462,
        "column": 4,
        "endLine": 462,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (39/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 462,
        "column": 4,
        "endLine": 462,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (170/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 482,
        "column": 8,
        "endLine": 482,
        "endColumn": 12,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'nhwc'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 483,
        "column": 8,
        "endLine": 483,
        "endColumn": 14,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'stride'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 508,
        "column": 12,
        "endLine": 508,
        "endColumn": 15,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'net'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 533,
        "column": 16,
        "endLine": 533,
        "endColumn": 26,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'batch_size'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 534,
        "column": 12,
        "endLine": 534,
        "endColumn": 29,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'ov_compiled_model'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 551,
        "column": 12,
        "endLine": 551,
        "endColumn": 19,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'dynamic'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 582,
        "column": 12,
        "endLine": 582,
        "endColumn": 25,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'binding_addrs'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 616,
        "column": 12,
        "endLine": 616,
        "endColumn": 23,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'frozen_func'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 637,
        "column": 12,
        "endLine": 637,
        "endColumn": 25,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'input_details'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 638,
        "column": 12,
        "endLine": 638,
        "endColumn": 26,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'output_details'",
        "message-id": "W0641"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.__init__",
        "line": 659,
        "column": 12,
        "endLine": 659,
        "endColumn": 24,
        "path": "yolov5\\models\\common.py",
        "symbol": "possibly-unused-variable",
        "message": "Possibly unused variable 'input_handle'",
        "message-id": "W0641"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 679,
        "column": 4,
        "endLine": 679,
        "endColumn": 15,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (21/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 739,
        "column": 16,
        "endLine": 739,
        "endColumn": 21,
        "path": "yolov5\\models\\common.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 756,
        "column": 8,
        "endLine": 759,
        "endColumn": 37,
        "path": "yolov5\\models\\common.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 679,
        "column": 4,
        "endLine": 679,
        "endColumn": 15,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (24/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 679,
        "column": 4,
        "endLine": 679,
        "endColumn": 15,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (73/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 681,
        "column": 8,
        "endLine": 681,
        "endColumn": 9,
        "path": "yolov5\\models\\common.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'b'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "DetectMultiBackend.forward",
        "line": 681,
        "column": 11,
        "endLine": 681,
        "endColumn": 13,
        "path": "yolov5\\models\\common.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'ch'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend._model_type",
        "line": 781,
        "column": 8,
        "endLine": 781,
        "endColumn": 41,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (export.export_formats)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "DetectMultiBackend._model_type",
        "line": 782,
        "column": 8,
        "endLine": 782,
        "endColumn": 42,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.downloads.is_url)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "AutoShape._apply",
        "line": 827,
        "column": 4,
        "endLine": 827,
        "endColumn": 14,
        "path": "yolov5\\models\\common.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 3 in 'Module._apply' and is now 2 in overriding 'AutoShape._apply' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "AutoShape._apply",
        "line": 833,
        "column": 8,
        "endLine": 833,
        "endColumn": 33,
        "path": "yolov5\\models\\common.py",
        "symbol": "self-cls-assignment",
        "message": "Invalid assignment to self in method",
        "message-id": "W0642"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "AutoShape.forward",
        "line": 843,
        "column": 4,
        "endLine": 843,
        "endColumn": 15,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (19/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "AutoShape.forward",
        "line": 874,
        "column": 39,
        "endLine": 874,
        "endColumn": 68,
        "path": "yolov5\\models\\common.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "AutoShape.forward",
        "line": 881,
        "column": 54,
        "endLine": 881,
        "endColumn": 66,
        "path": "yolov5\\models\\common.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'cvtColor' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "AutoShape.forward",
        "line": 881,
        "column": 71,
        "endLine": 881,
        "endColumn": 89,
        "path": "yolov5\\models\\common.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_GRAY2BGR' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "AutoShape.forward",
        "line": 843,
        "column": 52,
        "endLine": 843,
        "endColumn": 59,
        "path": "yolov5\\models\\common.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'profile'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections",
        "line": 914,
        "column": 0,
        "endLine": 914,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (12/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections.__init__",
        "line": 917,
        "column": 4,
        "endLine": 917,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections.__init__",
        "line": 917,
        "column": 4,
        "endLine": 917,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "Detections.__init__",
        "line": 932,
        "column": 23,
        "endLine": 932,
        "endColumn": 26,
        "path": "yolov5\\models\\common.py",
        "symbol": "no-member",
        "message": "Instance of 'int' has no 't' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 935,
        "column": 4,
        "endLine": 935,
        "endColumn": 12,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 935,
        "column": 4,
        "endLine": 935,
        "endColumn": 12,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 935,
        "column": 4,
        "endLine": 935,
        "endColumn": 12,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (23/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 969,
        "column": 20,
        "endLine": 969,
        "endColumn": 55,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-error",
        "message": "Unable to import 'IPython.display'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 969,
        "column": 20,
        "endLine": 969,
        "endColumn": 55,
        "path": "yolov5\\models\\common.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (IPython.display.display)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 978,
        "column": 20,
        "endLine": 978,
        "endColumn": 108,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 986,
        "column": 16,
        "endLine": 986,
        "endColumn": 61,
        "path": "yolov5\\models\\common.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 935,
        "column": 4,
        "endLine": 935,
        "endColumn": 12,
        "path": "yolov5\\models\\common.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Detections._run",
        "line": 935,
        "column": 4,
        "endLine": 935,
        "endColumn": 12,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (17/12)",
        "message-id": "R0912"
    },
    {
        "type": "convention",
        "module": "models.common",
        "obj": "Detections.print",
        "line": 1056,
        "column": 20,
        "endLine": 1056,
        "endColumn": 34,
        "path": "yolov5\\models\\common.py",
        "symbol": "unnecessary-dunder-call",
        "message": "Unnecessarily calls dunder method __str__. Use str built-in function.",
        "message-id": "C2801"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Classify.__init__",
        "line": 1092,
        "column": 4,
        "endLine": 1092,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.common",
        "obj": "Classify.__init__",
        "line": 1092,
        "column": 4,
        "endLine": 1092,
        "endColumn": 16,
        "path": "yolov5\\models\\common.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 57,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 90,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 107,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "",
        "line": 129,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "models.experimental",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 21,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "refactor",
        "module": "models.experimental",
        "obj": "MixConv2d.__init__",
        "line": 42,
        "column": 4,
        "endLine": 42,
        "endColumn": 16,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.experimental",
        "obj": "MixConv2d.__init__",
        "line": 42,
        "column": 4,
        "endLine": 42,
        "endColumn": 16,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "models.experimental",
        "obj": "attempt_load",
        "line": 128,
        "column": 4,
        "endLine": 128,
        "endColumn": 16,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'stride' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "models.experimental",
        "obj": "attempt_load",
        "line": 94,
        "column": 4,
        "endLine": 94,
        "endColumn": 41,
        "path": "yolov5\\models\\experimental.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.yolo.Detect, models.yolo.Model)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 87,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 92,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 96,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 104,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 111,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 112,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 124,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 141,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 142,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 158,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 183,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 187,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 191,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 201,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 205,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 210,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 214,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 226,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 233,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 236,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 244,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 249,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 252,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 273,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 277,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 290,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 293,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 302,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 306,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 315,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 327,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 331,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 341,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 345,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 353,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 361,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 367,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 370,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 380,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 390,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 393,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 404,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 413,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 431,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 448,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 455,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 460,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 469,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 472,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 482,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 487,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 491,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 498,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 502,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 510,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 519,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 524,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 597,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 604,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 607,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 624,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 641,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 664,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 669,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 677,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 690,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 697,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 725,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 737,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 756,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 772,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 776,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 781,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\tf.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 18,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import numpy as np\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "models.tf",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 23,
        "path": "yolov5\\models\\tf.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 23,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import tensorflow as tf\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 12,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import torch\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 21,
        "path": "yolov5\\models\\tf.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 21,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import torch.nn as nn\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "error",
        "module": "models.tf",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 28,
        "path": "yolov5\\models\\tf.py",
        "symbol": "import-error",
        "message": "Unable to import 'tensorflow'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 28,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from tensorflow import keras\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 44,
        "endColumn": 1,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import C3, SPP, SPPF, Bottleneck, BottleneckCSP, C3x, Concat, Conv, CrossConv, DWConv, DWConvTranspose2d, Focus, autopad\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 55,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import MixConv2d, attempt_load\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 39,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import Detect, Segment\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 34,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.activations import SiLU\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 60,
        "path": "yolov5\\models\\tf.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, make_divisible, print_args\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBN",
        "line": 51,
        "column": 0,
        "endLine": 51,
        "endColumn": 10,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFPad",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 11,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConv.__init__",
        "line": 94,
        "column": 4,
        "endLine": 94,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConv.__init__",
        "line": 94,
        "column": 4,
        "endLine": 94,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFConv.__init__",
        "line": 94,
        "column": 23,
        "endLine": 94,
        "endColumn": 25,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'c1'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConv",
        "line": 91,
        "column": 0,
        "endLine": 91,
        "endColumn": 12,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDWConv.__init__",
        "line": 126,
        "column": 4,
        "endLine": 126,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDWConv.__init__",
        "line": 126,
        "column": 4,
        "endLine": 126,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDWConv",
        "line": 123,
        "column": 0,
        "endLine": 123,
        "endColumn": 14,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDWConvTranspose2d.__init__",
        "line": 156,
        "column": 4,
        "endLine": 156,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDWConvTranspose2d.__init__",
        "line": 156,
        "column": 4,
        "endLine": 156,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDWConvTranspose2d",
        "line": 153,
        "column": 0,
        "endLine": 153,
        "endColumn": 25,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFFocus.__init__",
        "line": 189,
        "column": 4,
        "endLine": 189,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFFocus.__init__",
        "line": 189,
        "column": 4,
        "endLine": 189,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFFocus",
        "line": 186,
        "column": 0,
        "endLine": 186,
        "endColumn": 13,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBottleneck.__init__",
        "line": 212,
        "column": 4,
        "endLine": 212,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBottleneck.__init__",
        "line": 212,
        "column": 4,
        "endLine": 212,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBottleneck",
        "line": 209,
        "column": 0,
        "endLine": 209,
        "endColumn": 18,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFCrossConv.__init__",
        "line": 235,
        "column": 4,
        "endLine": 235,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFCrossConv.__init__",
        "line": 235,
        "column": 4,
        "endLine": 235,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFCrossConv",
        "line": 232,
        "column": 0,
        "endLine": 232,
        "endColumn": 17,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConv2d.__init__",
        "line": 251,
        "column": 4,
        "endLine": 251,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConv2d.__init__",
        "line": 251,
        "column": 4,
        "endLine": 251,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFConv2d.__init__",
        "line": 251,
        "column": 23,
        "endLine": 251,
        "endColumn": 25,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'c1'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConv2d",
        "line": 248,
        "column": 0,
        "endLine": 248,
        "endColumn": 14,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBottleneckCSP.__init__",
        "line": 275,
        "column": 4,
        "endLine": 275,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBottleneckCSP.__init__",
        "line": 275,
        "column": 4,
        "endLine": 275,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFBottleneckCSP.__init__.<lambda>",
        "line": 289,
        "column": 19,
        "endLine": 289,
        "endColumn": 55,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unnecessary-lambda",
        "message": "Lambda may not be necessary",
        "message-id": "W0108"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFBottleneckCSP",
        "line": 272,
        "column": 0,
        "endLine": 272,
        "endColumn": 21,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFC3.__init__",
        "line": 304,
        "column": 4,
        "endLine": 304,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFC3.__init__",
        "line": 304,
        "column": 4,
        "endLine": 304,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFC3",
        "line": 301,
        "column": 0,
        "endLine": 301,
        "endColumn": 10,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFC3x.__init__",
        "line": 329,
        "column": 4,
        "endLine": 329,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFC3x.__init__",
        "line": 329,
        "column": 4,
        "endLine": 329,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFC3x",
        "line": 326,
        "column": 0,
        "endLine": 326,
        "endColumn": 11,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFSPP",
        "line": 349,
        "column": 0,
        "endLine": 349,
        "endColumn": 11,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFSPPF",
        "line": 366,
        "column": 0,
        "endLine": 366,
        "endColumn": 12,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDetect",
        "line": 389,
        "column": 0,
        "endLine": 389,
        "endColumn": 14,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (11/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDetect.__init__",
        "line": 392,
        "column": 4,
        "endLine": 392,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDetect.__init__",
        "line": 392,
        "column": 4,
        "endLine": 392,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFDetect",
        "line": 389,
        "column": 0,
        "endLine": 389,
        "endColumn": 14,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFSegment.__init__",
        "line": 447,
        "column": 4,
        "endLine": 447,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFSegment.__init__",
        "line": 447,
        "column": 4,
        "endLine": 447,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFSegment.call",
        "line": 459,
        "column": 4,
        "endLine": 459,
        "endColumn": 12,
        "path": "yolov5\\models\\tf.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'inputs' has been renamed to 'x' in overriding 'TFSegment.call' method",
        "message-id": "W0237"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFSegment",
        "line": 444,
        "column": 0,
        "endLine": 444,
        "endColumn": 15,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFProto",
        "line": 468,
        "column": 0,
        "endLine": 468,
        "endColumn": 13,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFUpsample.__init__",
        "line": 489,
        "column": 23,
        "endLine": 489,
        "endColumn": 27,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'size'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFUpsample.__init__",
        "line": 489,
        "column": 49,
        "endLine": 489,
        "endColumn": 50,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'w'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFUpsample",
        "line": 486,
        "column": 0,
        "endLine": 486,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFConcat.__init__",
        "line": 512,
        "column": 36,
        "endLine": 512,
        "endColumn": 37,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'w'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFConcat",
        "line": 509,
        "column": 0,
        "endLine": 509,
        "endColumn": 14,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 523,
        "column": 0,
        "endLine": 523,
        "endColumn": 15,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (28/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 594,
        "column": 8,
        "endLine": 594,
        "endColumn": 10,
        "path": "yolov5\\models\\tf.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'np' from outer scope (line 24)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 525,
        "column": 4,
        "endLine": 525,
        "endColumn": 96,
        "path": "yolov5\\models\\tf.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 541,
        "column": 12,
        "endLine": 541,
        "endColumn": 19,
        "path": "yolov5\\models\\tf.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 544,
        "column": 26,
        "endLine": 544,
        "endColumn": 33,
        "path": "yolov5\\models\\tf.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 585,
        "column": 15,
        "endLine": 585,
        "endColumn": 52,
        "path": "yolov5\\models\\tf.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_model",
        "line": 596,
        "column": 8,
        "endLine": 596,
        "endColumn": 85,
        "path": "yolov5\\models\\tf.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFModel.__init__",
        "line": 606,
        "column": 4,
        "endLine": 606,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFModel.__init__",
        "line": 606,
        "column": 4,
        "endLine": 606,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "models.tf",
        "obj": "TFModel.__init__",
        "line": 614,
        "column": 12,
        "endLine": 614,
        "endColumn": 23,
        "path": "yolov5\\models\\tf.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (yaml)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFModel.__init__",
        "line": 617,
        "column": 17,
        "endLine": 617,
        "endColumn": 26,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "TFModel.__init__",
        "line": 622,
        "column": 12,
        "endLine": 622,
        "endColumn": 78,
        "path": "yolov5\\models\\tf.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFModel.predict",
        "line": 626,
        "column": 4,
        "endLine": 626,
        "endColumn": 15,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFModel.predict",
        "line": 626,
        "column": 4,
        "endLine": 626,
        "endColumn": 15,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFModel.predict",
        "line": 626,
        "column": 4,
        "endLine": 626,
        "endColumn": 15,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "TFModel",
        "line": 603,
        "column": 0,
        "endLine": 603,
        "endColumn": 13,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "AgnosticNMS.call",
        "line": 679,
        "column": 19,
        "endLine": 679,
        "endColumn": 24,
        "path": "yolov5\\models\\tf.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "AgnosticNMS._nms",
        "line": 689,
        "column": 4,
        "endLine": 689,
        "endColumn": 12,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "AgnosticNMS",
        "line": 676,
        "column": 0,
        "endLine": 676,
        "endColumn": 17,
        "path": "yolov5\\models\\tf.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "models.tf",
        "obj": "activations",
        "line": 726,
        "column": 4,
        "endLine": 733,
        "endColumn": 96,
        "path": "yolov5\\models\\tf.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "activations.<lambda>",
        "line": 731,
        "column": 15,
        "endLine": 731,
        "endColumn": 51,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unnecessary-lambda",
        "message": "Lambda may not be necessary",
        "message-id": "W0108"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "activations",
        "line": 733,
        "column": 8,
        "endLine": 733,
        "endColumn": 96,
        "path": "yolov5\\models\\tf.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "representative_dataset_gen",
        "line": 740,
        "column": 12,
        "endLine": 740,
        "endColumn": 16,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'path'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "representative_dataset_gen",
        "line": 740,
        "column": 23,
        "endLine": 740,
        "endColumn": 27,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'im0s'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "representative_dataset_gen",
        "line": 740,
        "column": 29,
        "endLine": 740,
        "endColumn": 36,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'vid_cap'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "representative_dataset_gen",
        "line": 740,
        "column": 38,
        "endLine": 740,
        "endColumn": 44,
        "path": "yolov5\\models\\tf.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'string'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "parse_opt",
        "line": 784,
        "column": 4,
        "endLine": 784,
        "endColumn": 7,
        "path": "yolov5\\models\\tf.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 796)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.tf",
        "obj": "main",
        "line": 790,
        "column": 9,
        "endLine": 790,
        "endColumn": 12,
        "path": "yolov5\\models\\tf.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 796)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 80,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 88,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 93,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 124,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 125,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 131,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 134,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 144,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 156,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 162,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 166,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 176,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 178,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 201,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 205,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 219,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 255,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 267,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 273,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 281,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 305,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 323,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 338,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 341,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (173/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 346,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 349,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 356,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 378,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 389,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 455,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 469,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "",
        "line": 436,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "fixme",
        "message": "TODO: channel, gw, gd",
        "message-id": "W0511"
    },
    {
        "type": "refactor",
        "module": "models.yolo",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 21,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 51,
        "endColumn": 1,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import C3, C3SPP, C3TR, SPP, SPPF, Bottleneck, BottleneckCSP, C3Ghost, C3x, Classify, Concat, Contract, Conv, CrossConv, DetectMultiBackend, DWConv, DWConvTranspose2d, Expand, Focus, GhostBottleneck, GhostConv, Proto\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 41,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import MixConv2d\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 47,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.autoanchor import check_anchor_order\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": 54,
        "endColumn": 97,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, check_version, check_yaml, colorstr, make_divisible, print_args\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": 55,
        "endColumn": 45,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.plots import feature_visualization\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "",
        "line": 56,
        "column": 0,
        "endLine": 64,
        "endColumn": 1,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import fuse_conv_and_bn, initialize_weights, model_info, profile, scale_img, select_device, time_sync\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "models.yolo",
        "obj": "Detect",
        "line": 72,
        "column": 0,
        "endLine": 72,
        "endColumn": 12,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (8/7)",
        "message-id": "R0902"
    },
    {
        "type": "error",
        "module": "models.yolo",
        "obj": "Detect.forward",
        "line": 106,
        "column": 61,
        "endLine": 106,
        "endColumn": 72,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "unsubscriptable-object",
        "message": "Value 'self.stride' is unsubscriptable",
        "message-id": "E1136"
    },
    {
        "type": "error",
        "module": "models.yolo",
        "obj": "Detect.forward",
        "line": 111,
        "column": 51,
        "endLine": 111,
        "endColumn": 62,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "unsubscriptable-object",
        "message": "Value 'self.stride' is unsubscriptable",
        "message-id": "E1136"
    },
    {
        "type": "error",
        "module": "models.yolo",
        "obj": "Detect._make_grid",
        "line": 126,
        "column": 41,
        "endLine": 126,
        "endColumn": 52,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "unsubscriptable-object",
        "message": "Value 'self.stride' is unsubscriptable",
        "message-id": "E1136"
    },
    {
        "type": "refactor",
        "module": "models.yolo",
        "obj": "Segment.__init__",
        "line": 133,
        "column": 4,
        "endLine": 133,
        "endColumn": 16,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "models.yolo",
        "obj": "Segment.__init__",
        "line": 133,
        "column": 4,
        "endLine": 133,
        "endColumn": 16,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel.forward",
        "line": 155,
        "column": 25,
        "endLine": 155,
        "endColumn": 32,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'profile' from outer scope (line 56)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel._forward_once",
        "line": 161,
        "column": 31,
        "endLine": 161,
        "endColumn": 38,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'profile' from outer scope (line 56)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel._profile_one_layer",
        "line": 184,
        "column": 12,
        "endLine": 184,
        "endColumn": 86,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel._profile_one_layer",
        "line": 185,
        "column": 8,
        "endLine": 185,
        "endColumn": 71,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel._profile_one_layer",
        "line": 187,
        "column": 12,
        "endLine": 187,
        "endColumn": 72,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel._apply",
        "line": 204,
        "column": 4,
        "endLine": 204,
        "endColumn": 14,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 3 in 'Module._apply' and is now 2 in overriding 'BaseModel._apply' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "BaseModel._apply",
        "line": 208,
        "column": 8,
        "endLine": 208,
        "endColumn": 33,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "self-cls-assignment",
        "message": "Invalid assignment to self in method",
        "message-id": "W0642"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "DetectionModel.__init__",
        "line": 221,
        "column": 23,
        "endLine": 221,
        "endColumn": 26,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'cfg' from outer scope (line 488)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "models.yolo",
        "obj": "DetectionModel.__init__",
        "line": 227,
        "column": 12,
        "endLine": 227,
        "endColumn": 23,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (yaml)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "DetectionModel.__init__",
        "line": 236,
        "column": 12,
        "endLine": 236,
        "endColumn": 83,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "DetectionModel.__init__",
        "line": 239,
        "column": 12,
        "endLine": 239,
        "endColumn": 80,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "models.yolo",
        "obj": "DetectionModel.__init__",
        "line": 257,
        "column": 12,
        "endLine": 257,
        "endColumn": 21,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "no-member",
        "message": "Instance of 'Sequential' has no 'anchors' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "DetectionModel.forward",
        "line": 266,
        "column": 4,
        "endLine": 266,
        "endColumn": 15,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'profile' has been renamed to 'augment' in overriding 'DetectionModel.forward' method",
        "message-id": "W0237"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "DetectionModel.forward",
        "line": 266,
        "column": 4,
        "endLine": 266,
        "endColumn": 15,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "arguments-renamed",
        "message": "Parameter 'visualize' has been renamed to 'profile' in overriding 'DetectionModel.forward' method",
        "message-id": "W0237"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "DetectionModel.forward",
        "line": 266,
        "column": 40,
        "endLine": 266,
        "endColumn": 47,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'profile' from outer scope (line 56)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "SegmentationModel.__init__",
        "line": 340,
        "column": 23,
        "endLine": 340,
        "endColumn": 26,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'cfg' from outer scope (line 488)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "ClassificationModel.__init__",
        "line": 348,
        "column": 23,
        "endLine": 348,
        "endColumn": 26,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'cfg' from outer scope (line 488)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "ClassificationModel.__init__",
        "line": 348,
        "column": 33,
        "endLine": 348,
        "endColumn": 38,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'model' from outer scope (line 478)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "ClassificationModel.__init__",
        "line": 353,
        "column": 8,
        "endLine": 353,
        "endColumn": 100,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"self._from_detection_model(model, nc, cutoff) if model is not None else self._from_yaml(cfg)\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "ClassificationModel._from_detection_model",
        "line": 355,
        "column": 36,
        "endLine": 355,
        "endColumn": 41,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'model' from outer scope (line 478)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "ClassificationModel._from_yaml",
        "line": 372,
        "column": 25,
        "endLine": 372,
        "endColumn": 28,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'cfg' from outer scope (line 488)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "ClassificationModel._from_yaml",
        "line": 372,
        "column": 25,
        "endLine": 372,
        "endColumn": 28,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'cfg'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 377,
        "column": 0,
        "endLine": 377,
        "endColumn": 15,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (25/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 379,
        "column": 4,
        "endLine": 379,
        "endColumn": 96,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 389,
        "column": 27,
        "endLine": 389,
        "endColumn": 36,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 390,
        "column": 8,
        "endLine": 390,
        "endColumn": 55,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 398,
        "column": 12,
        "endLine": 398,
        "endColumn": 19,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 401,
        "column": 26,
        "endLine": 401,
        "endColumn": 33,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 454,
        "column": 8,
        "endLine": 454,
        "endColumn": 83,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "models.yolo",
        "obj": "parse_model",
        "line": 377,
        "column": 0,
        "endLine": 377,
        "endColumn": 15,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "models.yolo",
        "obj": "",
        "line": 491,
        "column": 19,
        "endLine": 491,
        "endColumn": 28,
        "path": "yolov5\\models\\yolo.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 9,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (123/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 100,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 134,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 145,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 150,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 166,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 173,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 174,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 176,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 177,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 195,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 211,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 215,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 243,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 244,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 252,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 261,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 265,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 267,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 268,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 275,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 278,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 283,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 285,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 286,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 292,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 300,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 70,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from ultralytics.utils.plotting import Annotator, colors, save_one_box\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 44,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import DetectMultiBackend\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 96,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 64,
        "endColumn": 1,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, Profile, check_file, check_img_size, check_imshow, check_requirements, colorstr, cv2, increment_path, non_max_suppression, print_args, scale_boxes, scale_segments, strip_optimizer\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 65,
        "column": 0,
        "endLine": 65,
        "endColumn": 83,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.general import masks2segments, process_mask, process_mask_native\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 65,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "refactor",
        "module": "segment.predict",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (28/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "segment.predict",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (28/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "segment.predict",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (77/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "segment.predict",
        "obj": "run",
        "line": 167,
        "column": 17,
        "endLine": 167,
        "endColumn": 29,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "run",
        "line": 206,
        "column": 29,
        "endLine": 206,
        "endColumn": 57,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 222,
        "column": 20,
        "endLine": 222,
        "endColumn": 35,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'namedWindow' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 222,
        "column": 44,
        "endLine": 222,
        "endColumn": 61,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'WINDOW_NORMAL' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 222,
        "column": 64,
        "endLine": 222,
        "endColumn": 84,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'WINDOW_KEEPRATIO' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 223,
        "column": 20,
        "endLine": 223,
        "endColumn": 36,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resizeWindow' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 225,
        "column": 19,
        "endLine": 225,
        "endColumn": 30,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'waitKey' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "segment.predict",
        "obj": "run",
        "line": 226,
        "column": 20,
        "endLine": 226,
        "endColumn": 26,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "consider-using-sys-exit",
        "message": "Consider using 'sys.exit' instead",
        "message-id": "R1722"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 235,
        "column": 53,
        "endLine": 235,
        "endColumn": 68,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 238,
        "column": 46,
        "endLine": 238,
        "endColumn": 62,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FPS' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 239,
        "column": 48,
        "endLine": 239,
        "endColumn": 72,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_WIDTH' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 240,
        "column": 48,
        "endLine": 240,
        "endColumn": 73,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_HEIGHT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 244,
        "column": 40,
        "endLine": 244,
        "endColumn": 55,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "segment.predict",
        "obj": "run",
        "line": 244,
        "column": 67,
        "endLine": 244,
        "endColumn": 89,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoWriter_fourcc' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "run",
        "line": 248,
        "column": 8,
        "endLine": 248,
        "endColumn": 90,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "run",
        "line": 248,
        "column": 36,
        "endLine": 248,
        "endColumn": 39,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'det'",
        "message-id": "W0631"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "run",
        "line": 252,
        "column": 4,
        "endLine": 252,
        "endColumn": 115,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "run",
        "line": 255,
        "column": 8,
        "endLine": 255,
        "endColumn": 72,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "segment.predict",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (30/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "segment.predict",
        "obj": "run",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 7,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (107/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "parse_opt",
        "line": 293,
        "column": 4,
        "endLine": 293,
        "endColumn": 7,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 306)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "segment.predict",
        "obj": "main",
        "line": 299,
        "column": 9,
        "endLine": 299,
        "endColumn": 12,
        "path": "yolov5\\segment\\predict.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 306)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (121/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (165/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 100,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 168,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 177,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 178,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 183,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 189,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 192,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 211,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 231,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 237,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 238,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 269,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 292,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 311,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 317,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 321,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 333,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 341,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 353,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 358,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 361,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 366,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 370,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 379,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 380,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 385,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 408,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 420,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 424,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 433,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 453,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 496,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 497,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 499,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 523,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 534,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 550,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 552,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 553,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 555,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 556,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 558,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 563,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 566,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 569,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 570,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 571,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 572,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 575,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 578,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 579,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 580,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 581,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 583,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 586,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 587,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 593,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 623,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 625,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 636,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 637,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 688,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 724,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 751,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\train.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 21,
        "path": "yolov5\\segment\\train.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 30,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import segment.val as validate\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": 44,
        "endColumn": 44,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.experimental import attempt_load\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 41,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import SegmentationModel\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 42,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.autoanchor import check_anchors\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": 47,
        "endColumn": 50,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.autobatch import check_train_batch_size\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": 48,
        "endColumn": 37,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.callbacks import Callbacks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": 49,
        "endColumn": 52,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.downloads import attempt_download, is_url\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": 74,
        "endColumn": 1,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, TQDM_BAR_FORMAT, check_amp, check_dataset, check_file, check_git_info, check_git_status, check_img_size, check_requirements, check_suffix, check_yaml, colorstr, get_latest_run, increment_path, init_seeds, intersect_dicts, labels_to_class_weights, labels_to_image_weights, one_cycle, print_args, print_mutation, strip_optimizer, yaml_save\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": 75,
        "endColumn": 39,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.loggers import GenericLogger\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 76,
        "column": 0,
        "endLine": 76,
        "endColumn": 48,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.plots import plot_evolve, plot_labels\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 77,
        "column": 0,
        "endLine": 77,
        "endColumn": 55,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.dataloaders import create_dataloader\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 42,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.loss import ComputeLoss\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": 79,
        "endColumn": 47,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.metrics import KEYS, fitness\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 80,
        "column": 0,
        "endLine": 80,
        "endColumn": 78,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.plots import plot_images_and_masks, plot_results_with_masks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.train",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": 90,
        "endColumn": 1,
        "path": "yolov5\\segment\\train.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import EarlyStopping, ModelEMA, de_parallel, select_device, smart_DDP, smart_optimizer, smart_resume, torch_distributed_zero_first\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "",
        "line": 92,
        "column": 17,
        "endLine": 92,
        "endColumn": 44,
        "path": "yolov5\\segment\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "",
        "line": 93,
        "column": 11,
        "endLine": 93,
        "endColumn": 32,
        "path": "yolov5\\segment\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "",
        "line": 94,
        "column": 17,
        "endLine": 94,
        "endColumn": 43,
        "path": "yolov5\\segment\\train.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "train",
        "line": 98,
        "column": 0,
        "endLine": 98,
        "endColumn": 9,
        "path": "yolov5\\segment\\train.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (94/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 98,
        "column": 15,
        "endLine": 98,
        "endColumn": 18,
        "path": "yolov5\\segment\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 763)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 144,
        "column": 13,
        "endLine": 144,
        "endColumn": 39,
        "path": "yolov5\\segment\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 146,
        "column": 4,
        "endLine": 146,
        "endColumn": 94,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 183,
        "column": 8,
        "endLine": 183,
        "endColumn": 93,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 194,
        "column": 12,
        "endLine": 194,
        "endColumn": 40,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "segment.train",
        "obj": "train",
        "line": 204,
        "column": 8,
        "endLine": 204,
        "endColumn": 14,
        "path": "yolov5\\segment\\train.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'logger' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 327,
        "column": 4,
        "endLine": 332,
        "endColumn": 5,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 351,
        "column": 8,
        "endLine": 354,
        "endColumn": 9,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "train",
        "line": 455,
        "column": 12,
        "endLine": 456,
        "endColumn": 33,
        "path": "yolov5\\segment\\train.py",
        "symbol": "consider-using-max-builtin",
        "message": "Consider using 'best_fitness = max(best_fitness, fi)' instead of unnecessary if block",
        "message-id": "R1731"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 499,
        "column": 8,
        "endLine": 499,
        "endColumn": 110,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 504,
        "column": 20,
        "endLine": 504,
        "endColumn": 55,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "train",
        "line": 536,
        "column": 12,
        "endLine": 536,
        "endColumn": 73,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "train",
        "line": 98,
        "column": 0,
        "endLine": 98,
        "endColumn": 9,
        "path": "yolov5\\segment\\train.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (53/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "train",
        "line": 98,
        "column": 0,
        "endLine": 98,
        "endColumn": 9,
        "path": "yolov5\\segment\\train.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (210/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "main",
        "line": 592,
        "column": 0,
        "endLine": 592,
        "endColumn": 8,
        "path": "yolov5\\segment\\train.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (27/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "main",
        "line": 592,
        "column": 9,
        "endLine": 592,
        "endColumn": 12,
        "path": "yolov5\\segment\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 763)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "main",
        "line": 605,
        "column": 17,
        "endLine": 605,
        "endColumn": 48,
        "path": "yolov5\\segment\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "main",
        "line": 682,
        "column": 13,
        "endLine": 682,
        "endColumn": 43,
        "path": "yolov5\\segment\\train.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "main",
        "line": 693,
        "column": 12,
        "endLine": 700,
        "endColumn": 13,
        "path": "yolov5\\segment\\train.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "main",
        "line": 742,
        "column": 8,
        "endLine": 746,
        "endColumn": 9,
        "path": "yolov5\\segment\\train.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "main",
        "line": 592,
        "column": 0,
        "endLine": 592,
        "endColumn": 8,
        "path": "yolov5\\segment\\train.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (22/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "segment.train",
        "obj": "main",
        "line": 592,
        "column": 0,
        "endLine": 592,
        "endColumn": 8,
        "path": "yolov5\\segment\\train.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (79/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "segment.train",
        "obj": "run",
        "line": 755,
        "column": 4,
        "endLine": 755,
        "endColumn": 7,
        "path": "yolov5\\segment\\train.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 763)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 74,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 87,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 89,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 117,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 133,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 135,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 144,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 187,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 199,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 208,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 215,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 241,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 244,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 299,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 307,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 310,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 325,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 347,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 350,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 361,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 363,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 370,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 393,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 404,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 411,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 415,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 431,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 443,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 450,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 454,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 455,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 457,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 463,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 468,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 469,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 471,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 473,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 485,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 490,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 492,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 499,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 505,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 507,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 517,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\segment\\val.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": 41,
        "endColumn": 31,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import torch.nn.functional as F\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 44,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.common import DetectMultiBackend\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": 44,
        "endColumn": 41,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from models.yolo import SegmentationModel\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 45,
        "column": 0,
        "endLine": 45,
        "endColumn": 37,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.callbacks import Callbacks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 63,
        "endColumn": 1,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import LOGGER, NUM_THREADS, TQDM_BAR_FORMAT, Profile, check_dataset, check_img_size, check_requirements, check_yaml, coco80_to_coco91_class, colorstr, increment_path, non_max_suppression, print_args, scale_boxes, xywh2xyxy, xyxy2xywh\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": 64,
        "endColumn": 50,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.metrics import ConfusionMatrix, box_iou\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 65,
        "column": 0,
        "endLine": 65,
        "endColumn": 56,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.plots import output_to_target, plot_val_study\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 55,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.dataloaders import create_dataloader\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 90,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.general import mask_iou, process_mask, process_mask_native, scale_image\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 68,
        "column": 0,
        "endLine": 68,
        "endColumn": 68,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.metrics import Metrics, ap_per_class_box_and_mask\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": 69,
        "endColumn": 53,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.segment.plots import plot_images_and_masks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 70,
        "column": 0,
        "endLine": 70,
        "endColumn": 78,
        "path": "yolov5\\segment\\val.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import de_parallel, select_device, smart_inference_mode\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "save_one_txt",
        "line": 81,
        "column": 13,
        "endLine": 81,
        "endColumn": 28,
        "path": "yolov5\\segment\\val.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "segment.val",
        "obj": "save_one_json",
        "line": 91,
        "column": 4,
        "endLine": 91,
        "endColumn": 39,
        "path": "yolov5\\segment\\val.py",
        "symbol": "import-error",
        "message": "Unable to import 'pycocotools.mask'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "save_one_json",
        "line": 91,
        "column": 4,
        "endLine": 91,
        "endColumn": 39,
        "path": "yolov5\\segment\\val.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pycocotools.mask.encode)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "process_batch",
        "line": 117,
        "column": 0,
        "endLine": 117,
        "endColumn": 17,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "process_batch",
        "line": 117,
        "column": 0,
        "endLine": 117,
        "endColumn": 17,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "process_batch",
        "line": 141,
        "column": 4,
        "endLine": 150,
        "endColumn": 56,
        "path": "yolov5\\segment\\val.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "run",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 7,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (30/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "run",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 7,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (30/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "run",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 7,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (110/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 429,
        "column": 16,
        "endLine": 429,
        "endColumn": 20,
        "path": "yolov5\\segment\\val.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'eval'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 201,
        "column": 8,
        "endLine": 201,
        "endColumn": 47,
        "path": "yolov5\\segment\\val.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"model.half() if half else model.float()\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 222,
        "column": 16,
        "endLine": 222,
        "endColumn": 116,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "run",
        "line": 368,
        "column": 15,
        "endLine": 368,
        "endColumn": 30,
        "path": "yolov5\\segment\\val.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 391,
        "column": 4,
        "endLine": 391,
        "endColumn": 70,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 393,
        "column": 8,
        "endLine": 393,
        "endColumn": 111,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 398,
        "column": 12,
        "endLine": 398,
        "endColumn": 79,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 404,
        "column": 8,
        "endLine": 404,
        "endColumn": 110,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "run",
        "line": 414,
        "column": 21,
        "endLine": 414,
        "endColumn": 31,
        "path": "yolov5\\segment\\val.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 418,
        "column": 8,
        "endLine": 418,
        "endColumn": 77,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 419,
        "column": 13,
        "endLine": 419,
        "endColumn": 33,
        "path": "yolov5\\segment\\val.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 437,
        "column": 15,
        "endLine": 437,
        "endColumn": 24,
        "path": "yolov5\\segment\\val.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "segment.val",
        "obj": "run",
        "line": 423,
        "column": 12,
        "endLine": 423,
        "endColumn": 45,
        "path": "yolov5\\segment\\val.py",
        "symbol": "import-error",
        "message": "Unable to import 'pycocotools.coco'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "run",
        "line": 423,
        "column": 12,
        "endLine": 423,
        "endColumn": 45,
        "path": "yolov5\\segment\\val.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pycocotools.coco.COCO)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "segment.val",
        "obj": "run",
        "line": 424,
        "column": 12,
        "endLine": 424,
        "endColumn": 53,
        "path": "yolov5\\segment\\val.py",
        "symbol": "import-error",
        "message": "Unable to import 'pycocotools.cocoeval'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "run",
        "line": 424,
        "column": 12,
        "endLine": 424,
        "endColumn": 53,
        "path": "yolov5\\segment\\val.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pycocotools.cocoeval.COCOeval)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 436,
        "column": 12,
        "endLine": 436,
        "endColumn": 64,
        "path": "yolov5\\segment\\val.py",
        "symbol": "unbalanced-tuple-unpacking",
        "message": "Possible unbalanced tuple unpacking with sequence defined at line 428: left side has 4 labels, right side has 0 values",
        "message-id": "W0632"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 438,
        "column": 12,
        "endLine": 438,
        "endColumn": 58,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 444,
        "column": 8,
        "endLine": 444,
        "endColumn": 72,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "run",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 7,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (36/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "segment.val",
        "obj": "run",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 7,
        "path": "yolov5\\segment\\val.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (159/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "run",
        "line": 185,
        "column": 4,
        "endLine": 185,
        "endColumn": 13,
        "path": "yolov5\\segment\\val.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'callbacks'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "parse_opt",
        "line": 476,
        "column": 4,
        "endLine": 476,
        "endColumn": 7,
        "path": "yolov5\\segment\\val.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 521)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "main",
        "line": 484,
        "column": 9,
        "endLine": 484,
        "endColumn": 12,
        "path": "yolov5\\segment\\val.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 521)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "main",
        "line": 490,
        "column": 12,
        "endLine": 490,
        "endColumn": 116,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "main",
        "line": 510,
        "column": 20,
        "endLine": 510,
        "endColumn": 72,
        "path": "yolov5\\segment\\val.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "segment.val",
        "obj": "main",
        "line": 514,
        "column": 12,
        "endLine": 514,
        "endColumn": 69,
        "path": "yolov5\\segment\\val.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "convention",
        "module": "segment.val",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": 41,
        "endColumn": 31,
        "path": "yolov5\\segment\\val.py",
        "symbol": "ungrouped-imports",
        "message": "Imports from package torch are not grouped",
        "message-id": "C0412"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 45,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 96,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 103,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 117,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.activations",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.activations",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 21,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "error",
        "module": "utils.activations",
        "obj": "Mish.forward",
        "line": 41,
        "column": 19,
        "endLine": 41,
        "endColumn": 32,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "not-callable",
        "message": "F.softplus is not callable",
        "message-id": "E1102"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 11,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "abstract-method",
        "message": "Method 'jvp' is abstract in class '_SingleLevelFunction' but is not overridden in child class 'F'",
        "message-id": "W0223"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 11,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "abstract-method",
        "message": "Method 'setup_context' is abstract in class '_SingleLevelFunction' but is not overridden in child class 'F'",
        "message-id": "W0223"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 11,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "abstract-method",
        "message": "Method 'vjp' is abstract in class '_SingleLevelFunction' but is not overridden in child class 'F'",
        "message-id": "W0223"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 11,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "abstract-method",
        "message": "Method 'vmap' is abstract in class 'Function' but is not overridden in child class 'F'",
        "message-id": "W0223"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F.forward",
        "line": 51,
        "column": 8,
        "endLine": 51,
        "endColumn": 19,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 2 in '_SingleLevelFunction.forward' and is now 2 in overriding 'F.forward' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F.forward",
        "line": 51,
        "column": 8,
        "endLine": 51,
        "endColumn": 19,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "arguments-differ",
        "message": "Variadics removed in overriding 'F.forward' method",
        "message-id": "W0221"
    },
    {
        "type": "error",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F.forward",
        "line": 54,
        "column": 36,
        "endLine": 54,
        "endColumn": 49,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "not-callable",
        "message": "F.softplus is not callable",
        "message-id": "E1102"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F.backward",
        "line": 57,
        "column": 8,
        "endLine": 57,
        "endColumn": 20,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "arguments-differ",
        "message": "Number of parameters was 2 in '_SingleLevelFunction.backward' and is now 2 in overriding 'F.backward' method",
        "message-id": "W0221"
    },
    {
        "type": "warning",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F.backward",
        "line": 57,
        "column": 8,
        "endLine": 57,
        "endColumn": 20,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "arguments-differ",
        "message": "Variadics removed in overriding 'F.backward' method",
        "message-id": "W0221"
    },
    {
        "type": "error",
        "module": "utils.activations",
        "obj": "MemoryEfficientMish.F.backward",
        "line": 61,
        "column": 17,
        "endLine": 61,
        "endColumn": 30,
        "path": "yolov5\\utils\\activations.py",
        "symbol": "not-callable",
        "message": "F.softplus is not callable",
        "message-id": "E1102"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 51,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 53,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 68,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 91,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 123,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 151,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 156,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 158,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 160,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 217,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 224,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 226,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 238,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 273,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 279,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 316,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 340,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 360,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 365,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 369,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 375,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 376,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 377,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 382,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 385,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 395,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 402,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 405,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 410,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 413,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 419,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 426,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 430,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 433,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 439,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "",
        "line": 444,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "",
        "line": 352,
        "column": 17,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "fixme",
        "message": "TODO: implement AugMix, AutoAug & RandAug in albumentation",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "Albumentations.__init__",
        "line": 32,
        "column": 12,
        "endLine": 32,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'T' from outer scope (line 10)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "Albumentations.__init__",
        "line": 47,
        "column": 15,
        "endLine": 47,
        "endColumn": 24,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "Albumentations.__init__",
        "line": 28,
        "column": 12,
        "endLine": 28,
        "endColumn": 38,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (albumentations)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "Albumentations.__init__",
        "line": 32,
        "column": 12,
        "endLine": 32,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "Albumentations.__init__",
        "line": 44,
        "column": 12,
        "endLine": 44,
        "endColumn": 105,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "Albumentations.__init__",
        "line": 48,
        "column": 12,
        "endLine": 48,
        "endColumn": 39,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "Albumentations",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 20,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 78,
        "column": 24,
        "endLine": 78,
        "endColumn": 33,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'split' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 78,
        "column": 34,
        "endLine": 78,
        "endColumn": 46,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'cvtColor' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 78,
        "column": 51,
        "endLine": 78,
        "endColumn": 68,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_BGR2HSV' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 86,
        "column": 17,
        "endLine": 86,
        "endColumn": 26,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'merge' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 86,
        "column": 28,
        "endLine": 86,
        "endColumn": 35,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'LUT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 86,
        "column": 51,
        "endLine": 86,
        "endColumn": 58,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'LUT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 86,
        "column": 74,
        "endLine": 86,
        "endColumn": 81,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'LUT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 87,
        "column": 8,
        "endLine": 87,
        "endColumn": 20,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'cvtColor' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "augment_hsv",
        "line": 87,
        "column": 29,
        "endLine": 87,
        "endColumn": 46,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_HSV2BGR' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 92,
        "column": 10,
        "endLine": 92,
        "endColumn": 22,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'cvtColor' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 92,
        "column": 27,
        "endLine": 92,
        "endColumn": 44,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_BGR2YUV' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 92,
        "column": 57,
        "endLine": 92,
        "endColumn": 74,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_RGB2YUV' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 94,
        "column": 12,
        "endLine": 94,
        "endColumn": 27,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'createCLAHE' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 97,
        "column": 23,
        "endLine": 97,
        "endColumn": 39,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'equalizeHist' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 98,
        "column": 11,
        "endLine": 98,
        "endColumn": 23,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'cvtColor' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 98,
        "column": 29,
        "endLine": 98,
        "endColumn": 46,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_YUV2BGR' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "hist_equalize",
        "line": 98,
        "column": 59,
        "endLine": 98,
        "endColumn": 76,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_YUV2RGB' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "replicate",
        "line": 101,
        "column": 0,
        "endLine": 101,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (23/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 122,
        "column": 74,
        "endLine": 122,
        "endColumn": 83,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Argument name \"scaleFill\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 122,
        "column": 0,
        "endLine": 122,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 122,
        "column": 0,
        "endLine": 122,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 122,
        "column": 0,
        "endLine": 122,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 148,
        "column": 13,
        "endLine": 148,
        "endColumn": 23,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 148,
        "column": 53,
        "endLine": 148,
        "endColumn": 69,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_LINEAR' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 151,
        "column": 9,
        "endLine": 151,
        "endColumn": 27,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'copyMakeBorder' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "letterbox",
        "line": 151,
        "column": 58,
        "endLine": 151,
        "endColumn": 77,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'BORDER_CONSTANT' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 22,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 22,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 155,
        "column": 0,
        "endLine": 155,
        "endColumn": 22,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (27/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 188,
        "column": 4,
        "endLine": 188,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'T' from outer scope (line 10)",
        "message-id": "W0621"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 165,
        "column": 4,
        "endLine": 165,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 170,
        "column": 4,
        "endLine": 170,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"P\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 175,
        "column": 4,
        "endLine": 175,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"R\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 180,
        "column": 12,
        "endLine": 180,
        "endColumn": 35,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'getRotationMatrix2D' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 183,
        "column": 4,
        "endLine": 183,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 188,
        "column": 4,
        "endLine": 188,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 193,
        "column": 4,
        "endLine": 193,
        "endColumn": 5,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"M\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 196,
        "column": 17,
        "endLine": 196,
        "endColumn": 36,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'warpPerspective' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "random_perspective",
        "line": 198,
        "column": 17,
        "endLine": 198,
        "endColumn": 31,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'warpAffine' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 245,
        "column": 0,
        "endLine": 245,
        "endColumn": 14,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 262,
        "column": 16,
        "endLine": 262,
        "endColumn": 32,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'drawContours' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 262,
        "column": 88,
        "endLine": 262,
        "endColumn": 98,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'FILLED' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 264,
        "column": 17,
        "endLine": 264,
        "endColumn": 25,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'flip' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 265,
        "column": 12,
        "endLine": 265,
        "endColumn": 20,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'flip' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 253,
        "column": 8,
        "endLine": 253,
        "endColumn": 9,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'h'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "copy_paste",
        "line": 253,
        "column": 14,
        "endLine": 253,
        "endColumn": 15,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'c'",
        "message-id": "W0612"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "box_candidates",
        "line": 314,
        "column": 0,
        "endLine": 314,
        "endColumn": 18,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "box_candidates",
        "line": 314,
        "column": 0,
        "endLine": 314,
        "endColumn": 18,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 327,
        "column": 0,
        "endLine": 327,
        "endColumn": 27,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (10/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 327,
        "column": 0,
        "endLine": 327,
        "endColumn": 27,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (10/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 327,
        "column": 0,
        "endLine": 327,
        "endColumn": 27,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 350,
        "column": 12,
        "endLine": 350,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'T' from outer scope (line 10)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 370,
        "column": 11,
        "endLine": 370,
        "endColumn": 20,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 345,
        "column": 8,
        "endLine": 345,
        "endColumn": 34,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (albumentations)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 346,
        "column": 8,
        "endLine": 346,
        "endColumn": 53,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (albumentations.pytorch.ToTensorV2)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 350,
        "column": 12,
        "endLine": 350,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 353,
        "column": 16,
        "endLine": 353,
        "endColumn": 86,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 356,
        "column": 20,
        "endLine": 356,
        "endColumn": 21,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 358,
        "column": 20,
        "endLine": 358,
        "endColumn": 21,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 361,
        "column": 20,
        "endLine": 361,
        "endColumn": 21,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 363,
        "column": 12,
        "endLine": 363,
        "endColumn": 13,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 364,
        "column": 8,
        "endLine": 364,
        "endColumn": 9,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 365,
        "column": 8,
        "endLine": 365,
        "endColumn": 101,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 369,
        "column": 8,
        "endLine": 369,
        "endColumn": 108,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 371,
        "column": 8,
        "endLine": 371,
        "endColumn": 35,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "classify_albumentations",
        "line": 327,
        "column": 0,
        "endLine": 327,
        "endColumn": 27,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "LetterBox.__call__",
        "line": 405,
        "column": 49,
        "endLine": 405,
        "endColumn": 59,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "LetterBox.__call__",
        "line": 405,
        "column": 86,
        "endLine": 405,
        "endColumn": 102,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_LINEAR' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "LetterBox",
        "line": 381,
        "column": 0,
        "endLine": 381,
        "endColumn": 15,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "CenterCrop.__call__",
        "line": 426,
        "column": 15,
        "endLine": 426,
        "endColumn": 25,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.augmentations",
        "obj": "CenterCrop.__call__",
        "line": 426,
        "column": 94,
        "endLine": 426,
        "endColumn": 110,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_LINEAR' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "CenterCrop",
        "line": 409,
        "column": 0,
        "endLine": 409,
        "endColumn": 16,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "utils.augmentations",
        "obj": "ToTensor",
        "line": 429,
        "column": 0,
        "endLine": 429,
        "endColumn": 14,
        "path": "yolov5\\utils\\augmentations.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 62,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 74,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 90,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 97,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 131,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 141,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "",
        "line": 161,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "check_anchor_order",
        "line": 23,
        "column": 8,
        "endLine": 23,
        "endColumn": 54,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.autoanchor",
        "obj": "check_anchors",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 17,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "check_anchors",
        "line": 49,
        "column": 8,
        "endLine": 49,
        "endColumn": 72,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "check_anchors",
        "line": 51,
        "column": 8,
        "endLine": 51,
        "endColumn": 93,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 17,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 17,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 17,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (26/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 84,
        "column": 4,
        "endLine": 84,
        "endColumn": 39,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (scipy.cluster.vq.kmeans)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors.print_results",
        "line": 112,
        "column": 17,
        "endLine": 112,
        "endColumn": 26,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 118,
        "column": 13,
        "endLine": 118,
        "endColumn": 43,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 120,
        "column": 8,
        "endLine": 120,
        "endColumn": 57,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.dataloaders.LoadImagesAndLabels)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 131,
        "column": 8,
        "endLine": 131,
        "endColumn": 124,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 142,
        "column": 11,
        "endLine": 142,
        "endColumn": 20,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 137,
        "column": 8,
        "endLine": 137,
        "endColumn": 85,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autoanchor",
        "obj": "kmean_anchors",
        "line": 143,
        "column": 8,
        "endLine": 143,
        "endColumn": 97,
        "path": "yolov5\\utils\\autoanchor.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.autobatch",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autobatch",
        "obj": "",
        "line": 35,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autobatch",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autobatch",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.autobatch",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 13,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (21/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 29,
        "column": 4,
        "endLine": 29,
        "endColumn": 76,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 32,
        "column": 8,
        "endLine": 32,
        "endColumn": 92,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 35,
        "column": 8,
        "endLine": 35,
        "endColumn": 124,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 46,
        "column": 4,
        "endLine": 46,
        "endColumn": 120,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 53,
        "column": 11,
        "endLine": 53,
        "endColumn": 20,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 54,
        "column": 8,
        "endLine": 54,
        "endColumn": 38,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 66,
        "column": 8,
        "endLine": 66,
        "endColumn": 121,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.autobatch",
        "obj": "autobatch",
        "line": 69,
        "column": 4,
        "endLine": 69,
        "endColumn": 113,
        "path": "yolov5\\utils\\autobatch.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.callbacks",
        "obj": "",
        "line": 70,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\callbacks.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 62,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 63,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 76,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 96,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 134,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 137,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 142,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 179,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 181,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 202,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 204,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 229,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 255,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 259,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 265,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 269,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 278,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 299,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 306,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 315,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 326,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 327,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 403,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 410,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 417,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 420,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 435,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 437,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 438,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 453,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 454,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 461,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 468,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 483,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 486,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 496,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 502,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 507,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 519,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 526,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 531,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 542,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 562,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 568,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 585,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 589,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 590,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 609,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 612,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 618,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 643,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 681,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 693,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 698,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 704,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 713,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 759,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 769,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 773,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 792,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 798,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 813,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 851,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 881,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 884,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 893,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 894,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 895,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 913,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 941,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 955,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 981,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1023,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1031,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1042,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1047,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1048,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1058,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1060,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1073,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1079,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1092,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1096,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1120,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1130,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1134,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1152,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1162,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1163,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1169,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1206,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1227,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1233,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1235,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1239,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1245,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1249,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1263,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1267,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1270,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1291,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1305,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1313,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1319,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1331,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1339,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1342,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1363,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1381/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 64,
        "column": 17,
        "endLine": 64,
        "endColumn": 44,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 65,
        "column": 11,
        "endLine": 65,
        "endColumn": 32,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 66,
        "column": 17,
        "endLine": 66,
        "endColumn": 43,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "",
        "line": 67,
        "column": 17,
        "endLine": 67,
        "endColumn": 46,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.bool. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "exif_size",
        "line": 87,
        "column": 24,
        "endLine": 87,
        "endColumn": 36,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "protected-access",
        "message": "Access to a protected member _getexif of a client class",
        "message-id": "W0212"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 102,
        "column": 4,
        "endLine": 102,
        "endColumn": 15,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'orientation' from outer scope (line 70)",
        "message-id": "W0621"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 105,
        "column": 15,
        "endLine": 105,
        "endColumn": 36,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'FLIP_LEFT_RIGHT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 106,
        "column": 15,
        "endLine": 106,
        "endColumn": 31,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'ROTATE_180' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 107,
        "column": 15,
        "endLine": 107,
        "endColumn": 36,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'FLIP_TOP_BOTTOM' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 108,
        "column": 15,
        "endLine": 108,
        "endColumn": 30,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'TRANSPOSE' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 109,
        "column": 15,
        "endLine": 109,
        "endColumn": 31,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'ROTATE_270' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 110,
        "column": 15,
        "endLine": 110,
        "endColumn": 31,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'TRANSVERSE' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "exif_transpose",
        "line": 111,
        "column": 15,
        "endLine": 111,
        "endColumn": 30,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'PIL.Image' has no 'ROTATE_90' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "seed_worker",
        "line": 120,
        "column": 16,
        "endLine": 120,
        "endColumn": 25,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'worker_id'",
        "message-id": "W0613"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "create_dataloader",
        "line": 160,
        "column": 0,
        "endLine": 160,
        "endColumn": 21,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (17/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "create_dataloader",
        "line": 160,
        "column": 0,
        "endLine": 160,
        "endColumn": 21,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (17/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "create_dataloader",
        "line": 160,
        "column": 0,
        "endLine": 160,
        "endColumn": 21,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (23/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "InfiniteDataLoader.__iter__",
        "line": 243,
        "column": 18,
        "endLine": 243,
        "endColumn": 37,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "stop-iteration-return",
        "message": "Do not raise StopIteration in generator, use return statement instead",
        "message-id": "R1708"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "_RepeatSampler",
        "line": 246,
        "column": 0,
        "endLine": 246,
        "endColumn": 20,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadScreenshots",
        "line": 264,
        "column": 0,
        "endLine": 264,
        "endColumn": 21,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (13/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadScreenshots.__init__",
        "line": 267,
        "column": 4,
        "endLine": 267,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadScreenshots.__init__",
        "line": 267,
        "column": 4,
        "endLine": 267,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "LoadScreenshots.__init__",
        "line": 275,
        "column": 8,
        "endLine": 275,
        "endColumn": 18,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (mss)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadScreenshots.__init__",
        "line": 275,
        "column": 8,
        "endLine": 275,
        "endColumn": 18,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "import-error",
        "message": "Unable to import 'mss'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImages",
        "line": 322,
        "column": 0,
        "endLine": 322,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImages.__init__",
        "line": 325,
        "column": 4,
        "endLine": 325,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImages.__init__",
        "line": 325,
        "column": 4,
        "endLine": 325,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImages.__init__",
        "line": 328,
        "column": 19,
        "endLine": 328,
        "endColumn": 41,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImages.__init__",
        "line": 359,
        "column": 44,
        "endLine": 359,
        "endColumn": 45,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'p'",
        "message-id": "W0631"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._new_video",
        "line": 414,
        "column": 19,
        "endLine": 414,
        "endColumn": 35,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoCapture' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._new_video",
        "line": 415,
        "column": 39,
        "endLine": 415,
        "endColumn": 63,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_COUNT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._new_video",
        "line": 416,
        "column": 44,
        "endLine": 416,
        "endColumn": 73,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_ORIENTATION_META' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 421,
        "column": 8,
        "endLine": 426,
        "endColumn": 49,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 422,
        "column": 19,
        "endLine": 422,
        "endColumn": 29,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'rotate' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 422,
        "column": 34,
        "endLine": 422,
        "endColumn": 57,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'ROTATE_90_CLOCKWISE' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 424,
        "column": 19,
        "endLine": 424,
        "endColumn": 29,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'rotate' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 424,
        "column": 34,
        "endLine": 424,
        "endColumn": 64,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'ROTATE_90_COUNTERCLOCKWISE' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 426,
        "column": 19,
        "endLine": 426,
        "endColumn": 29,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'rotate' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImages._cv2_rotate",
        "line": 426,
        "column": 34,
        "endLine": 426,
        "endColumn": 48,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'ROTATE_180' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImages.__iter__",
        "line": 365,
        "column": 8,
        "endLine": 365,
        "endColumn": 18,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'count' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadStreams",
        "line": 434,
        "column": 0,
        "endLine": 434,
        "endColumn": 17,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (13/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 437,
        "column": 4,
        "endLine": 437,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 437,
        "column": 4,
        "endLine": 437,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 437,
        "column": 4,
        "endLine": 437,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 446,
        "column": 18,
        "endLine": 446,
        "endColumn": 43,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 456,
        "column": 16,
        "endLine": 456,
        "endColumn": 27,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (pafy)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 456,
        "column": 16,
        "endLine": 456,
        "endColumn": 27,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "import-error",
        "message": "Unable to import 'pafy'",
        "message-id": "E0401"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 459,
        "column": 16,
        "endLine": 459,
        "endColumn": 23,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "eval-used",
        "message": "Use of eval",
        "message-id": "W0123"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 463,
        "column": 18,
        "endLine": 463,
        "endColumn": 34,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'VideoCapture' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 465,
        "column": 28,
        "endLine": 465,
        "endColumn": 52,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_WIDTH' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 466,
        "column": 28,
        "endLine": 466,
        "endColumn": 53,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_HEIGHT' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 467,
        "column": 26,
        "endLine": 467,
        "endColumn": 42,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FPS' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 468,
        "column": 45,
        "endLine": 468,
        "endColumn": 69,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CAP_PROP_FRAME_COUNT' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__init__",
        "line": 473,
        "column": 12,
        "endLine": 473,
        "endColumn": 99,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__next__",
        "line": 511,
        "column": 58,
        "endLine": 511,
        "endColumn": 69,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'waitKey' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__next__",
        "line": 512,
        "column": 12,
        "endLine": 512,
        "endColumn": 33,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'destroyAllWindows' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadStreams.__iter__",
        "line": 503,
        "column": 8,
        "endLine": 503,
        "endColumn": 18,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'count' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels",
        "line": 538,
        "column": 0,
        "endLine": 538,
        "endColumn": 25,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (23/7)",
        "message-id": "R0902"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels",
        "line": 542,
        "column": 27,
        "endLine": 542,
        "endColumn": 44,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_NEAREST' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels",
        "line": 542,
        "column": 46,
        "endLine": 542,
        "endColumn": 62,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_LINEAR' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels",
        "line": 542,
        "column": 64,
        "endLine": 542,
        "endColumn": 79,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_CUBIC' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels",
        "line": 542,
        "column": 81,
        "endLine": 542,
        "endColumn": 95,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_AREA' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels",
        "line": 542,
        "column": 97,
        "endLine": 542,
        "endColumn": 115,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_LANCZOS4' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 544,
        "column": 4,
        "endLine": 544,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (16/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 544,
        "column": 4,
        "endLine": 544,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (16/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 544,
        "column": 4,
        "endLine": 544,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (54/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 582,
        "column": 25,
        "endLine": 582,
        "endColumn": 32,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 593,
        "column": 12,
        "endLine": 593,
        "endColumn": 94,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 597,
        "column": 27,
        "endLine": 597,
        "endColumn": 28,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'p'",
        "message-id": "W0631"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 597,
        "column": 22,
        "endLine": 597,
        "endColumn": 23,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'p'",
        "message-id": "W0631"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 602,
        "column": 15,
        "endLine": 602,
        "endColumn": 24,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 615,
        "column": 8,
        "endLine": 615,
        "endColumn": 59,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"[cache.pop(k) for k in ('hash', 'version', 'msgs')]\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 626,
        "column": 22,
        "endLine": 626,
        "endColumn": 94,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Instance of 'int' has no 'astype' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 627,
        "column": 12,
        "endLine": 627,
        "endColumn": 87,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 643,
        "column": 40,
        "endLine": 643,
        "endColumn": 61,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'numpy.random' has no 'RandomState' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 544,
        "column": 4,
        "endLine": 544,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (23/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__init__",
        "line": 544,
        "column": 4,
        "endLine": 544,
        "endColumn": 16,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (111/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.check_cache_ram",
        "line": 715,
        "column": 12,
        "endLine": 719,
        "endColumn": 13,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.cache_labels",
        "line": 722,
        "column": 4,
        "endLine": 722,
        "endColumn": 20,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (22/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.cache_labels",
        "line": 749,
        "column": 12,
        "endLine": 749,
        "endColumn": 91,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.cache_labels",
        "line": 758,
        "column": 15,
        "endLine": 758,
        "endColumn": 24,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.cache_labels",
        "line": 757,
        "column": 12,
        "endLine": 757,
        "endColumn": 61,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.cache_labels",
        "line": 759,
        "column": 12,
        "endLine": 759,
        "endColumn": 105,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__getitem__",
        "line": 772,
        "column": 4,
        "endLine": 772,
        "endColumn": 19,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.__getitem__",
        "line": 817,
        "column": 26,
        "endLine": 817,
        "endColumn": 58,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "not-callable",
        "message": "self.albumentations is not callable",
        "message-id": "E1102"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_image",
        "line": 869,
        "column": 25,
        "endLine": 869,
        "endColumn": 41,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_LINEAR' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_image",
        "line": 869,
        "column": 74,
        "endLine": 869,
        "endColumn": 88,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_AREA' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_image",
        "line": 870,
        "column": 21,
        "endLine": 870,
        "endColumn": 31,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic",
        "line": 880,
        "column": 4,
        "endLine": 880,
        "endColumn": 19,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (26/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic",
        "line": 887,
        "column": 15,
        "endLine": 887,
        "endColumn": 20,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "redefined-argument-from-local",
        "message": "Redefining argument with the local name 'index'",
        "message-id": "R1704"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic",
        "line": 906,
        "column": 41,
        "endLine": 906,
        "endColumn": 44,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'y1b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic",
        "line": 906,
        "column": 45,
        "endLine": 906,
        "endColumn": 48,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'y2b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic",
        "line": 906,
        "column": 50,
        "endLine": 906,
        "endColumn": 53,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'x1b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic",
        "line": 906,
        "column": 54,
        "endLine": 906,
        "endColumn": 57,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'x2b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic9",
        "line": 940,
        "column": 4,
        "endLine": 940,
        "endColumn": 20,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (27/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.load_mosaic9",
        "line": 949,
        "column": 15,
        "endLine": 949,
        "endColumn": 20,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "redefined-argument-from-local",
        "message": "Redefining argument with the local name 'index'",
        "message-id": "R1704"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "LoadImagesAndLabels.collate_fn4",
        "line": 1030,
        "column": 4,
        "endLine": 1030,
        "endColumn": 19,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "extract_boxes",
        "line": 1079,
        "column": 4,
        "endLine": 1079,
        "endColumn": 90,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"shutil.rmtree(path / 'classification') if (path / 'classification').is_dir() else None\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "extract_boxes",
        "line": 1091,
        "column": 21,
        "endLine": 1091,
        "endColumn": 34,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "autosplit",
        "line": 1133,
        "column": 17,
        "endLine": 1133,
        "endColumn": 48,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "verify_image_label",
        "line": 1137,
        "column": 0,
        "endLine": 1137,
        "endColumn": 22,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "verify_image_label",
        "line": 1183,
        "column": 11,
        "endLine": 1183,
        "endColumn": 20,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "verify_image_label",
        "line": 1158,
        "column": 17,
        "endLine": 1158,
        "endColumn": 30,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats.__init__",
        "line": 1211,
        "column": 17,
        "endLine": 1211,
        "endColumn": 61,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats.__init__",
        "line": 1216,
        "column": 12,
        "endLine": 1216,
        "endColumn": 71,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats._find_yaml",
        "line": 1226,
        "column": 19,
        "endLine": 1226,
        "endColumn": 22,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats._unzip",
        "line": 1244,
        "column": 8,
        "endLine": 1244,
        "endColumn": 11,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats._hub_ops",
        "line": 1257,
        "column": 15,
        "endLine": 1257,
        "endColumn": 24,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats._hub_ops",
        "line": 1258,
        "column": 12,
        "endLine": 1258,
        "endColumn": 71,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats._hub_ops",
        "line": 1263,
        "column": 21,
        "endLine": 1263,
        "endColumn": 31,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats._hub_ops",
        "line": 1263,
        "column": 91,
        "endLine": 1263,
        "endColumn": 105,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'INTER_AREA' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.dataloaders",
        "obj": "HUBDatasetStats.get_json",
        "line": 1298,
        "column": 17,
        "endLine": 1298,
        "endColumn": 38,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "ClassificationDataset.__getitem__",
        "line": 1353,
        "column": 49,
        "endLine": 1353,
        "endColumn": 61,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'cvtColor' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.dataloaders",
        "obj": "ClassificationDataset.__getitem__",
        "line": 1353,
        "column": 66,
        "endLine": 1353,
        "endColumn": 83,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'COLOR_BGR2RGB' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "create_classification_dataloader",
        "line": 1359,
        "column": 0,
        "endLine": 1359,
        "endColumn": 36,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.dataloaders",
        "obj": "create_classification_dataloader",
        "line": 1359,
        "column": 0,
        "endLine": 1359,
        "endColumn": 36,
        "path": "yolov5\\utils\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 35,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 62,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 89,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 123,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "",
        "line": 133,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "url_getsize",
        "line": 36,
        "column": 15,
        "endLine": 36,
        "endColumn": 55,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.head' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "curl_download",
        "line": 43,
        "column": 11,
        "endLine": 56,
        "endColumn": 5,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "safe_download",
        "line": 66,
        "column": 4,
        "endLine": 66,
        "endColumn": 36,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.general.LOGGER)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "safe_download",
        "line": 74,
        "column": 11,
        "endLine": 74,
        "endColumn": 20,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "safe_download",
        "line": 71,
        "column": 8,
        "endLine": 71,
        "endColumn": 54,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "safe_download",
        "line": 77,
        "column": 8,
        "endLine": 77,
        "endColumn": 76,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "safe_download",
        "line": 84,
        "column": 12,
        "endLine": 84,
        "endColumn": 60,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.downloads",
        "obj": "attempt_download",
        "line": 92,
        "column": 4,
        "endLine": 92,
        "endColumn": 36,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.general.LOGGER)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "attempt_download.github_assets",
        "line": 98,
        "column": 19,
        "endLine": 98,
        "endColumn": 96,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.get' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "attempt_download",
        "line": 109,
        "column": 16,
        "endLine": 109,
        "endColumn": 61,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "attempt_download",
        "line": 118,
        "column": 15,
        "endLine": 118,
        "endColumn": 24,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "attempt_download",
        "line": 121,
        "column": 19,
        "endLine": 121,
        "endColumn": 28,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.downloads",
        "obj": "attempt_download",
        "line": 124,
        "column": 23,
        "endLine": 124,
        "endColumn": 32,
        "path": "yolov5\\utils\\downloads.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 65,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 72,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 76,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 87,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 93,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 107,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 139,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 166,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 173,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 180,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 191,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 194,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 200,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 210,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 217,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 220,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 230,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 236,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 244,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 291,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 292,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 300,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 303,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 309,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 313,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 331,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 343,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 349,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 356,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 361,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 367,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 375,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 392,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 393,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 396,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 410,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 426,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 427,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 430,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 439,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 446,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 478,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 490,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 496,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 501,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 508,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 513,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 527,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 540,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 563,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 581,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 583,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 588,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 592,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 597,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 604,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 606,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 611,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 622,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 628,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 632,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 645,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 650,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 657,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 666,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "superfluous-parens",
        "message": "Unnecessary parens after '=' keyword",
        "message-id": "C0325"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 708,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 729,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 755,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 765,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 784,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 789,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 875,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 885,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 895,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 905,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 925,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 950,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 955,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 957,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 958,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 971,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 973,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 974,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 990,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1002,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1029,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1031,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1099,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1110,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1126,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1146,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1158,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1197,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1202,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1237,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1266,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (126/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1271,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1278,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1294,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-lines",
        "message": "Too many lines in module (1294/1000)",
        "message-id": "C0302"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "",
        "line": 54,
        "column": 11,
        "endLine": 54,
        "endColumn": 32,
        "path": "yolov5\\utils\\general.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "",
        "line": 59,
        "column": 18,
        "endLine": 59,
        "endColumn": 55,
        "path": "yolov5\\utils\\general.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.bool. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "",
        "line": 60,
        "column": 14,
        "endLine": 60,
        "endColumn": 47,
        "path": "yolov5\\utils\\general.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.bool. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": 67,
        "endColumn": 17,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'setNumThreads' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "is_jupyter",
        "line": 99,
        "column": 8,
        "endLine": 99,
        "endColumn": 39,
        "path": "yolov5\\utils\\general.py",
        "symbol": "import-error",
        "message": "Unable to import 'IPython'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "is_jupyter",
        "line": 99,
        "column": 8,
        "endLine": 99,
        "endColumn": 39,
        "path": "yolov5\\utils\\general.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (IPython.get_ipython)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "is_docker",
        "line": 115,
        "column": 13,
        "endLine": 115,
        "endColumn": 38,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "is_writeable",
        "line": 121,
        "column": 17,
        "endLine": 121,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "is_writeable",
        "line": 127,
        "column": 13,
        "endLine": 127,
        "endColumn": 28,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "set_logging",
        "line": 140,
        "column": 15,
        "endLine": 140,
        "endColumn": 36,
        "path": "yolov5\\utils\\general.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "<lambda>",
        "line": 169,
        "column": 47,
        "endLine": 169,
        "endColumn": 49,
        "path": "yolov5\\utils\\general.py",
        "symbol": "cell-var-from-loop",
        "message": "Cell variable fn defined in loop",
        "message-id": "W0640"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "user_config_dir",
        "line": 172,
        "column": 20,
        "endLine": 172,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "Profile.__exit__",
        "line": 204,
        "column": 23,
        "endLine": 204,
        "endColumn": 27,
        "path": "yolov5\\utils\\general.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'type'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "Profile.__enter__",
        "line": 201,
        "column": 8,
        "endLine": 201,
        "endColumn": 18,
        "path": "yolov5\\utils\\general.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'start' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "Profile.__exit__",
        "line": 206,
        "column": 8,
        "endLine": 206,
        "endColumn": 15,
        "path": "yolov5\\utils\\general.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'dt' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "Timeout.__enter__",
        "line": 232,
        "column": 26,
        "endLine": 232,
        "endColumn": 40,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'signal' has no 'SIGALRM' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "Timeout.__enter__",
        "line": 233,
        "column": 12,
        "endLine": 233,
        "endColumn": 24,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'signal' has no 'alarm' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "Timeout.__exit__",
        "line": 238,
        "column": 12,
        "endLine": 238,
        "endColumn": 24,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'signal' has no 'alarm' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "Timeout.__exit__",
        "line": 235,
        "column": 4,
        "endLine": 235,
        "endColumn": 16,
        "path": "yolov5\\utils\\general.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "print_args",
        "line": 277,
        "column": 4,
        "endLine": 277,
        "endColumn": 77,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "file_size",
        "line": 334,
        "column": 4,
        "endLine": 339,
        "endColumn": 18,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "check_online",
        "line": 346,
        "column": 4,
        "endLine": 346,
        "endColumn": 17,
        "path": "yolov5\\utils\\general.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (socket)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "git_describe",
        "line": 368,
        "column": 11,
        "endLine": 368,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "check_git_info",
        "line": 406,
        "column": 4,
        "endLine": 406,
        "endColumn": 14,
        "path": "yolov5\\utils\\general.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (git)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "check_version",
        "line": 426,
        "column": 0,
        "endLine": 426,
        "endColumn": 17,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "check_version",
        "line": 426,
        "column": 0,
        "endLine": 426,
        "endColumn": 17,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_img_size",
        "line": 446,
        "column": 8,
        "endLine": 446,
        "endColumn": 119,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_imshow",
        "line": 460,
        "column": 11,
        "endLine": 460,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "check_imshow",
        "line": 456,
        "column": 8,
        "endLine": 456,
        "endColumn": 19,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'waitKey' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "check_imshow",
        "line": 457,
        "column": 8,
        "endLine": 457,
        "endColumn": 29,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'destroyAllWindows' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "check_imshow",
        "line": 458,
        "column": 8,
        "endLine": 458,
        "endColumn": 19,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'waitKey' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_imshow",
        "line": 462,
        "column": 12,
        "endLine": 462,
        "endColumn": 112,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "check_file",
        "line": 486,
        "column": 4,
        "endLine": 509,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_file",
        "line": 492,
        "column": 12,
        "endLine": 492,
        "endColumn": 57,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_file",
        "line": 494,
        "column": 12,
        "endLine": 494,
        "endColumn": 58,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "check_file",
        "line": 507,
        "column": 15,
        "endLine": 507,
        "endColumn": 25,
        "path": "yolov5\\utils\\general.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_font",
        "line": 518,
        "column": 8,
        "endLine": 518,
        "endColumn": 54,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 563,
        "column": 12,
        "endLine": 563,
        "endColumn": 113,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 563,
        "column": 24,
        "endLine": 563,
        "endColumn": 70,
        "path": "yolov5\\utils\\general.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 565,
        "column": 16,
        "endLine": 565,
        "endColumn": 56,
        "path": "yolov5\\utils\\general.py",
        "symbol": "broad-exception-raised",
        "message": "Raising too general exception: Exception",
        "message-id": "W0719"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 569,
        "column": 16,
        "endLine": 569,
        "endColumn": 57,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 576,
        "column": 16,
        "endLine": 576,
        "endColumn": 47,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 577,
        "column": 20,
        "endLine": 577,
        "endColumn": 49,
        "path": "yolov5\\utils\\general.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 579,
        "column": 20,
        "endLine": 579,
        "endColumn": 43,
        "path": "yolov5\\utils\\general.py",
        "symbol": "exec-used",
        "message": "Use of exec",
        "message-id": "W0122"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 582,
        "column": 12,
        "endLine": 582,
        "endColumn": 48,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 522,
        "column": 0,
        "endLine": 522,
        "endColumn": 17,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 559,
        "column": 4,
        "endLine": 559,
        "endColumn": 9,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'train'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_dataset",
        "line": 559,
        "column": 16,
        "endLine": 559,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'test'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "check_amp",
        "line": 589,
        "column": 4,
        "endLine": 589,
        "endColumn": 59,
        "path": "yolov5\\utils\\general.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.common.AutoShape, models.common.DetectMultiBackend)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_amp",
        "line": 609,
        "column": 11,
        "endLine": 609,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_amp",
        "line": 607,
        "column": 8,
        "endLine": 607,
        "endColumn": 49,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "check_amp",
        "line": 611,
        "column": 8,
        "endLine": 611,
        "endColumn": 105,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "yaml_load",
        "line": 617,
        "column": 9,
        "endLine": 617,
        "endColumn": 36,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "yaml_save",
        "line": 627,
        "column": 9,
        "endLine": 627,
        "endColumn": 24,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "utils.general",
        "obj": "unzip_file",
        "line": 637,
        "column": 26,
        "endLine": 637,
        "endColumn": 32,
        "path": "yolov5\\utils\\general.py",
        "symbol": "invalid-name",
        "message": "Variable name \"zipObj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "download",
        "line": 653,
        "column": 0,
        "endLine": 653,
        "endColumn": 12,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "download",
        "line": 653,
        "column": 0,
        "endLine": 653,
        "endColumn": 12,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "download",
        "line": 653,
        "column": 18,
        "endLine": 653,
        "endColumn": 21,
        "path": "yolov5\\utils\\general.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 656,
        "column": 26,
        "endLine": 656,
        "endColumn": 29,
        "path": "yolov5\\utils\\general.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 663,
        "column": 12,
        "endLine": 663,
        "endColumn": 55,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 670,
        "column": 16,
        "endLine": 675,
        "endColumn": 70,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-else-break",
        "message": "Unnecessary \"elif\" after \"break\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1723"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 673,
        "column": 20,
        "endLine": 673,
        "endColumn": 97,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 675,
        "column": 20,
        "endLine": 675,
        "endColumn": 70,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 678,
        "column": 12,
        "endLine": 678,
        "endColumn": 44,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "download.download_one",
        "line": 656,
        "column": 4,
        "endLine": 656,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "colorstr",
        "line": 723,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\general.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "non_max_suppression",
        "line": 1011,
        "column": 0,
        "endLine": 1011,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "non_max_suppression",
        "line": 1011,
        "column": 0,
        "endLine": 1011,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "non_max_suppression",
        "line": 1011,
        "column": 0,
        "endLine": 1011,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (37/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "non_max_suppression",
        "line": 1118,
        "column": 12,
        "endLine": 1118,
        "endColumn": 87,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "non_max_suppression",
        "line": 1011,
        "column": 0,
        "endLine": 1011,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (13/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "non_max_suppression",
        "line": 1011,
        "column": 0,
        "endLine": 1011,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (62/50)",
        "message-id": "R0915"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "strip_optimizer",
        "line": 1142,
        "column": 4,
        "endLine": 1142,
        "endColumn": 91,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1145,
        "column": 0,
        "endLine": 1145,
        "endColumn": 18,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1145,
        "column": 0,
        "endLine": 1145,
        "endColumn": 18,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1145,
        "column": 0,
        "endLine": 1145,
        "endColumn": 18,
        "path": "yolov5\\utils\\general.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1158,
        "column": 12,
        "endLine": 1158,
        "endColumn": 69,
        "path": "yolov5\\utils\\general.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1162,
        "column": 9,
        "endLine": 1162,
        "endColumn": 30,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1166,
        "column": 9,
        "endLine": 1166,
        "endColumn": 31,
        "path": "yolov5\\utils\\general.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1185,
        "column": 4,
        "endLine": 1194,
        "endColumn": 5,
        "path": "yolov5\\utils\\general.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "print_mutation",
        "line": 1197,
        "column": 8,
        "endLine": 1197,
        "endColumn": 93,
        "path": "yolov5\\utils\\general.py",
        "symbol": "subprocess-run-check",
        "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
        "message-id": "W1510"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "apply_classifier",
        "line": 1222,
        "column": 21,
        "endLine": 1222,
        "endColumn": 31,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "imread",
        "line": 1270,
        "column": 27,
        "endLine": 1270,
        "endColumn": 43,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'IMREAD_COLOR' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "imread",
        "line": 1274,
        "column": 11,
        "endLine": 1274,
        "endColumn": 23,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'imdecode' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.general",
        "obj": "imwrite",
        "line": 1282,
        "column": 11,
        "endLine": 1282,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "error",
        "module": "utils.general",
        "obj": "imwrite",
        "line": 1280,
        "column": 8,
        "endLine": 1280,
        "endColumn": 20,
        "path": "yolov5\\utils\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'imencode' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (198/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 76,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 88,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 107,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 113,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 122,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 132,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 153,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 154,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 180,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 197,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 203,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 232,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "",
        "line": 254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.loss",
        "obj": "",
        "line": 5,
        "column": 0,
        "endLine": 5,
        "endColumn": 21,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "smooth_BCE",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 14,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Function name \"smooth_BCE\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.loss",
        "obj": "FocalLoss.forward",
        "line": 67,
        "column": 8,
        "endLine": 72,
        "endColumn": 23,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "refactor",
        "module": "utils.loss",
        "obj": "QFocalLoss.forward",
        "line": 98,
        "column": 8,
        "endLine": 103,
        "endColumn": 23,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "ComputeLoss.__init__",
        "line": 132,
        "column": 8,
        "endLine": 132,
        "endColumn": 19,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BCEcls\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "ComputeLoss.__init__",
        "line": 132,
        "column": 21,
        "endLine": 132,
        "endColumn": 32,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BCEobj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.loss",
        "obj": "ComputeLoss",
        "line": 106,
        "column": 0,
        "endLine": 106,
        "endColumn": 17,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (14/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "ComputeLoss.__init__",
        "line": 118,
        "column": 8,
        "endLine": 118,
        "endColumn": 14,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEcls\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "ComputeLoss.__init__",
        "line": 119,
        "column": 8,
        "endLine": 119,
        "endColumn": 14,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEobj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "ComputeLoss.__init__",
        "line": 127,
        "column": 12,
        "endLine": 127,
        "endColumn": 18,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEcls\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.loss",
        "obj": "ComputeLoss.__init__",
        "line": 127,
        "column": 20,
        "endLine": 127,
        "endColumn": 26,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEobj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.loss",
        "obj": "ComputeLoss.__call__",
        "line": 139,
        "column": 4,
        "endLine": 139,
        "endColumn": 16,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (27/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.loss",
        "obj": "ComputeLoss.build_targets",
        "line": 196,
        "column": 4,
        "endLine": 196,
        "endColumn": 21,
        "path": "yolov5\\utils\\loss.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (33/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 68,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 82,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 125,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 183,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 193,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 196,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 205,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 225,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 263,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 264,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 330,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 333,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 338,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 346,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 350,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 362,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 363,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "ap_per_class",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 16,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "ap_per_class",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 16,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "ap_per_class",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 16,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (31/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "ConfusionMatrix.plot",
        "line": 194,
        "column": 8,
        "endLine": 194,
        "endColumn": 28,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (seaborn)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "bbox_iou",
        "line": 230,
        "column": 36,
        "endLine": 230,
        "endColumn": 40,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "invalid-name",
        "message": "Argument name \"GIoU\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "bbox_iou",
        "line": 230,
        "column": 48,
        "endLine": 230,
        "endColumn": 52,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "invalid-name",
        "message": "Argument name \"DIoU\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.metrics",
        "obj": "bbox_iou",
        "line": 230,
        "column": 60,
        "endLine": 230,
        "endColumn": 64,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "invalid-name",
        "message": "Argument name \"CIoU\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "bbox_iou",
        "line": 230,
        "column": 0,
        "endLine": 230,
        "endColumn": 12,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "bbox_iou",
        "line": 230,
        "column": 0,
        "endLine": 230,
        "endColumn": 12,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "bbox_iou",
        "line": 230,
        "column": 0,
        "endLine": 230,
        "endColumn": 12,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (37/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "plot_mc_curve",
        "line": 362,
        "column": 0,
        "endLine": 362,
        "endColumn": 17,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.metrics",
        "obj": "plot_mc_curve",
        "line": 362,
        "column": 0,
        "endLine": 362,
        "endColumn": 17,
        "path": "yolov5\\utils\\metrics.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 123,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 190,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 235,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 257,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 274,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 285,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 290,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 329,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 336,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 345,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 373,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 405,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 453,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 454,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 472,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 500,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 501,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 511,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "",
        "line": 515,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "",
        "line": 26,
        "column": 11,
        "endLine": 26,
        "endColumn": 32,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "feature_visualization",
        "line": 103,
        "column": 12,
        "endLine": 103,
        "endColumn": 58,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "feature_visualization",
        "line": 90,
        "column": 8,
        "endLine": 90,
        "endColumn": 13,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'batch'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "feature_visualization",
        "line": 96,
        "column": 12,
        "endLine": 96,
        "endColumn": 15,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'fig'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "butter_lowpass_filtfilt",
        "line": 124,
        "column": 4,
        "endLine": 124,
        "endColumn": 45,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (scipy.signal.butter, scipy.signal.filtfilt)",
        "message-id": "C0415"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "plot_images",
        "line": 152,
        "column": 0,
        "endLine": 152,
        "endColumn": 15,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (29/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "utils.plots",
        "obj": "plot_images",
        "line": 181,
        "column": 17,
        "endLine": 181,
        "endColumn": 27,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "plot_images",
        "line": 152,
        "column": 0,
        "endLine": 152,
        "endColumn": 15,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (14/12)",
        "message-id": "R0912"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_val_txt",
        "line": 244,
        "column": 4,
        "endLine": 244,
        "endColumn": 7,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'fig'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_targets_txt",
        "line": 263,
        "column": 4,
        "endLine": 263,
        "endColumn": 7,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'fig'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_val_study",
        "line": 272,
        "column": 28,
        "endLine": 272,
        "endColumn": 31,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_val_study",
        "line": 284,
        "column": 4,
        "endLine": 284,
        "endColumn": 8,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'fig2'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_labels",
        "line": 330,
        "column": 4,
        "endLine": 330,
        "endColumn": 68,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "plot_labels",
        "line": 336,
        "column": 72,
        "endLine": 336,
        "endColumn": 85,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"bins\": 50}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "plot_labels",
        "line": 336,
        "column": 96,
        "endLine": 336,
        "endColumn": 110,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"pmax\": 0.9}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_labels",
        "line": 345,
        "column": 8,
        "endLine": 345,
        "endColumn": 84,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"[y[2].patches[i].set_color([x / 255 for x in colors(i)]) for i in range(nc)]\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 373,
        "column": 0,
        "endLine": 373,
        "endColumn": 14,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 373,
        "column": 0,
        "endLine": 373,
        "endColumn": 14,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 375,
        "column": 4,
        "endLine": 375,
        "endColumn": 47,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.augmentations.denormalize)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 395,
        "column": 8,
        "endLine": 395,
        "endColumn": 34,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 397,
        "column": 12,
        "endLine": 397,
        "endColumn": 89,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 399,
        "column": 12,
        "endLine": 399,
        "endColumn": 87,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "logging-not-lazy",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1201"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "imshow_cls",
        "line": 383,
        "column": 4,
        "endLine": 383,
        "endColumn": 7,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'fig'",
        "message-id": "W0612"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_results",
        "line": 434,
        "column": 45,
        "endLine": 434,
        "endColumn": 48,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "plot_results",
        "line": 444,
        "column": 11,
        "endLine": 444,
        "endColumn": 21,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_results",
        "line": 458,
        "column": 15,
        "endLine": 458,
        "endColumn": 24,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "plot_results",
        "line": 459,
        "column": 12,
        "endLine": 459,
        "endColumn": 64,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "profile_idetection",
        "line": 465,
        "column": 0,
        "endLine": 465,
        "endColumn": 22,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.plots",
        "obj": "profile_idetection",
        "line": 494,
        "column": 15,
        "endLine": 494,
        "endColumn": 24,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "profile_idetection",
        "line": 484,
        "column": 42,
        "endLine": 484,
        "endColumn": 53,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.plots",
        "obj": "save_one_box",
        "line": 500,
        "column": 81,
        "endLine": 500,
        "endColumn": 84,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "invalid-name",
        "message": "Argument name \"BGR\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "save_one_box",
        "line": 500,
        "column": 0,
        "endLine": 500,
        "endColumn": 16,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.plots",
        "obj": "save_one_box",
        "line": 500,
        "column": 0,
        "endLine": 500,
        "endColumn": 16,
        "path": "yolov5\\utils\\plots.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 61,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 70,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 89,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 106,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 109,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 117,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 123,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 126,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 129,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 136,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 138,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 152,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 170,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 179,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 192,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 200,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 201,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 202,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 217,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 222,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 237,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 290,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 299,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 306,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 317,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 318,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 324,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 325,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 329,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 358,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 369,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 389,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 401,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 415,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 417,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 423,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 426,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 429,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 433,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 442,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 445,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 451,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 453,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 457,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 462,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 467,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 476,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 479,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 21,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 22,
        "column": 17,
        "endLine": 22,
        "endColumn": 44,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 23,
        "column": 11,
        "endLine": 23,
        "endColumn": 32,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "",
        "line": 24,
        "column": 17,
        "endLine": 24,
        "endColumn": 43,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "smartCrossEntropyLoss",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 25,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "invalid-name",
        "message": "Function name \"smartCrossEntropyLoss\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "smartCrossEntropyLoss",
        "line": 53,
        "column": 8,
        "endLine": 53,
        "endColumn": 98,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "smart_DDP",
        "line": 57,
        "column": 0,
        "endLine": 57,
        "endColumn": 13,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "invalid-name",
        "message": "Function name \"smart_DDP\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "smart_DDP",
        "line": 63,
        "column": 4,
        "endLine": 66,
        "endColumn": 76,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1705"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "reshape_classifier_output",
        "line": 71,
        "column": 4,
        "endLine": 71,
        "endColumn": 38,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (models.common.Classify)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "device_count",
        "line": 110,
        "column": 11,
        "endLine": 110,
        "endColumn": 20,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "profile",
        "line": 158,
        "column": 0,
        "endLine": 158,
        "endColumn": 11,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "profile",
        "line": 158,
        "column": 12,
        "endLine": 158,
        "endColumn": 17,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "profile",
        "line": 183,
        "column": 19,
        "endLine": 183,
        "endColumn": 28,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "profile",
        "line": 204,
        "column": 19,
        "endLine": 204,
        "endColumn": 28,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "profile",
        "line": 194,
        "column": 27,
        "endLine": 194,
        "endColumn": 36,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "prune",
        "line": 254,
        "column": 4,
        "endLine": 254,
        "endColumn": 40,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'prune' from outer scope (line 252)",
        "message-id": "W0621"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "prune",
        "line": 254,
        "column": 4,
        "endLine": 254,
        "endColumn": 40,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch.nn.utils import prune' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "prune",
        "line": 254,
        "column": 4,
        "endLine": 254,
        "endColumn": 40,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (torch.nn.utils.prune)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "prune",
        "line": 260,
        "column": 4,
        "endLine": 260,
        "endColumn": 73,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "prune",
        "line": 256,
        "column": 8,
        "endLine": 256,
        "endColumn": 12,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'name'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "model_info",
        "line": 310,
        "column": 16,
        "endLine": 310,
        "endColumn": 54,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "consider-using-f-string",
        "message": "Formatting a regular string which could be an f-string",
        "message-id": "C0209"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "model_info",
        "line": 321,
        "column": 11,
        "endLine": 321,
        "endColumn": 20,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "model_info",
        "line": 325,
        "column": 4,
        "endLine": 325,
        "endColumn": 110,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "copy_attr",
        "line": 345,
        "column": 8,
        "endLine": 348,
        "endColumn": 28,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "no-else-continue",
        "message": "Unnecessary \"else\" after \"continue\", remove the \"else\" and de-indent the code inside it",
        "message-id": "R1724"
    },
    {
        "type": "convention",
        "module": "utils.torch_utils",
        "obj": "copy_attr",
        "line": 345,
        "column": 12,
        "endLine": 345,
        "endColumn": 24,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "smart_optimizer",
        "line": 381,
        "column": 4,
        "endLine": 384,
        "endColumn": 5,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "smart_hub_load",
        "line": 396,
        "column": 11,
        "endLine": 396,
        "endColumn": 20,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "smart_resume",
        "line": 400,
        "column": 0,
        "endLine": 400,
        "endColumn": 16,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "smart_resume",
        "line": 400,
        "column": 0,
        "endLine": 400,
        "endColumn": 16,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "smart_resume",
        "line": 415,
        "column": 8,
        "endLine": 415,
        "endColumn": 106,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "smart_resume",
        "line": 417,
        "column": 8,
        "endLine": 417,
        "endColumn": 116,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.torch_utils",
        "obj": "EarlyStopping.__call__",
        "line": 441,
        "column": 12,
        "endLine": 446,
        "endColumn": 13,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.torch_utils",
        "obj": "EarlyStopping",
        "line": 422,
        "column": 0,
        "endLine": 422,
        "endColumn": 19,
        "path": "yolov5\\utils\\torch_utils.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "",
        "line": 14,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "",
        "line": 34,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "",
        "line": 57,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "",
        "line": 61,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "error",
        "module": "utils.triton",
        "obj": "TritonRemoteModel.__init__",
        "line": 25,
        "column": 12,
        "endLine": 25,
        "endColumn": 75,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "import-error",
        "message": "Unable to import 'tritonclient.grpc'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "TritonRemoteModel.__init__",
        "line": 25,
        "column": 12,
        "endLine": 25,
        "endColumn": 75,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tritonclient.grpc.InferenceServerClient, tritonclient.grpc.InferInput)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "utils.triton",
        "obj": "TritonRemoteModel.__init__",
        "line": 38,
        "column": 12,
        "endLine": 38,
        "endColumn": 75,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "import-error",
        "message": "Unable to import 'tritonclient.http'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "utils.triton",
        "obj": "TritonRemoteModel.__init__",
        "line": 38,
        "column": 12,
        "endLine": 38,
        "endColumn": 75,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (tritonclient.http.InferenceServerClient, tritonclient.http.InferInput)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils.triton",
        "obj": "TritonRemoteModel._create_inputs",
        "line": 84,
        "column": 16,
        "endLine": 84,
        "endColumn": 21,
        "path": "yolov5\\utils\\triton.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'input'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 61,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 77,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.__init__",
        "obj": "",
        "line": 91,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils",
        "obj": "emojis",
        "line": 9,
        "column": 11,
        "endLine": 9,
        "endColumn": 14,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'str'",
        "message-id": "W0622"
    },
    {
        "type": "warning",
        "module": "utils",
        "obj": "TryExcept.__enter__",
        "line": 23,
        "column": 8,
        "endLine": 23,
        "endColumn": 12,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 64,
        "column": 4,
        "endLine": 64,
        "endColumn": 13,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (os)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 65,
        "column": 4,
        "endLine": 65,
        "endColumn": 17,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (shutil)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 67,
        "column": 4,
        "endLine": 67,
        "endColumn": 59,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (ultralytics.utils.checks.check_requirements)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 69,
        "column": 4,
        "endLine": 69,
        "endColumn": 50,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.general.check_font, utils.general.is_colab)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 70,
        "column": 4,
        "endLine": 70,
        "endColumn": 47,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (utils.torch_utils.select_device)",
        "message-id": "C0415"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 74,
        "column": 4,
        "endLine": 74,
        "endColumn": 17,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (psutil)",
        "message-id": "C0415"
    },
    {
        "type": "error",
        "module": "utils",
        "obj": "notebook_init",
        "line": 88,
        "column": 12,
        "endLine": 88,
        "endColumn": 39,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-error",
        "message": "Unable to import 'IPython'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "utils",
        "obj": "notebook_init",
        "line": 88,
        "column": 12,
        "endLine": 88,
        "endColumn": 39,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (IPython.display)",
        "message-id": "C0415"
    },
    {
        "type": "warning",
        "module": "utils",
        "obj": "notebook_init",
        "line": 86,
        "column": 15,
        "endLine": 86,
        "endColumn": 19,
        "path": "yolov5\\utils\\__init__.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'used'",
        "message-id": "W0612"
    },
    {
        "type": "convention",
        "module": "utils.aws.resume",
        "obj": "",
        "line": 35,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\aws\\resume.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.aws.resume",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\aws\\resume.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.aws.resume",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 4,
        "path": "yolov5\\utils\\aws\\resume.py",
        "symbol": "invalid-name",
        "message": "Constant name \"port\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "utils.aws.resume",
        "obj": "",
        "line": 25,
        "column": 9,
        "endLine": 25,
        "endColumn": 63,
        "path": "yolov5\\utils\\aws\\resume.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "utils.aws.resume",
        "obj": "",
        "line": 35,
        "column": 8,
        "endLine": 35,
        "endColumn": 11,
        "path": "yolov5\\utils\\aws\\resume.py",
        "symbol": "invalid-name",
        "message": "Constant name \"cmd\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.aws.resume",
        "obj": "",
        "line": 37,
        "column": 8,
        "endLine": 37,
        "endColumn": 11,
        "path": "yolov5\\utils\\aws\\resume.py",
        "symbol": "invalid-name",
        "message": "Constant name \"cmd\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "example_request",
        "obj": "",
        "line": 15,
        "column": 11,
        "endLine": 15,
        "endColumn": 68,
        "path": "yolov5\\utils\\flask_rest_api\\example_request.py",
        "symbol": "missing-timeout",
        "message": "Missing timeout argument for method 'requests.post' can cause your program to hang indefinitely",
        "message-id": "W3101"
    },
    {
        "type": "convention",
        "module": "restapi",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\flask_rest_api\\restapi.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "restapi",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\flask_rest_api\\restapi.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "error",
        "module": "restapi",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 32,
        "path": "yolov5\\utils\\flask_rest_api\\restapi.py",
        "symbol": "import-error",
        "message": "Unable to import 'flask'",
        "message-id": "E0401"
    },
    {
        "type": "refactor",
        "module": "restapi",
        "obj": "predict",
        "line": 18,
        "column": 0,
        "endLine": 18,
        "endColumn": 11,
        "path": "yolov5\\utils\\flask_rest_api\\restapi.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 105,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 115,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 121,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 139,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 160,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 195,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 208,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 216,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 236,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 253,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 258,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 280,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 292,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 293,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 295,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 308,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 312,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 333,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 370,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 376,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 390,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 391,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 397,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 401,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 417,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 463,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.__init__",
        "obj": "",
        "line": 475,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "",
        "line": 19,
        "column": 11,
        "endLine": 19,
        "endColumn": 32,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "convention",
        "module": "utils.loggers",
        "obj": "SummaryWriter",
        "line": 25,
        "column": 4,
        "endLine": 25,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "invalid-name",
        "message": "Function name \"SummaryWriter\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "SummaryWriter",
        "line": 25,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'args'",
        "message-id": "W0613"
    },
    {
        "type": "convention",
        "module": "utils.loggers",
        "obj": "",
        "line": 38,
        "column": 12,
        "endLine": 38,
        "endColumn": 31,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"wandb_login_success\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.loggers",
        "obj": "",
        "line": 40,
        "column": 12,
        "endLine": 40,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"wandb\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.loggers",
        "obj": "",
        "line": 59,
        "column": 8,
        "endLine": 59,
        "endColumn": 16,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "invalid-name",
        "message": "Constant name \"comet_ml\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers",
        "line": 78,
        "column": 0,
        "endLine": 78,
        "endColumn": 13,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (16/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.__init__",
        "line": 81,
        "column": 4,
        "endLine": 81,
        "endColumn": 16,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.__init__",
        "line": 81,
        "column": 4,
        "endLine": 81,
        "endColumn": 16,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "Loggers.__init__",
        "line": 135,
        "column": 19,
        "endLine": 135,
        "endColumn": 28,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "Loggers.__init__",
        "line": 138,
        "column": 16,
        "endLine": 141,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "error",
        "module": "utils.loggers",
        "obj": "Loggers.__init__",
        "line": 150,
        "column": 36,
        "endLine": 150,
        "endColumn": 47,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'CometLogger' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.loggers",
        "obj": "Loggers.on_pretrain_routine_start",
        "line": 179,
        "column": 12,
        "endLine": 179,
        "endColumn": 55,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "no-member",
        "message": "Instance of 'CometLogger' has no 'on_pretrain_routine_start' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_train_batch_end",
        "line": 194,
        "column": 4,
        "endLine": 194,
        "endColumn": 26,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_train_batch_end",
        "line": 194,
        "column": 4,
        "endLine": 194,
        "endColumn": 26,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_val_image_end",
        "line": 228,
        "column": 4,
        "endLine": 228,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_val_image_end",
        "line": 228,
        "column": 4,
        "endLine": 228,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_val_batch_end",
        "line": 235,
        "column": 4,
        "endLine": 235,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_val_batch_end",
        "line": 235,
        "column": 4,
        "endLine": 235,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_val_end",
        "line": 240,
        "column": 4,
        "endLine": 240,
        "endColumn": 18,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_val_end",
        "line": 240,
        "column": 4,
        "endLine": 240,
        "endColumn": 18,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (11/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_fit_epoch_end",
        "line": 252,
        "column": 4,
        "endLine": 252,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "Loggers.on_fit_epoch_end",
        "line": 259,
        "column": 17,
        "endLine": 259,
        "endColumn": 32,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_fit_epoch_end",
        "line": 262,
        "column": 35,
        "endLine": 262,
        "endColumn": 57,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "use-dict-literal",
        "message": "Consider using '{\"epoch\": epoch, **x}' instead of a call to 'dict'.",
        "message-id": "R1735"
    },
    {
        "type": "error",
        "module": "utils.loggers",
        "obj": "Loggers.on_fit_epoch_end",
        "line": 264,
        "column": 18,
        "endLine": 264,
        "endColumn": 27,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'json_data' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "Loggers.on_fit_epoch_end",
        "line": 267,
        "column": 17,
        "endLine": 267,
        "endColumn": 32,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_model_save",
        "line": 291,
        "column": 4,
        "endLine": 291,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers",
        "obj": "Loggers.on_model_save",
        "line": 291,
        "column": 4,
        "endLine": 291,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "Loggers.on_train_end",
        "line": 331,
        "column": 12,
        "endLine": 331,
        "endColumn": 77,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"[self.clearml.log_plot(title=f.stem, plot_path=f) for f in files]\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "GenericLogger.__init__",
        "line": 386,
        "column": 19,
        "endLine": 386,
        "endColumn": 28,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "GenericLogger.__init__",
        "line": 389,
        "column": 16,
        "endLine": 392,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "GenericLogger.log_metrics",
        "line": 402,
        "column": 17,
        "endLine": 402,
        "endColumn": 36,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "GenericLogger.log_images",
        "line": 429,
        "column": 16,
        "endLine": 429,
        "endColumn": 65,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "expression-not-assigned",
        "message": "Expression \"[self.clearml.log_plot(f.stem, f) for f in files]\" is assigned to nothing",
        "message-id": "W0106"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "GenericLogger.log_model",
        "line": 438,
        "column": 36,
        "endLine": 438,
        "endColumn": 41,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'epoch'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "log_tensorboard_graph",
        "line": 467,
        "column": 11,
        "endLine": 467,
        "endColumn": 20,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.loggers",
        "obj": "log_tensorboard_graph",
        "line": 468,
        "column": 8,
        "endLine": 468,
        "endColumn": 85,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "convention",
        "module": "utils.loggers",
        "obj": "",
        "line": 56,
        "column": 8,
        "endLine": 56,
        "endColumn": 51,
        "path": "yolov5\\utils\\loggers\\__init__.py",
        "symbol": "ungrouped-imports",
        "message": "Imports from package utils are not grouped",
        "message-id": "C0412"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 48,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (142/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 56,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 72,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 75,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 108,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 116,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 126,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 177,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 180,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 195,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 204,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 211,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 213,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "",
        "line": 228,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "construct_dataset",
        "line": 31,
        "column": 4,
        "endLine": 40,
        "endColumn": 9,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "no-else-raise",
        "message": "Unnecessary \"elif\" after \"raise\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1720"
    },
    {
        "type": "warning",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "construct_dataset",
        "line": 41,
        "column": 9,
        "endLine": 41,
        "endColumn": 32,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "ClearmlLogger.log_image_with_boxes",
        "line": 198,
        "column": 4,
        "endLine": 198,
        "endColumn": 28,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "ClearmlLogger.log_image_with_boxes",
        "line": 198,
        "column": 4,
        "endLine": 198,
        "endColumn": 28,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.clearml.clearml_utils",
        "obj": "ClearmlLogger.log_image_with_boxes",
        "line": 198,
        "column": 4,
        "endLine": 198,
        "endColumn": 28,
        "path": "yolov5\\utils\\loggers\\clearml\\clearml_utils.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 79,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 3,
        "column": 0,
        "endLine": 3,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "import-error",
        "message": "Unable to import 'clearml'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 7,
        "column": 0,
        "endLine": 7,
        "endColumn": 77,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "import-error",
        "message": "Unable to import 'clearml.automation'",
        "message-id": "E0401"
    },
    {
        "type": "error",
        "module": "utils.loggers.clearml.hpo",
        "obj": "",
        "line": 8,
        "column": 0,
        "endLine": 8,
        "endColumn": 53,
        "path": "yolov5\\utils\\loggers\\clearml\\hpo.py",
        "symbol": "import-error",
        "message": "Unable to import 'clearml.automation.optuna'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "",
        "line": 102,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "download_model_checkpoint",
        "line": 30,
        "column": 8,
        "endLine": 30,
        "endColumn": 88,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "download_model_checkpoint",
        "line": 50,
        "column": 8,
        "endLine": 50,
        "endColumn": 104,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "download_model_checkpoint",
        "line": 64,
        "column": 11,
        "endLine": 64,
        "endColumn": 20,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "download_model_checkpoint",
        "line": 54,
        "column": 8,
        "endLine": 54,
        "endColumn": 80,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "set_opt_parameters",
        "line": 95,
        "column": 9,
        "endLine": 95,
        "endColumn": 33,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "check_comet_weights",
        "line": 100,
        "column": 0,
        "endLine": 100,
        "endColumn": 23,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet.comet_utils",
        "obj": "check_comet_resume",
        "line": 126,
        "column": 0,
        "endLine": 126,
        "endColumn": 22,
        "path": "yolov5\\utils\\loggers\\comet\\comet_utils.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 34,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 36,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 39,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 47,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 49,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 53,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 56,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 62,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 63,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 64,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 65,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 71,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 72,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 73,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 76,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 77,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 78,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 91,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "error",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 15,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "import-error",
        "message": "Unable to import 'comet_ml'",
        "message-id": "E0401"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 23,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from train import train\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": 20,
        "endColumn": 37,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.callbacks import Callbacks\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 40,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import increment_path\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 43,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.torch_utils import select_device\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.hpo",
        "obj": "run",
        "line": 90,
        "column": 20,
        "endLine": 90,
        "endColumn": 23,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'opt' from outer scope (line 103)",
        "message-id": "W0621"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet.hpo",
        "obj": "",
        "line": 112,
        "column": 13,
        "endLine": 112,
        "endColumn": 45,
        "path": "yolov5\\utils\\loggers\\comet\\hpo.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 70,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 144,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 173,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 206,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 210,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 226,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 263,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (101/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 329,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 375,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 388,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 395,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 402,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 408,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 439,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 450,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 483,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 484,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 502,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet.__init__",
        "obj": "",
        "line": 542,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "line-too-long",
        "message": "Line too long (104/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 10,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import PIL\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": 28,
        "endColumn": 12,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import torch\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 34,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import torchvision.transforms as T\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 11,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"import yaml\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": 32,
        "endColumn": 45,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.dataloaders import img2label_paths\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 63,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.general import check_dataset, scale_boxes, xywh2xyxy\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "convention",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 34,
        "column": 0,
        "endLine": 34,
        "endColumn": 33,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.metrics import box_iou\" should be placed at the top of the module",
        "message-id": "C0413"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 49,
        "column": 30,
        "endLine": 49,
        "endColumn": 71,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 52,
        "column": 19,
        "endLine": 52,
        "endColumn": 49,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.float. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 53,
        "column": 18,
        "endLine": 53,
        "endColumn": 45,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.float. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 57,
        "column": 31,
        "endLine": 57,
        "endColumn": 75,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 58,
        "column": 36,
        "endLine": 58,
        "endColumn": 85,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "",
        "line": 61,
        "column": 11,
        "endLine": 61,
        "endColumn": 32,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (25/7)",
        "message-id": "R0902"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.__init__",
        "line": 69,
        "column": 4,
        "endLine": 69,
        "endColumn": 16,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (54/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger._get_experiment",
        "line": 172,
        "column": 4,
        "endLine": 172,
        "endColumn": 23,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "inconsistent-return-statements",
        "message": "Either all return statements in a function should return an expression, or none of them should.",
        "message-id": "R1710"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_model",
        "line": 225,
        "column": 4,
        "endLine": 225,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_model",
        "line": 225,
        "column": 4,
        "endLine": 225,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_model",
        "line": 225,
        "column": 57,
        "endLine": 225,
        "endColumn": 67,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'best_model'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.check_dataset",
        "line": 251,
        "column": 13,
        "endLine": 251,
        "endColumn": 28,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "unspecified-encoding",
        "message": "Using open without explicitly specifying an encoding",
        "message-id": "W1514"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_predictions",
        "line": 262,
        "column": 4,
        "endLine": 262,
        "endColumn": 23,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_predictions",
        "line": 262,
        "column": 4,
        "endLine": 262,
        "endColumn": 23,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_predictions",
        "line": 262,
        "column": 30,
        "endLine": 262,
        "endColumn": 35,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'image'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.log_predictions",
        "line": 262,
        "column": 52,
        "endLine": 262,
        "endColumn": 57,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'shape'",
        "message-id": "W0613"
    },
    {
        "type": "warning",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.add_assets_to_artifact",
        "line": 344,
        "column": 16,
        "endLine": 344,
        "endColumn": 49,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.upload_dataset_artifact",
        "line": 349,
        "column": 4,
        "endLine": 349,
        "endColumn": 31,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "useless-return",
        "message": "Useless return at end of function or method",
        "message-id": "R1711"
    },
    {
        "type": "error",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.download_dataset_artifact",
        "line": 390,
        "column": 12,
        "endLine": 390,
        "endColumn": 95,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "raising-bad-type",
        "message": "Raising str while only classes or instances are allowed",
        "message-id": "E0702"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_train_epoch_end",
        "line": 428,
        "column": 4,
        "endLine": 428,
        "endColumn": 26,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "useless-return",
        "message": "Useless return at end of function or method",
        "message-id": "R1711"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_train_batch_end",
        "line": 438,
        "column": 4,
        "endLine": 438,
        "endColumn": 26,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "useless-return",
        "message": "Useless return at end of function or method",
        "message-id": "R1711"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_train_end",
        "line": 446,
        "column": 4,
        "endLine": 446,
        "endColumn": 20,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_train_end",
        "line": 446,
        "column": 4,
        "endLine": 446,
        "endColumn": 20,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_val_batch_end",
        "line": 482,
        "column": 4,
        "endLine": 482,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (7/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_val_batch_end",
        "line": 482,
        "column": 4,
        "endLine": 482,
        "endColumn": 24,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (7/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_val_end",
        "line": 501,
        "column": 4,
        "endLine": 501,
        "endColumn": 18,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (11/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_val_end",
        "line": 501,
        "column": 4,
        "endLine": 501,
        "endColumn": 18,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (11/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_val_end",
        "line": 501,
        "column": 4,
        "endLine": 501,
        "endColumn": 18,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (17/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_model_save",
        "line": 540,
        "column": 4,
        "endLine": 540,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger.on_model_save",
        "line": 540,
        "column": 4,
        "endLine": 540,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.comet",
        "obj": "CometLogger",
        "line": 66,
        "column": 0,
        "endLine": 66,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\comet\\__init__.py",
        "symbol": "too-many-public-methods",
        "message": "Too many public methods (28/20)",
        "message-id": "R0904"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 40,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 81,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 89,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 90,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 104,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (124/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 201,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "",
        "line": 18,
        "column": 11,
        "endLine": 18,
        "endColumn": 32,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger",
        "line": 33,
        "column": 0,
        "endLine": 33,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (16/7)",
        "message-id": "R0902"
    },
    {
        "type": "error",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.setup_training",
        "line": 100,
        "column": 27,
        "endLine": 100,
        "endColumn": 55,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "no-member",
        "message": "Instance of 'WandbLogger' has no 'download_model_artifact' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.log_model",
        "line": 119,
        "column": 4,
        "endLine": 119,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.log_model",
        "line": 119,
        "column": 4,
        "endLine": 119,
        "endColumn": 17,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.log_model",
        "line": 152,
        "column": 8,
        "endLine": 152,
        "endColumn": 66,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.val_one_image",
        "line": 154,
        "column": 4,
        "endLine": 154,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.val_one_image",
        "line": 154,
        "column": 4,
        "endLine": 154,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "warning",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.val_one_image",
        "line": 156,
        "column": 8,
        "endLine": 156,
        "endColumn": 12,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "unnecessary-pass",
        "message": "Unnecessary pass statement",
        "message-id": "W0107"
    },
    {
        "type": "warning",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.end_epoch",
        "line": 180,
        "column": 23,
        "endLine": 180,
        "endColumn": 36,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception BaseException",
        "message-id": "W0718"
    },
    {
        "type": "warning",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.end_epoch",
        "line": 181,
        "column": 20,
        "endLine": 183,
        "endColumn": 21,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
    },
    {
        "type": "warning",
        "module": "utils.loggers.wandb.wandb_utils",
        "obj": "WandbLogger.end_epoch",
        "line": 186,
        "column": 16,
        "endLine": 186,
        "endColumn": 29,
        "path": "yolov5\\utils\\loggers\\wandb\\wandb_utils.py",
        "symbol": "attribute-defined-outside-init",
        "message": "Attribute 'log_dict' defined outside __init__",
        "message-id": "W0201"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "",
        "line": 28,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "",
        "line": 32,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "",
        "line": 88,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "line-too-long",
        "message": "Line too long (102/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.segment.augmentations",
        "obj": "mixup",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 9,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.augmentations",
        "obj": "mixup",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 9,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 22,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (9/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 22,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (9/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 27,
        "column": 0,
        "endLine": 27,
        "endColumn": 22,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (25/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 37,
        "column": 4,
        "endLine": 37,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"C\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 42,
        "column": 4,
        "endLine": 42,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"P\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 47,
        "column": 4,
        "endLine": 47,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"R\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 52,
        "column": 12,
        "endLine": 52,
        "endColumn": 35,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'getRotationMatrix2D' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 55,
        "column": 4,
        "endLine": 55,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"S\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 60,
        "column": 4,
        "endLine": 60,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"T\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 65,
        "column": 4,
        "endLine": 65,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "invalid-name",
        "message": "Variable name \"M\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "error",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 68,
        "column": 17,
        "endLine": 68,
        "endColumn": 36,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'warpPerspective' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.segment.augmentations",
        "obj": "random_perspective",
        "line": 70,
        "column": 17,
        "endLine": 70,
        "endColumn": 31,
        "path": "yolov5\\utils\\segment\\augmentations.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'warpAffine' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 42,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 44,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 67,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 69,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 80,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 87,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 109,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 131,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (120/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 144,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 151,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 168,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (111/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 184,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 192,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 198,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 239,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 242,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 252,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (108/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 253,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 254,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 272,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 300,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "line-too-long",
        "message": "Line too long (118/100)",
        "message-id": "C0301"
    },
    {
        "type": "warning",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 201,
        "column": 9,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "fixme",
        "message": "TODO: albumentations support",
        "message-id": "W0511"
    },
    {
        "type": "warning",
        "module": "utils.segment.dataloaders",
        "obj": "",
        "line": 18,
        "column": 11,
        "endLine": 18,
        "endColumn": 32,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "invalid-envvar-default",
        "message": "os.getenv default type is builtins.int. Expected str or None.",
        "message-id": "W1508"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "create_dataloader",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (19/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "create_dataloader",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (19/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "create_dataloader",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (25/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__init__",
        "line": 89,
        "column": 4,
        "endLine": 89,
        "endColumn": 16,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (18/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__init__",
        "line": 89,
        "column": 4,
        "endLine": 89,
        "endColumn": 16,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (18/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__init__",
        "line": 89,
        "column": 4,
        "endLine": 89,
        "endColumn": 16,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (18/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__getitem__",
        "line": 130,
        "column": 4,
        "endLine": 130,
        "endColumn": 19,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (20/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__getitem__",
        "line": 159,
        "column": 16,
        "endLine": 166,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__getitem__",
        "line": 196,
        "column": 15,
        "endLine": 196,
        "endColumn": 25,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__getitem__",
        "line": 206,
        "column": 26,
        "endLine": 206,
        "endColumn": 58,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "not-callable",
        "message": "self.albumentations is not callable",
        "message-id": "E1102"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__getitem__",
        "line": 130,
        "column": 4,
        "endLine": 130,
        "endColumn": 19,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (16/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.__getitem__",
        "line": 130,
        "column": 4,
        "endLine": 130,
        "endColumn": 19,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (52/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.load_mosaic",
        "line": 238,
        "column": 4,
        "endLine": 238,
        "endColumn": 19,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (26/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.load_mosaic",
        "line": 246,
        "column": 15,
        "endLine": 246,
        "endColumn": 20,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "redefined-argument-from-local",
        "message": "Redefining argument with the local name 'index'",
        "message-id": "R1704"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.load_mosaic",
        "line": 265,
        "column": 41,
        "endLine": 265,
        "endColumn": 44,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'y1b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.load_mosaic",
        "line": 265,
        "column": 45,
        "endLine": 265,
        "endColumn": 48,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'y2b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.load_mosaic",
        "line": 265,
        "column": 50,
        "endLine": 265,
        "endColumn": 53,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'x1b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "LoadImagesAndLabelsAndMasks.load_mosaic",
        "line": 265,
        "column": 54,
        "endLine": 265,
        "endColumn": 57,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "possibly-used-before-assignment",
        "message": "Possibly using variable 'x2b' before assignment",
        "message-id": "E0606"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "polygon2mask",
        "line": 320,
        "column": 4,
        "endLine": 320,
        "endColumn": 16,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'fillPoly' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.segment.dataloaders",
        "obj": "polygon2mask",
        "line": 324,
        "column": 11,
        "endLine": 324,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "polygons2masks",
        "line": 337,
        "column": 4,
        "endLine": 339,
        "endColumn": 26,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "utils.segment.dataloaders",
        "obj": "polygons2masks_overlap",
        "line": 351,
        "column": 4,
        "endLine": 359,
        "endColumn": 32,
        "path": "yolov5\\utils\\segment\\dataloaders.py",
        "symbol": "consider-using-enumerate",
        "message": "Consider using enumerate instead of iterating with range and len",
        "message-id": "C0200"
    },
    {
        "type": "convention",
        "module": "utils.segment.general",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.general",
        "obj": "",
        "line": 100,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.general",
        "obj": "",
        "line": 128,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (105/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.general",
        "obj": "",
        "line": 146,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.general",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "warning",
        "module": "utils.segment.general",
        "obj": "crop_mask",
        "line": 17,
        "column": 4,
        "endLine": 17,
        "endColumn": 5,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "unused-variable",
        "message": "Unused variable 'n'",
        "message-id": "W0612"
    },
    {
        "type": "error",
        "module": "utils.segment.general",
        "obj": "scale_image",
        "line": 112,
        "column": 12,
        "endLine": 112,
        "endColumn": 22,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.segment.general",
        "obj": "masks2segments",
        "line": 151,
        "column": 12,
        "endLine": 151,
        "endColumn": 28,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'findContours' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.segment.general",
        "obj": "masks2segments",
        "line": 151,
        "column": 32,
        "endLine": 151,
        "endColumn": 49,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'RETR_EXTERNAL' member",
        "message-id": "E1101"
    },
    {
        "type": "error",
        "module": "utils.segment.general",
        "obj": "masks2segments",
        "line": 151,
        "column": 51,
        "endLine": 151,
        "endColumn": 74,
        "path": "yolov5\\utils\\segment\\general.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'CHAIN_APPROX_SIMPLE' member",
        "message-id": "E1101"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 18,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 31,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (106/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 41,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (107/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 66,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 94,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 98,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (103/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 119,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 120,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (115/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 125,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 131,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (117/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 137,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 141,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 169,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 191,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "utils.segment.loss",
        "obj": "",
        "line": 4,
        "column": 0,
        "endLine": 4,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "consider-using-from-import",
        "message": "Use 'from torch import nn' instead",
        "message-id": "R0402"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__init__",
        "line": 41,
        "column": 8,
        "endLine": 41,
        "endColumn": 19,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BCEcls\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__init__",
        "line": 41,
        "column": 21,
        "endLine": 41,
        "endColumn": 32,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "invalid-name",
        "message": "Attribute name \"BCEobj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss",
        "line": 14,
        "column": 0,
        "endLine": 14,
        "endColumn": 17,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "too-many-instance-attributes",
        "message": "Too many instance attributes (17/7)",
        "message-id": "R0902"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__init__",
        "line": 27,
        "column": 8,
        "endLine": 27,
        "endColumn": 14,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEcls\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__init__",
        "line": 28,
        "column": 8,
        "endLine": 28,
        "endColumn": 14,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEobj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__init__",
        "line": 36,
        "column": 12,
        "endLine": 36,
        "endColumn": 18,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEcls\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__init__",
        "line": 36,
        "column": 20,
        "endLine": 36,
        "endColumn": 26,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "invalid-name",
        "message": "Variable name \"BCEobj\" doesn't conform to snake_case naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.__call__",
        "line": 49,
        "column": 4,
        "endLine": 49,
        "endColumn": 16,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (42/15)",
        "message-id": "R0914"
    },
    {
        "type": "refactor",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.single_mask_loss",
        "line": 118,
        "column": 4,
        "endLine": 118,
        "endColumn": 24,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.single_mask_loss",
        "line": 118,
        "column": 4,
        "endLine": 118,
        "endColumn": 24,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.segment.loss",
        "obj": "ComputeLoss.build_targets",
        "line": 124,
        "column": 4,
        "endLine": 124,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\loss.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (40/15)",
        "message-id": "R0914"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 57,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 60,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 136,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (110/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 159,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (112/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 174,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (116/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "",
        "line": 182,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "refactor",
        "module": "utils.segment.metrics",
        "obj": "ap_per_class_box_and_mask",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 29,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (8/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.metrics",
        "obj": "ap_per_class_box_and_mask",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 29,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (8/5)",
        "message-id": "R0917"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "Metric.ap50",
        "line": 77,
        "column": 36,
        "endLine": 77,
        "endColumn": 52,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "Metric.ap",
        "line": 85,
        "column": 38,
        "endLine": 85,
        "endColumn": 54,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "Metric.mp",
        "line": 95,
        "column": 32,
        "endLine": 95,
        "endColumn": 43,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "Metric.mr",
        "line": 105,
        "column": 32,
        "endLine": 105,
        "endColumn": 43,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "Metric.map50",
        "line": 115,
        "column": 43,
        "endLine": 115,
        "endColumn": 59,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.segment.metrics",
        "obj": "Metric.map",
        "line": 125,
        "column": 37,
        "endLine": 125,
        "endColumn": 53,
        "path": "yolov5\\utils\\segment\\metrics.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "",
        "line": 20,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (114/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "",
        "line": 59,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (113/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "",
        "line": 117,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "",
        "line": 130,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (119/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "",
        "line": 140,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "line-too-long",
        "message": "Line too long (109/100)",
        "message-id": "C0301"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "missing-module-docstring",
        "message": "Missing module docstring",
        "message-id": "C0114"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 25,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-arguments",
        "message": "Too many arguments (6/5)",
        "message-id": "R0913"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 25,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-positional-arguments",
        "message": "Too many positional arguments (6/5)",
        "message-id": "R0917"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 25,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (37/15)",
        "message-id": "R0914"
    },
    {
        "type": "error",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 50,
        "column": 17,
        "endLine": 50,
        "endColumn": 27,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "warning",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 55,
        "column": 19,
        "endLine": 55,
        "endColumn": 20,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "undefined-loop-variable",
        "message": "Using possibly undefined loop variable 'i'",
        "message-id": "W0631"
    },
    {
        "type": "error",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 103,
        "column": 35,
        "endLine": 103,
        "endColumn": 45,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "no-member",
        "message": "Module 'cv2' has no 'resize' member",
        "message-id": "E1101"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 55,
        "column": 4,
        "endLine": 111,
        "endColumn": 39,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-nested-blocks",
        "message": "Too many nested blocks (6/5)",
        "message-id": "R1702"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 25,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-branches",
        "message": "Too many branches (22/12)",
        "message-id": "R0912"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_images_and_masks",
        "line": 19,
        "column": 0,
        "endLine": 19,
        "endColumn": 25,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-statements",
        "message": "Too many statements (75/50)",
        "message-id": "R0915"
    },
    {
        "type": "refactor",
        "module": "utils.segment.plots",
        "obj": "plot_results_with_masks",
        "line": 115,
        "column": 0,
        "endLine": 115,
        "endColumn": 27,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "too-many-locals",
        "message": "Too many local variables (16/15)",
        "message-id": "R0914"
    },
    {
        "type": "warning",
        "module": "utils.segment.plots",
        "obj": "plot_results_with_masks",
        "line": 115,
        "column": 56,
        "endLine": 115,
        "endColumn": 59,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'dir'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": "utils.segment.plots",
        "obj": "plot_results_with_masks",
        "line": 125,
        "column": 11,
        "endLine": 125,
        "endColumn": 21,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "use-implicit-booleaness-not-len",
        "message": "Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty",
        "message-id": "C1802"
    },
    {
        "type": "warning",
        "module": "utils.segment.plots",
        "obj": "plot_results_with_masks",
        "line": 148,
        "column": 15,
        "endLine": 148,
        "endColumn": 24,
        "path": "yolov5\\utils\\segment\\plots.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[207:263]\n==train:[244:300]\n    nbs = 64  # nominal batch size\n    accumulate = max(round(nbs / batch_size), 1)  # accumulate loss before optimizing\n    hyp[\"weight_decay\"] *= batch_size * accumulate / nbs  # scale weight_decay\n    optimizer = smart_optimizer(model, opt.optimizer, hyp[\"lr0\"], hyp[\"momentum\"], hyp[\"weight_decay\"])\n\n    # Scheduler\n    if opt.cos_lr:\n        lf = one_cycle(1, hyp[\"lrf\"], epochs)  # cosine 1->hyp['lrf']\n    else:\n\n        def lf(x):\n            \"\"\"Linear learning rate scheduler decreasing from 1 to hyp['lrf'] over 'epochs'.\"\"\"\n            return (1 - x / epochs) * (1.0 - hyp[\"lrf\"]) + hyp[\"lrf\"]  # linear\n\n    scheduler = lr_scheduler.LambdaLR(optimizer, lr_lambda=lf)  # plot_lr_scheduler(optimizer, scheduler, epochs)\n\n    # EMA\n    ema = ModelEMA(model) if RANK in {-1, 0} else None\n\n    # Resume\n    best_fitness, start_epoch = 0.0, 0\n    if pretrained:\n        if resume:\n            best_fitness, start_epoch, epochs = smart_resume(ckpt, optimizer, ema, weights, epochs, resume)\n        del ckpt, csd\n\n    # DP mode\n    if cuda and RANK == -1 and torch.cuda.device_count() > 1:\n        LOGGER.warning(\n            \"WARNING \u26a0\ufe0f DP not recommended, use torch.distributed.run for best DDP Multi-GPU results.\\n\"\n            \"See Multi-GPU Tutorial at https://docs.ultralytics.com/yolov5/tutorials/multi_gpu_training to get started.\"\n        )\n        model = torch.nn.DataParallel(model)\n\n    # SyncBatchNorm\n    if opt.sync_bn and cuda and RANK != -1:\n        model = torch.nn.SyncBatchNorm.convert_sync_batchnorm(model).to(device)\n        LOGGER.info(\"Using SyncBatchNorm()\")\n\n    # Trainloader\n    train_loader, dataset = create_dataloader(\n        train_path,\n        imgsz,\n        batch_size // WORLD_SIZE,\n        gs,\n        single_cls,\n        hyp=hyp,\n        augment=True,\n        cache=None if opt.cache == \"val\" else opt.cache,\n        rect=opt.rect,\n        rank=LOCAL_RANK,\n        workers=workers,\n        image_weights=opt.image_weights,\n        quad=opt.quad,\n        prefix=colorstr(\"train: \"),\n        shuffle=True,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[215:255]\n==val:[273:313]\n        if engine:\n            batch_size = model.batch_size\n        else:\n            device = model.device\n            if not (pt or jit):\n                batch_size = 1  # export.py models default to batch-size 1\n                LOGGER.info(f\"Forcing --batch-size 1 square inference (1,3,{imgsz},{imgsz}) for non-PyTorch models\")\n\n        # Data\n        data = check_dataset(data)  # check\n\n    # Configure\n    model.eval()\n    cuda = device.type != \"cpu\"\n    is_coco = isinstance(data.get(\"val\"), str) and data[\"val\"].endswith(f\"coco{os.sep}val2017.txt\")  # COCO dataset\n    nc = 1 if single_cls else int(data[\"nc\"])  # number of classes\n    iouv = torch.linspace(0.5, 0.95, 10, device=device)  # iou vector for mAP@0.5:0.95\n    niou = iouv.numel()\n\n    # Dataloader\n    if not training:\n        if pt and not single_cls:  # check --weights are trained on --data\n            ncm = model.model.nc\n            assert ncm == nc, (\n                f\"{weights} ({ncm} classes) trained on different --data than what you passed ({nc} \"\n                f\"classes). Pass correct combination of --weights and --data that are trained together.\"\n            )\n        model.warmup(imgsz=(1 if pt else batch_size, 3, imgsz, imgsz))  # warmup\n        pad, rect = (0.0, False) if task == \"speed\" else (0.5, pt)  # square inference for benchmarks\n        task = task if task in (\"train\", \"val\", \"test\") else \"val\"  # path to train/val/test images\n        dataloader = create_dataloader(\n            data[task],\n            imgsz,\n            batch_size,\n            stride,\n            single_cls,\n            pad=pad,\n            rect=rect,\n            workers=workers,\n            prefix=colorstr(f\"{task}: \"),",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loss:[205:247]\n==utils.segment.loss:[142:184]\n        g = 0.5  # bias\n        off = (\n            torch.tensor(\n                [\n                    [0, 0],\n                    [1, 0],\n                    [0, 1],\n                    [-1, 0],\n                    [0, -1],  # j,k,l,m\n                    # [1, 1], [1, -1], [-1, 1], [-1, -1],  # jk,jm,lk,lm\n                ],\n                device=self.device,\n            ).float()\n            * g\n        )  # offsets\n\n        for i in range(self.nl):\n            anchors, shape = self.anchors[i], p[i].shape\n            gain[2:6] = torch.tensor(shape)[[3, 2, 3, 2]]  # xyxy gain\n\n            # Match targets to anchors\n            t = targets * gain  # shape(3,n,7)\n            if nt:\n                # Matches\n                r = t[..., 4:6] / anchors[:, None]  # wh ratio\n                j = torch.max(r, 1 / r).max(2)[0] < self.hyp[\"anchor_t\"]  # compare\n                # j = wh_iou(anchors, t[:, 4:6]) > model.hyp['iou_t']  # iou(3,n)=wh_iou(anchors(3,2), gwh(n,2))\n                t = t[j]  # filter\n\n                # Offsets\n                gxy = t[:, 2:4]  # grid xy\n                gxi = gain[[2, 3]] - gxy  # inverse\n                j, k = ((gxy % 1 < g) & (gxy > 1)).T\n                l, m = ((gxi % 1 < g) & (gxi > 1)).T\n                j = torch.stack((torch.ones_like(j), j, k, l, m))\n                t = t.repeat((5, 1, 1))[j]\n                offsets = (torch.zeros_like(gxy)[None] + off[:, None])[j]\n            else:\n                t = targets[0]\n                offsets = 0\n\n            # Define",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[886:925]\n==utils.segment.dataloaders:[245:284]\n        for i, index in enumerate(indices):\n            # Load image\n            img, _, (h, w) = self.load_image(index)\n\n            # place img in img4\n            if i == 0:  # top left\n                img4 = np.full((s * 2, s * 2, img.shape[2]), 114, dtype=np.uint8)  # base image with 4 tiles\n                x1a, y1a, x2a, y2a = max(xc - w, 0), max(yc - h, 0), xc, yc  # xmin, ymin, xmax, ymax (large image)\n                x1b, y1b, x2b, y2b = w - (x2a - x1a), h - (y2a - y1a), w, h  # xmin, ymin, xmax, ymax (small image)\n            elif i == 1:  # top right\n                x1a, y1a, x2a, y2a = xc, max(yc - h, 0), min(xc + w, s * 2), yc\n                x1b, y1b, x2b, y2b = 0, h - (y2a - y1a), min(w, x2a - x1a), h\n            elif i == 2:  # bottom left\n                x1a, y1a, x2a, y2a = max(xc - w, 0), yc, xc, min(s * 2, yc + h)\n                x1b, y1b, x2b, y2b = w - (x2a - x1a), 0, w, min(y2a - y1a, h)\n            elif i == 3:  # bottom right\n                x1a, y1a, x2a, y2a = xc, yc, min(xc + w, s * 2), min(s * 2, yc + h)\n                x1b, y1b, x2b, y2b = 0, 0, min(w, x2a - x1a), min(y2a - y1a, h)\n\n            img4[y1a:y2a, x1a:x2a] = img[y1b:y2b, x1b:x2b]  # img4[ymin:ymax, xmin:xmax]\n            padw = x1a - x1b\n            padh = y1a - y1b\n\n            # Labels\n            labels, segments = self.labels[index].copy(), self.segments[index].copy()\n            if labels.size:\n                labels[:, 1:] = xywhn2xyxy(labels[:, 1:], w, h, padw, padh)  # normalized xywh to pixel xyxy format\n                segments = [xyn2xy(x, w, h, padw, padh) for x in segments]\n            labels4.append(labels)\n            segments4.extend(segments)\n\n        # Concat/clip labels\n        labels4 = np.concatenate(labels4, 0)\n        for x in (labels4[:, 1:], *segments4):\n            np.clip(x, 0, 2 * s, out=x)  # clip when using random_perspective()\n        # img4, labels4 = replicate(img4, labels4)  # replicate\n\n        # Augment\n        img4, labels4, segments4 = copy_paste(img4, labels4, segments4, p=self.hyp[\"copy_paste\"])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[487:518]\n==train:[502:533]\n        if RANK != -1:  # if DDP training\n            broadcast_list = [stop if RANK == 0 else None]\n            dist.broadcast_object_list(broadcast_list, 0)  # broadcast 'stop' to all ranks\n            if RANK != 0:\n                stop = broadcast_list[0]\n        if stop:\n            break  # must break all DDP ranks\n\n        # end epoch ----------------------------------------------------------------------------------------------------\n    # end training -----------------------------------------------------------------------------------------------------\n    if RANK in {-1, 0}:\n        LOGGER.info(f\"\\n{epoch - start_epoch + 1} epochs completed in {(time.time() - t0) / 3600:.3f} hours.\")\n        for f in last, best:\n            if f.exists():\n                strip_optimizer(f)  # strip optimizers\n                if f is best:\n                    LOGGER.info(f\"\\nValidating {f}...\")\n                    results, _, _ = validate.run(\n                        data_dict,\n                        batch_size=batch_size // WORLD_SIZE * 2,\n                        imgsz=imgsz,\n                        model=attempt_load(f, device).half(),\n                        iou_thres=0.65 if is_coco else 0.60,  # best pycocotools at iou 0.65\n                        single_cls=single_cls,\n                        dataloader=val_loader,\n                        save_dir=save_dir,\n                        save_json=is_coco,\n                        verbose=True,\n                        plots=plots,\n                        callbacks=callbacks,\n                        compute_loss=compute_loss,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[41:182]\n==segment.predict:[40:132]\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nfrom ultralytics.utils.plotting import Annotator, colors, save_one_box\n\nfrom models.common import DetectMultiBackend\nfrom utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\nfrom utils.general import (\n    LOGGER,\n    Profile,\n    check_file,\n    check_img_size,\n    check_imshow,\n    check_requirements,\n    colorstr,\n    cv2,\n    increment_path,\n    non_max_suppression,\n    print_args,\n    scale_boxes,\n    strip_optimizer,\n    xyxy2xywh,\n)\nfrom utils.torch_utils import select_device, smart_inference_mode\n\n\n@smart_inference_mode()\ndef run(\n    weights=ROOT / \"yolov5s.pt\",  # model path or triton URL\n    source=ROOT / \"data/images\",  # file/dir/URL/glob/screen/0(webcam)\n    data=ROOT / \"data/coco128.yaml\",  # dataset.yaml path\n    imgsz=(640, 640),  # inference size (height, width)\n    conf_thres=0.25,  # confidence threshold\n    iou_thres=0.45,  # NMS IOU threshold\n    max_det=1000,  # maximum detections per image\n    device=\"\",  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n    view_img=False,  # show results\n    save_txt=False,  # save results to *.txt\n    save_format=0,  # save boxes coordinates in YOLO format or Pascal-VOC format (0 for YOLO and 1 for Pascal-VOC)\n    save_csv=False,  # save results in CSV format\n    save_conf=False,  # save confidences in --save-txt labels\n    save_crop=False,  # save cropped prediction boxes\n    nosave=False,  # do not save images/videos\n    classes=None,  # filter by class: --class 0, or --class 0 2 3\n    agnostic_nms=False,  # class-agnostic NMS\n    augment=False,  # augmented inference\n    visualize=False,  # visualize features\n    update=False,  # update all models\n    project=ROOT / \"runs/detect\",  # save results to project/name\n    name=\"exp\",  # save results to project/name\n    exist_ok=False,  # existing project/name ok, do not increment\n    line_thickness=3,  # bounding box thickness (pixels)\n    hide_labels=False,  # hide labels\n    hide_conf=False,  # hide confidences\n    half=False,  # use FP16 half-precision inference\n    dnn=False,  # use OpenCV DNN for ONNX inference\n    vid_stride=1,  # video frame-rate stride\n):\n    \"\"\"\n    Runs YOLOv5 detection inference on various sources like images, videos, directories, streams, etc.\n\n    Args:\n        weights (str | Path): Path to the model weights file or a Triton URL. Default is 'yolov5s.pt'.\n        source (str | Path): Input source, which can be a file, directory, URL, glob pattern, screen capture, or webcam\n            index. Default is 'data/images'.\n        data (str | Path): Path to the dataset YAML file. Default is 'data/coco128.yaml'.\n        imgsz (tuple[int, int]): Inference image size as a tuple (height, width). Default is (640, 640).\n        conf_thres (float): Confidence threshold for detections. Default is 0.25.\n        iou_thres (float): Intersection Over Union (IOU) threshold for non-max suppression. Default is 0.45.\n        max_det (int): Maximum number of detections per image. Default is 1000.\n        device (str): CUDA device identifier (e.g., '0' or '0,1,2,3') or 'cpu'. Default is an empty string, which uses the\n            best available device.\n        view_img (bool): If True, display inference results using OpenCV. Default is False.\n        save_txt (bool): If True, save results in a text file. Default is False.\n        save_csv (bool): If True, save results in a CSV file. Default is False.\n        save_conf (bool): If True, include confidence scores in the saved results. Default is False.\n        save_crop (bool): If True, save cropped prediction boxes. Default is False.\n        nosave (bool): If True, do not save inference images or videos. Default is False.\n        classes (list[int]): List of class indices to filter detections by. Default is None.\n        agnostic_nms (bool): If True, perform class-agnostic non-max suppression. Default is False.\n        augment (bool): If True, use augmented inference. Default is False.\n        visualize (bool): If True, visualize feature maps. Default is False.\n        update (bool): If True, update all models' weights. Default is False.\n        project (str | Path): Directory to save results. Default is 'runs/detect'.\n        name (str): Name of the current experiment; used to create a subdirectory within 'project'. Default is 'exp'.\n        exist_ok (bool): If True, existing directories with the same name are reused instead of being incremented. Default is\n            False.\n        line_thickness (int): Thickness of bounding box lines in pixels. Default is 3.\n        hide_labels (bool): If True, do not display labels on bounding boxes. Default is False.\n        hide_conf (bool): If True, do not display confidence scores on bounding boxes. Default is False.\n        half (bool): If True, use FP16 half-precision inference. Default is False.\n        dnn (bool): If True, use OpenCV DNN backend for ONNX inference. Default is False.\n        vid_stride (int): Stride for processing video frames, to skip frames between processing. Default is 1.\n\n    Returns:\n        None\n\n    Examples:\n        ```python\n        from ultralytics import run\n\n        # Run inference on an image\n        run(source='data/images/example.jpg', weights='yolov5s.pt', device='0')\n\n        # Run inference on a video with specific confidence threshold\n        run(source='data/videos/example.mp4', weights='yolov5s.pt', conf_thres=0.4, device='0')\n        ```\n    \"\"\"\n    source = str(source)\n    save_img = not nosave and not source.endswith(\".txt\")  # save inference images\n    is_file = Path(source).suffix[1:] in (IMG_FORMATS + VID_FORMATS)\n    is_url = source.lower().startswith((\"rtsp://\", \"rtmp://\", \"http://\", \"https://\"))\n    webcam = source.isnumeric() or source.endswith(\".streams\") or (is_url and not is_file)\n    screenshot = source.lower().startswith(\"screen\")\n    if is_url and is_file:\n        source = check_file(source)  # download\n\n    # Directories\n    save_dir = increment_path(Path(project) / name, exist_ok=exist_ok)  # increment run\n    (save_dir / \"labels\" if save_txt else save_dir).mkdir(parents=True, exist_ok=True)  # make dir\n\n    # Load model\n    device = select_device(device)\n    model = DetectMultiBackend(weights, device=device, dnn=dnn, data=data, fp16=half)\n    stride, names, pt = model.stride, model.names, model.pt\n    imgsz = check_img_size(imgsz, s=stride)  # check image size\n\n    # Dataloader\n    bs = 1  # batch_size\n    if webcam:\n        view_img = check_imshow(warn=True)\n        dataset = LoadStreams(source, img_size=imgsz, stride=stride, auto=pt, vid_stride=vid_stride)\n        bs = len(dataset)\n    elif screenshot:\n        dataset = LoadScreenshots(source, img_size=imgsz, stride=stride, auto=pt)\n    else:\n        dataset = LoadImages(source, img_size=imgsz, stride=stride, auto=pt, vid_stride=vid_stride)\n    vid_path, vid_writer = [None] * bs, [None] * bs\n\n    # Run inference",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[291:367]\n==segment.predict:[228:264]\n            if save_img:\n                if dataset.mode == \"image\":\n                    cv2.imwrite(save_path, im0)\n                else:  # 'video' or 'stream'\n                    if vid_path[i] != save_path:  # new video\n                        vid_path[i] = save_path\n                        if isinstance(vid_writer[i], cv2.VideoWriter):\n                            vid_writer[i].release()  # release previous video writer\n                        if vid_cap:  # video\n                            fps = vid_cap.get(cv2.CAP_PROP_FPS)\n                            w = int(vid_cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n                            h = int(vid_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\n                        else:  # stream\n                            fps, w, h = 30, im0.shape[1], im0.shape[0]\n                        save_path = str(Path(save_path).with_suffix(\".mp4\"))  # force *.mp4 suffix on results videos\n                        vid_writer[i] = cv2.VideoWriter(save_path, cv2.VideoWriter_fourcc(*\"mp4v\"), fps, (w, h))\n                    vid_writer[i].write(im0)\n\n        # Print time (inference-only)\n        LOGGER.info(f\"{s}{'' if len(det) else '(no detections), '}{dt[1].dt * 1E3:.1f}ms\")\n\n    # Print results\n    t = tuple(x.t / seen * 1e3 for x in dt)  # speeds per image\n    LOGGER.info(f\"Speed: %.1fms pre-process, %.1fms inference, %.1fms NMS per image at shape {(1, 3, *imgsz)}\" % t)\n    if save_txt or save_img:\n        s = f\"\\n{len(list(save_dir.glob('labels/*.txt')))} labels saved to {save_dir / 'labels'}\" if save_txt else \"\"\n        LOGGER.info(f\"Results saved to {colorstr('bold', save_dir)}{s}\")\n    if update:\n        strip_optimizer(weights[0])  # update model (to fix SourceChangeWarning)\n\n\ndef parse_opt():\n    \"\"\"Parses command-line options for YOLOv5 inference including model paths, data sources, inference settings, and\n    output preferences.\n    \"\"\"\n    parser = argparse.ArgumentParser()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.augmentations:[160:207]\n==utils.segment.augmentations:[32:79]\n    height = im.shape[0] + border[0] * 2  # shape(h,w,c)\n    width = im.shape[1] + border[1] * 2\n\n    # Center\n    C = np.eye(3)\n    C[0, 2] = -im.shape[1] / 2  # x translation (pixels)\n    C[1, 2] = -im.shape[0] / 2  # y translation (pixels)\n\n    # Perspective\n    P = np.eye(3)\n    P[2, 0] = random.uniform(-perspective, perspective)  # x perspective (about y)\n    P[2, 1] = random.uniform(-perspective, perspective)  # y perspective (about x)\n\n    # Rotation and Scale\n    R = np.eye(3)\n    a = random.uniform(-degrees, degrees)\n    # a += random.choice([-180, -90, 0, 90])  # add 90deg rotations to small rotations\n    s = random.uniform(1 - scale, 1 + scale)\n    # s = 2 ** random.uniform(-scale, scale)\n    R[:2] = cv2.getRotationMatrix2D(angle=a, center=(0, 0), scale=s)\n\n    # Shear\n    S = np.eye(3)\n    S[0, 1] = math.tan(random.uniform(-shear, shear) * math.pi / 180)  # x shear (deg)\n    S[1, 0] = math.tan(random.uniform(-shear, shear) * math.pi / 180)  # y shear (deg)\n\n    # Translation\n    T = np.eye(3)\n    T[0, 2] = random.uniform(0.5 - translate, 0.5 + translate) * width  # x translation (pixels)\n    T[1, 2] = random.uniform(0.5 - translate, 0.5 + translate) * height  # y translation (pixels)\n\n    # Combined rotation matrix\n    M = T @ S @ R @ P @ C  # order of operations (right to left) is IMPORTANT\n    if (border[0] != 0) or (border[1] != 0) or (M != np.eye(3)).any():  # image changed\n        if perspective:\n            im = cv2.warpPerspective(im, M, dsize=(width, height), borderValue=(114, 114, 114))\n        else:  # affine\n            im = cv2.warpAffine(im, M[:2], dsize=(width, height), borderValue=(114, 114, 114))\n\n    # Visualize\n    # import matplotlib.pyplot as plt\n    # ax = plt.subplots(1, 2, figsize=(12, 6))[1].ravel()\n    # ax[0].imshow(im[:, :, ::-1])  # base\n    # ax[1].imshow(im2[:, :, ::-1])  # warped\n\n    # Transform label coordinates\n    n = len(targets)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[165:194]\n==detect:[281:310]\n            im0 = annotator.result()\n            if view_img:\n                if platform.system() == \"Linux\" and p not in windows:\n                    windows.append(p)\n                    cv2.namedWindow(str(p), cv2.WINDOW_NORMAL | cv2.WINDOW_KEEPRATIO)  # allow window resize (Linux)\n                    cv2.resizeWindow(str(p), im0.shape[1], im0.shape[0])\n                cv2.imshow(str(p), im0)\n                cv2.waitKey(1)  # 1 millisecond\n\n            # Save results (image with detections)\n            if save_img:\n                if dataset.mode == \"image\":\n                    cv2.imwrite(save_path, im0)\n                else:  # 'video' or 'stream'\n                    if vid_path[i] != save_path:  # new video\n                        vid_path[i] = save_path\n                        if isinstance(vid_writer[i], cv2.VideoWriter):\n                            vid_writer[i].release()  # release previous video writer\n                        if vid_cap:  # video\n                            fps = vid_cap.get(cv2.CAP_PROP_FPS)\n                            w = int(vid_cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n                            h = int(vid_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\n                        else:  # stream\n                            fps, w, h = 30, im0.shape[1], im0.shape[0]\n                        save_path = str(Path(save_path).with_suffix(\".mp4\"))  # force *.mp4 suffix on results videos\n                        vid_writer[i] = cv2.VideoWriter(save_path, cv2.VideoWriter_fourcc(*\"mp4v\"), fps, (w, h))\n                    vid_writer[i].write(im0)\n\n        # Print time (inference-only)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[492:522]\n==val:[574:604]\n        run(**vars(opt))\n\n    else:\n        weights = opt.weights if isinstance(opt.weights, list) else [opt.weights]\n        opt.half = torch.cuda.is_available() and opt.device != \"cpu\"  # FP16 for fastest results\n        if opt.task == \"speed\":  # speed benchmarks\n            # python val.py --task speed --data coco.yaml --batch 1 --weights yolov5n.pt yolov5s.pt...\n            opt.conf_thres, opt.iou_thres, opt.save_json = 0.25, 0.45, False\n            for opt.weights in weights:\n                run(**vars(opt), plots=False)\n\n        elif opt.task == \"study\":  # speed vs mAP benchmarks\n            # python val.py --task study --data coco.yaml --iou 0.7 --weights yolov5n.pt yolov5s.pt...\n            for opt.weights in weights:\n                f = f\"study_{Path(opt.data).stem}_{Path(opt.weights).stem}.txt\"  # filename to save to\n                x, y = list(range(256, 1536 + 128, 128)), []  # x axis (image sizes), y axis\n                for opt.imgsz in x:  # img-size\n                    LOGGER.info(f\"\\nRunning {f} --imgsz {opt.imgsz}...\")\n                    r, _, t = run(**vars(opt), plots=False)\n                    y.append(r + t)  # results and times\n                np.savetxt(f, y, fmt=\"%10.4g\")  # save\n            subprocess.run([\"zip\", \"-r\", \"study.zip\", \"study_*.txt\"])\n            plot_val_study(x=x)  # plot\n        else:\n            raise NotImplementedError(f'--task {opt.task} not in (\"train\", \"val\", \"test\", \"speed\", \"study\")')\n\n\nif __name__ == \"__main__\":\n    opt = parse_opt()\n    main(opt)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[39:110]\n==segment.predict:[38:123]\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[1]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nfrom ultralytics.utils.plotting import Annotator, colors, save_one_box\n\nfrom models.common import DetectMultiBackend\nfrom utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\nfrom utils.general import (\n    LOGGER,\n    Profile,\n    check_file,\n    check_img_size,\n    check_imshow,\n    check_requirements,\n    colorstr,\n    cv2,\n    increment_path,\n    non_max_suppression,\n    print_args,\n    scale_boxes,\n    scale_segments,\n    strip_optimizer,\n)\nfrom utils.segment.general import masks2segments, process_mask, process_mask_native\nfrom utils.torch_utils import select_device, smart_inference_mode\n\n\n@smart_inference_mode()\ndef run(\n    weights=ROOT / \"yolov5s-seg.pt\",  # model.pt path(s)\n    source=ROOT / \"data/images\",  # file/dir/URL/glob/screen/0(webcam)\n    data=ROOT / \"data/coco128.yaml\",  # dataset.yaml path\n    imgsz=(640, 640),  # inference size (height, width)\n    conf_thres=0.25,  # confidence threshold\n    iou_thres=0.45,  # NMS IOU threshold\n    max_det=1000,  # maximum detections per image\n    device=\"\",  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n    view_img=False,  # show results\n    save_txt=False,  # save results to *.txt\n    save_conf=False,  # save confidences in --save-txt labels\n    save_crop=False,  # save cropped prediction boxes\n    nosave=False,  # do not save images/videos\n    classes=None,  # filter by class: --class 0, or --class 0 2 3\n    agnostic_nms=False,  # class-agnostic NMS\n    augment=False,  # augmented inference\n    visualize=False,  # visualize features\n    update=False,  # update all models\n    project=ROOT / \"runs/predict-seg\",  # save results to project/name\n    name=\"exp\",  # save results to project/name\n    exist_ok=False,  # existing project/name ok, do not increment\n    line_thickness=3,  # bounding box thickness (pixels)\n    hide_labels=False,  # hide labels\n    hide_conf=False,  # hide confidences\n    half=False,  # use FP16 half-precision inference\n    dnn=False,  # use OpenCV DNN for ONNX inference\n    vid_stride=1,  # video frame-rate stride\n    retina_masks=False,\n):\n    \"\"\"Run YOLOv5 segmentation inference on diverse sources including images, videos, directories, and streams.\"\"\"\n    source = str(source)\n    save_img = not nosave and not source.endswith(\".txt\")  # save inference images\n    is_file = Path(source).suffix[1:] in (IMG_FORMATS + VID_FORMATS)\n    is_url = source.lower().startswith((\"rtsp://\", \"rtmp://\", \"http://\", \"https://\"))\n    webcam = source.isnumeric() or source.endswith(\".streams\") or (is_url and not is_file)\n    screenshot = source.lower().startswith(\"screen\")\n    if is_url and is_file:\n        source = check_file(source)  # download\n\n    # Directories\n    save_dir = increment_path(Path(project) / name, exist_ok=exist_ok)  # increment run\n    (save_dir / \"labels\" if save_txt else save_dir).mkdir(parents=True, exist_ok=True)  # make dir\n\n    # Load model\n    device = select_device(device)\n    model = DetectMultiBackend(weights, device=device, dnn=dnn, data=data, fp16=half)\n    stride, names, pt = model.stride, model.names, model.pt\n    imgsz = check_img_size(imgsz, s=stride)  # check image size\n\n    # Dataloader\n    bs = 1  # batch_size\n    if webcam:\n        view_img = check_imshow(warn=True)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[600:622]\n==train:[641:663]\n        last = Path(check_file(opt.resume) if isinstance(opt.resume, str) else get_latest_run())\n        opt_yaml = last.parent.parent / \"opt.yaml\"  # train options yaml\n        opt_data = opt.data  # original dataset\n        if opt_yaml.is_file():\n            with open(opt_yaml, errors=\"ignore\") as f:\n                d = yaml.safe_load(f)\n        else:\n            d = torch.load(last, map_location=\"cpu\")[\"opt\"]\n        opt = argparse.Namespace(**d)  # replace\n        opt.cfg, opt.weights, opt.resume = \"\", str(last), True  # reinstate\n        if is_url(opt_data):\n            opt.data = check_file(opt_data)  # avoid HUB resume auth timeout\n    else:\n        opt.data, opt.cfg, opt.hyp, opt.weights, opt.project = (\n            check_file(opt.data),\n            check_yaml(opt.cfg),\n            check_yaml(opt.hyp),\n            str(opt.weights),\n            str(opt.project),\n        )  # checks\n        assert len(opt.cfg) or len(opt.weights), \"either --cfg or --weights must be specified\"\n        if opt.evolve:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.plots:[158:185]\n==utils.segment.plots:[27:54]\n    max_size = 1920  # max image size\n    max_subplots = 16  # max image subplots, i.e. 4x4\n    bs, _, h, w = images.shape  # batch size, _, height, width\n    bs = min(bs, max_subplots)  # limit plot images\n    ns = np.ceil(bs**0.5)  # number of subplots (square)\n    if np.max(images[0]) <= 1:\n        images *= 255  # de-normalise (optional)\n\n    # Build Image\n    mosaic = np.full((int(ns * h), int(ns * w), 3), 255, dtype=np.uint8)  # init\n    for i, im in enumerate(images):\n        if i == max_subplots:  # if last batch has fewer images than we expect\n            break\n        x, y = int(w * (i // ns)), int(h * (i % ns))  # block origin\n        im = im.transpose(1, 2, 0)\n        mosaic[y : y + h, x : x + w, :] = im\n\n    # Resize (optional)\n    scale = max_size / ns / max(h, w)\n    if scale < 1:\n        h = math.ceil(scale * h)\n        w = math.ceil(scale * w)\n        mosaic = cv2.resize(mosaic, tuple(int(x * ns) for x in (w, h)))\n\n    # Annotate\n    fs = int((h + w) * ns * 0.01)  # font size\n    annotator = Annotator(mosaic, line_width=round(fs / 10), font_size=fs, pil=True, example=names)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[41:110]\n==detect:[41:173]\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nfrom ultralytics.utils.plotting import Annotator, colors, save_one_box\n\nfrom models.common import DetectMultiBackend\nfrom utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\nfrom utils.general import (\n    LOGGER,\n    Profile,\n    check_file,\n    check_img_size,\n    check_imshow,\n    check_requirements,\n    colorstr,\n    cv2,\n    increment_path,\n    non_max_suppression,\n    print_args,\n    scale_boxes,\n    strip_optimizer,\n    xyxy2xywh,\n)\nfrom utils.torch_utils import select_device, smart_inference_mode\n\n\n@smart_inference_mode()\ndef run(\n    weights=ROOT / \"yolov5s.pt\",  # model path or triton URL\n    source=ROOT / \"data/images\",  # file/dir/URL/glob/screen/0(webcam)\n    data=ROOT / \"data/coco128.yaml\",  # dataset.yaml path\n    imgsz=(640, 640),  # inference size (height, width)\n    conf_thres=0.25,  # confidence threshold\n    iou_thres=0.45,  # NMS IOU threshold\n    max_det=1000,  # maximum detections per image\n    device=\"\",  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n    view_img=False,  # show results\n    save_txt=False,  # save results to *.txt\n    save_format=0,  # save boxes coordinates in YOLO format or Pascal-VOC format (0 for YOLO and 1 for Pascal-VOC)\n    save_csv=False,  # save results in CSV format\n    save_conf=False,  # save confidences in --save-txt labels\n    save_crop=False,  # save cropped prediction boxes\n    nosave=False,  # do not save images/videos\n    classes=None,  # filter by class: --class 0, or --class 0 2 3\n    agnostic_nms=False,  # class-agnostic NMS\n    augment=False,  # augmented inference\n    visualize=False,  # visualize features\n    update=False,  # update all models\n    project=ROOT / \"runs/detect\",  # save results to project/name\n    name=\"exp\",  # save results to project/name\n    exist_ok=False,  # existing project/name ok, do not increment\n    line_thickness=3,  # bounding box thickness (pixels)\n    hide_labels=False,  # hide labels\n    hide_conf=False,  # hide confidences\n    half=False,  # use FP16 half-precision inference\n    dnn=False,  # use OpenCV DNN for ONNX inference\n    vid_stride=1,  # video frame-rate stride\n):\n    \"\"\"\n    Runs YOLOv5 detection inference on various sources like images, videos, directories, streams, etc.\n\n    Args:\n        weights (str | Path): Path to the model weights file or a Triton URL. Default is 'yolov5s.pt'.\n        source (str | Path): Input source, which can be a file, directory, URL, glob pattern, screen capture, or webcam\n            index. Default is 'data/images'.\n        data (str | Path): Path to the dataset YAML file. Default is 'data/coco128.yaml'.\n        imgsz (tuple[int, int]): Inference image size as a tuple (height, width). Default is (640, 640).\n        conf_thres (float): Confidence threshold for detections. Default is 0.25.\n        iou_thres (float): Intersection Over Union (IOU) threshold for non-max suppression. Default is 0.45.\n        max_det (int): Maximum number of detections per image. Default is 1000.\n        device (str): CUDA device identifier (e.g., '0' or '0,1,2,3') or 'cpu'. Default is an empty string, which uses the\n            best available device.\n        view_img (bool): If True, display inference results using OpenCV. Default is False.\n        save_txt (bool): If True, save results in a text file. Default is False.\n        save_csv (bool): If True, save results in a CSV file. Default is False.\n        save_conf (bool): If True, include confidence scores in the saved results. Default is False.\n        save_crop (bool): If True, save cropped prediction boxes. Default is False.\n        nosave (bool): If True, do not save inference images or videos. Default is False.\n        classes (list[int]): List of class indices to filter detections by. Default is None.\n        agnostic_nms (bool): If True, perform class-agnostic non-max suppression. Default is False.\n        augment (bool): If True, use augmented inference. Default is False.\n        visualize (bool): If True, visualize feature maps. Default is False.\n        update (bool): If True, update all models' weights. Default is False.\n        project (str | Path): Directory to save results. Default is 'runs/detect'.\n        name (str): Name of the current experiment; used to create a subdirectory within 'project'. Default is 'exp'.\n        exist_ok (bool): If True, existing directories with the same name are reused instead of being incremented. Default is\n            False.\n        line_thickness (int): Thickness of bounding box lines in pixels. Default is 3.\n        hide_labels (bool): If True, do not display labels on bounding boxes. Default is False.\n        hide_conf (bool): If True, do not display confidence scores on bounding boxes. Default is False.\n        half (bool): If True, use FP16 half-precision inference. Default is False.\n        dnn (bool): If True, use OpenCV DNN backend for ONNX inference. Default is False.\n        vid_stride (int): Stride for processing video frames, to skip frames between processing. Default is 1.\n\n    Returns:\n        None\n\n    Examples:\n        ```python\n        from ultralytics import run\n\n        # Run inference on an image\n        run(source='data/images/example.jpg', weights='yolov5s.pt', device='0')\n\n        # Run inference on a video with specific confidence threshold\n        run(source='data/videos/example.mp4', weights='yolov5s.pt', conf_thres=0.4, device='0')\n        ```\n    \"\"\"\n    source = str(source)\n    save_img = not nosave and not source.endswith(\".txt\")  # save inference images\n    is_file = Path(source).suffix[1:] in (IMG_FORMATS + VID_FORMATS)\n    is_url = source.lower().startswith((\"rtsp://\", \"rtmp://\", \"http://\", \"https://\"))\n    webcam = source.isnumeric() or source.endswith(\".streams\") or (is_url and not is_file)\n    screenshot = source.lower().startswith(\"screen\")\n    if is_url and is_file:\n        source = check_file(source)  # download\n\n    # Directories\n    save_dir = increment_path(Path(project) / name, exist_ok=exist_ok)  # increment run\n    (save_dir / \"labels\" if save_txt else save_dir).mkdir(parents=True, exist_ok=True)  # make dir\n\n    # Load model\n    device = select_device(device)\n    model = DetectMultiBackend(weights, device=device, dnn=dnn, data=data, fp16=half)\n    stride, names, pt = model.stride, model.names, model.pt\n    imgsz = check_img_size(imgsz, s=stride)  # check image size\n\n    # Dataloader\n    bs = 1  # batch_size\n    if webcam:\n        view_img = check_imshow(warn=True)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.plots:[192:212]\n==utils.segment.plots:[63:85]\n            boxes = xywh2xyxy(ti[:, 2:6]).T\n            classes = ti[:, 1].astype(\"int\")\n            labels = ti.shape[1] == 6  # labels if no conf column\n            conf = None if labels else ti[:, 6]  # check for confidence presence (label vs pred)\n\n            if boxes.shape[1]:\n                if boxes.max() <= 1.01:  # if normalized with tolerance 0.01\n                    boxes[[0, 2]] *= w  # scale to pixels\n                    boxes[[1, 3]] *= h\n                elif scale < 1:  # absolute coords need scale if image scales\n                    boxes *= scale\n            boxes[[0, 2]] += x\n            boxes[[1, 3]] += y\n            for j, box in enumerate(boxes.T.tolist()):\n                cls = classes[j]\n                color = colors(cls)\n                cls = names[cls] if names else cls\n                if labels or conf[j] > 0.25:  # 0.25 conf thresh\n                    label = f\"{cls}\" if labels else f\"{cls} {conf[j]:.1f}\"\n                    annotator.box_label(box, label, color=color)\n\n            # Plot masks",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==train:[586:606]\n==utils.loggers.comet.hpo:[49:69]\n    parser.add_argument(\"--image-weights\", action=\"store_true\", help=\"use weighted image selection for training\")\n    parser.add_argument(\"--device\", default=\"\", help=\"cuda device, i.e. 0 or 0,1,2,3 or cpu\")\n    parser.add_argument(\"--multi-scale\", action=\"store_true\", help=\"vary img-size +/- 50%%\")\n    parser.add_argument(\"--single-cls\", action=\"store_true\", help=\"train multi-class data as single-class\")\n    parser.add_argument(\"--optimizer\", type=str, choices=[\"SGD\", \"Adam\", \"AdamW\"], default=\"SGD\", help=\"optimizer\")\n    parser.add_argument(\"--sync-bn\", action=\"store_true\", help=\"use SyncBatchNorm, only available in DDP mode\")\n    parser.add_argument(\"--workers\", type=int, default=8, help=\"max dataloader workers (per RANK in DDP mode)\")\n    parser.add_argument(\"--project\", default=ROOT / \"runs/train\", help=\"save to project/name\")\n    parser.add_argument(\"--name\", default=\"exp\", help=\"save to project/name\")\n    parser.add_argument(\"--exist-ok\", action=\"store_true\", help=\"existing project/name ok, do not increment\")\n    parser.add_argument(\"--quad\", action=\"store_true\", help=\"quad dataloader\")\n    parser.add_argument(\"--cos-lr\", action=\"store_true\", help=\"cosine LR scheduler\")\n    parser.add_argument(\"--label-smoothing\", type=float, default=0.0, help=\"Label smoothing epsilon\")\n    parser.add_argument(\"--patience\", type=int, default=100, help=\"EarlyStopping patience (epochs without improvement)\")\n    parser.add_argument(\"--freeze\", nargs=\"+\", type=int, default=[0], help=\"Freeze layers: backbone=10, first3=0 1 2\")\n    parser.add_argument(\"--save-period\", type=int, default=-1, help=\"Save checkpoint every x epochs (disabled if < 1)\")\n    parser.add_argument(\"--seed\", type=int, default=0, help=\"Global training seed\")\n    parser.add_argument(\"--local_rank\", type=int, default=-1, help=\"Automatic DDP Multi-GPU argument, do not modify\")\n\n    # Logger arguments",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[385:409]\n==train:[414:438]\n                if RANK != -1:\n                    loss *= WORLD_SIZE  # gradient averaged between devices in DDP mode\n                if opt.quad:\n                    loss *= 4.0\n\n            # Backward\n            scaler.scale(loss).backward()\n\n            # Optimize - https://pytorch.org/docs/master/notes/amp_examples.html\n            if ni - last_opt_step >= accumulate:\n                scaler.unscale_(optimizer)  # unscale gradients\n                torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=10.0)  # clip gradients\n                scaler.step(optimizer)  # optimizer.step\n                scaler.update()\n                optimizer.zero_grad()\n                if ema:\n                    ema.update(model)\n                last_opt_step = ni\n\n            # Log\n            if RANK in {-1, 0}:\n                mloss = (mloss * i + loss_items) / (i + 1)  # update mean losses\n                mem = f\"{torch.cuda.memory_reserved() / 1E9 if torch.cuda.is_available() else 0:.3g}G\"  # (GB)\n                pbar.set_description(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[175:194]\n==segment.predict:[228:247]\n            if save_img:\n                if dataset.mode == \"image\":\n                    cv2.imwrite(save_path, im0)\n                else:  # 'video' or 'stream'\n                    if vid_path[i] != save_path:  # new video\n                        vid_path[i] = save_path\n                        if isinstance(vid_writer[i], cv2.VideoWriter):\n                            vid_writer[i].release()  # release previous video writer\n                        if vid_cap:  # video\n                            fps = vid_cap.get(cv2.CAP_PROP_FPS)\n                            w = int(vid_cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n                            h = int(vid_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\n                        else:  # stream\n                            fps, w, h = 30, im0.shape[1], im0.shape[0]\n                        save_path = str(Path(save_path).with_suffix(\".mp4\"))  # force *.mp4 suffix on results videos\n                        vid_writer[i] = cv2.VideoWriter(save_path, cv2.VideoWriter_fourcc(*\"mp4v\"), fps, (w, h))\n                    vid_writer[i].write(im0)\n\n        # Print time (inference-only)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[681:701]\n==train:[735:756]\n        with open(opt.hyp, errors=\"ignore\") as f:\n            hyp = yaml.safe_load(f)  # load hyps dict\n            if \"anchors\" not in hyp:  # anchors commented in hyp.yaml\n                hyp[\"anchors\"] = 3\n        if opt.noautoanchor:\n            del hyp[\"anchors\"], meta[\"anchors\"]\n        opt.noval, opt.nosave, save_dir = True, True, Path(opt.save_dir)  # only val/save final epoch\n        # ei = [isinstance(x, (int, float)) for x in hyp.values()]  # evolvable indices\n        evolve_yaml, evolve_csv = save_dir / \"hyp_evolve.yaml\", save_dir / \"evolve.csv\"\n        if opt.bucket:\n            # download evolve.csv if exists\n            subprocess.run(\n                [\n                    \"gsutil\",\n                    \"cp\",\n                    f\"gs://{opt.bucket}/evolve.csv\",\n                    str(evolve_csv),\n                ]\n            )\n\n        # Delete the items in meta dictionary whose first value is False",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[463:482]\n==train:[479:498]\n            if (not nosave) or (final_epoch and not evolve):  # if save\n                ckpt = {\n                    \"epoch\": epoch,\n                    \"best_fitness\": best_fitness,\n                    \"model\": deepcopy(de_parallel(model)).half(),\n                    \"ema\": deepcopy(ema.ema).half(),\n                    \"updates\": ema.updates,\n                    \"optimizer\": optimizer.state_dict(),\n                    \"opt\": vars(opt),\n                    \"git\": GIT_INFO,  # {remote, branch, commit} if a git repo\n                    \"date\": datetime.now().isoformat(),\n                }\n\n                # Save last, best and delete\n                torch.save(ckpt, last)\n                if best_fitness == fi:\n                    torch.save(ckpt, best)\n                if opt.save_period > 0 and epoch % opt.save_period == 0:\n                    torch.save(ckpt, w / f\"epoch{epoch}.pt\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[359:384]\n==train:[388:413]\n            ni = i + nb * epoch  # number integrated batches (since train start)\n            imgs = imgs.to(device, non_blocking=True).float() / 255  # uint8 to float32, 0-255 to 0.0-1.0\n\n            # Warmup\n            if ni <= nw:\n                xi = [0, nw]  # x interp\n                # compute_loss.gr = np.interp(ni, xi, [0.0, 1.0])  # iou loss ratio (obj_loss = 1.0 or iou)\n                accumulate = max(1, np.interp(ni, xi, [1, nbs / batch_size]).round())\n                for j, x in enumerate(optimizer.param_groups):\n                    # bias lr falls from 0.1 to lr0, all other lrs rise from 0.0 to lr0\n                    x[\"lr\"] = np.interp(ni, xi, [hyp[\"warmup_bias_lr\"] if j == 0 else 0.0, x[\"initial_lr\"] * lf(epoch)])\n                    if \"momentum\" in x:\n                        x[\"momentum\"] = np.interp(ni, xi, [hyp[\"warmup_momentum\"], hyp[\"momentum\"]])\n\n            # Multi-scale\n            if opt.multi_scale:\n                sz = random.randrange(int(imgsz * 0.5), int(imgsz * 1.5) + gs) // gs * gs  # size\n                sf = sz / max(imgs.shape[2:])  # scale factor\n                if sf != 1:\n                    ns = [math.ceil(x * sf / gs) * gs for x in imgs.shape[2:]]  # new shape (stretched to gs-multiple)\n                    imgs = nn.functional.interpolate(imgs, size=ns, mode=\"bilinear\", align_corners=False)\n\n            # Forward\n            with torch.cuda.amp.autocast(amp):\n                pred = model(imgs)  # forward",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[265:284]\n==train:[301:320]\n    )\n    labels = np.concatenate(dataset.labels, 0)\n    mlc = int(labels[:, 0].max())  # max label class\n    assert mlc < nc, f\"Label class {mlc} exceeds nc={nc} in {data}. Possible class labels are 0-{nc - 1}\"\n\n    # Process 0\n    if RANK in {-1, 0}:\n        val_loader = create_dataloader(\n            val_path,\n            imgsz,\n            batch_size // WORLD_SIZE * 2,\n            gs,\n            single_cls,\n            hyp=hyp,\n            cache=None if noval else opt.cache,\n            rect=True,\n            rank=-1,\n            workers=workers * 2,\n            pad=0.5,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loss:[156:181]\n==utils.segment.loss:[68:90]\n                pxy = pxy.sigmoid() * 2 - 0.5\n                pwh = (pwh.sigmoid() * 2) ** 2 * anchors[i]\n                pbox = torch.cat((pxy, pwh), 1)  # predicted box\n                iou = bbox_iou(pbox, tbox[i], CIoU=True).squeeze()  # iou(prediction, target)\n                lbox += (1.0 - iou).mean()  # iou loss\n\n                # Objectness\n                iou = iou.detach().clamp(0).type(tobj.dtype)\n                if self.sort_obj_iou:\n                    j = iou.argsort()\n                    b, a, gj, gi, iou = b[j], a[j], gj[j], gi[j], iou[j]\n                if self.gr < 1:\n                    iou = (1.0 - self.gr) + self.gr * iou\n                tobj[b, a, gj, gi] = iou  # iou ratio\n\n                # Classification\n                if self.nc > 1:  # cls loss (only if multiple classes)\n                    t = torch.full_like(pcls, self.cn, device=self.device)  # targets\n                    t[range(n), tcls[i]] = self.cp\n                    lcls += self.BCEcls(pcls, t)  # BCE\n\n                # Mask regression",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[196:213]\n==utils.segment.dataloaders:[61:78]\n            rank=rank,\n        )\n\n    batch_size = min(batch_size, len(dataset))\n    nd = torch.cuda.device_count()  # number of CUDA devices\n    nw = min([os.cpu_count() // max(nd, 1), batch_size if batch_size > 1 else 0, workers])  # number of workers\n    sampler = None if rank == -1 else SmartDistributedSampler(dataset, shuffle=shuffle)\n    loader = DataLoader if image_weights else InfiniteDataLoader  # only DataLoader allows for attribute updates\n    generator = torch.Generator()\n    generator.manual_seed(6148914691236517205 + seed + RANK)\n    return loader(\n        dataset,\n        batch_size=batch_size,\n        shuffle=shuffle and sampler is None,\n        num_workers=nw,\n        sampler=sampler,\n        drop_last=quad,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[299:320]\n==train:[331:352]\n    if cuda and RANK != -1:\n        model = smart_DDP(model)\n\n    # Model attributes\n    nl = de_parallel(model).model[-1].nl  # number of detection layers (to scale hyps)\n    hyp[\"box\"] *= 3 / nl  # scale to layers\n    hyp[\"cls\"] *= nc / 80 * 3 / nl  # scale to classes and layers\n    hyp[\"obj\"] *= (imgsz / 640) ** 2 * 3 / nl  # scale to image size and layers\n    hyp[\"label_smoothing\"] = opt.label_smoothing\n    model.nc = nc  # attach number of classes to model\n    model.hyp = hyp  # attach hyperparameters to model\n    model.class_weights = labels_to_class_weights(dataset.labels, nc).to(device) * nc  # attach class weights\n    model.names = names\n\n    # Start training\n    t0 = time.time()\n    nb = len(train_loader)  # number of batches\n    nw = max(round(hyp[\"warmup_epochs\"] * nb), 100)  # number of warmup iterations, max(3 epochs, 100 iterations)\n    # nw = min(nw, (epochs - start_epoch) / 2 * nb)  # limit warmup to < 1/2 of training\n    last_opt_step = -1\n    maps = np.zeros(nc)  # mAP per class",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loss:[113:135]\n==utils.segment.loss:[22:44]\n        device = next(model.parameters()).device  # get model device\n        h = model.hyp  # hyperparameters\n\n        # Define criteria\n        BCEcls = nn.BCEWithLogitsLoss(pos_weight=torch.tensor([h[\"cls_pw\"]], device=device))\n        BCEobj = nn.BCEWithLogitsLoss(pos_weight=torch.tensor([h[\"obj_pw\"]], device=device))\n\n        # Class label smoothing https://arxiv.org/pdf/1902.04103.pdf eqn 3\n        self.cp, self.cn = smooth_BCE(eps=h.get(\"label_smoothing\", 0.0))  # positive, negative BCE targets\n\n        # Focal loss\n        g = h[\"fl_gamma\"]  # focal loss gamma\n        if g > 0:\n            BCEcls, BCEobj = FocalLoss(BCEcls, g), FocalLoss(BCEobj, g)\n\n        m = de_parallel(model).model[-1]  # Detect() module\n        self.balance = {3: [4.0, 1.0, 0.4]}.get(m.nl, [4.0, 1.0, 0.25, 0.06, 0.02])  # P3-P7\n        self.ssi = list(m.stride).index(16) if autobalance else 0  # stride 16 index\n        self.BCEcls, self.BCEobj, self.gr, self.hyp, self.autobalance = BCEcls, BCEobj, 1.0, h, autobalance\n        self.na = m.na  # number of anchors\n        self.nc = m.nc  # number of classes\n        self.nl = m.nl  # number of layers",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[455:470]\n==val:[519:534]\n    parser.add_argument(\"--batch-size\", type=int, default=32, help=\"batch size\")\n    parser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", type=int, default=640, help=\"inference size (pixels)\")\n    parser.add_argument(\"--conf-thres\", type=float, default=0.001, help=\"confidence threshold\")\n    parser.add_argument(\"--iou-thres\", type=float, default=0.6, help=\"NMS IoU threshold\")\n    parser.add_argument(\"--max-det\", type=int, default=300, help=\"maximum detections per image\")\n    parser.add_argument(\"--task\", default=\"val\", help=\"train, val, test, speed or study\")\n    parser.add_argument(\"--device\", default=\"\", help=\"cuda device, i.e. 0 or 0,1,2,3 or cpu\")\n    parser.add_argument(\"--workers\", type=int, default=8, help=\"max dataloader workers (per RANK in DDP mode)\")\n    parser.add_argument(\"--single-cls\", action=\"store_true\", help=\"treat as single-class dataset\")\n    parser.add_argument(\"--augment\", action=\"store_true\", help=\"augmented inference\")\n    parser.add_argument(\"--verbose\", action=\"store_true\", help=\"report mAP by class\")\n    parser.add_argument(\"--save-txt\", action=\"store_true\", help=\"save results to *.txt\")\n    parser.add_argument(\"--save-hybrid\", action=\"store_true\", help=\"save label+prediction hybrid results to *.txt\")\n    parser.add_argument(\"--save-conf\", action=\"store_true\", help=\"save confidences in --save-txt labels\")\n    parser.add_argument(\"--save-json\", action=\"store_true\", help=\"save a COCO-JSON results file\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[432:447]\n==train:[453:468]\n            ema.update_attr(model, include=[\"yaml\", \"nc\", \"hyp\", \"names\", \"stride\", \"class_weights\"])\n            final_epoch = (epoch + 1 == epochs) or stopper.possible_stop\n            if not noval or final_epoch:  # Calculate mAP\n                results, maps, _ = validate.run(\n                    data_dict,\n                    batch_size=batch_size // WORLD_SIZE * 2,\n                    imgsz=imgsz,\n                    half=amp,\n                    model=ema.ema,\n                    single_cls=single_cls,\n                    dataloader=val_loader,\n                    save_dir=save_dir,\n                    plots=False,\n                    callbacks=callbacks,\n                    compute_loss=compute_loss,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[270:288]\n==segment.predict:[205:224]\n                        with open(f\"{txt_path}.txt\", \"a\") as f:\n                            f.write((\"%g \" * len(line)).rstrip() % line + \"\\n\")\n\n                    if save_img or save_crop or view_img:  # Add bbox to image\n                        c = int(cls)  # integer class\n                        label = None if hide_labels else (names[c] if hide_conf else f\"{names[c]} {conf:.2f}\")\n                        annotator.box_label(xyxy, label, color=colors(c, True))\n                    if save_crop:\n                        save_one_box(xyxy, imc, file=save_dir / \"crops\" / names[c] / f\"{p.stem}.jpg\", BGR=True)\n\n            # Stream results\n            im0 = annotator.result()\n            if view_img:\n                if platform.system() == \"Linux\" and p not in windows:\n                    windows.append(p)\n                    cv2.namedWindow(str(p), cv2.WINDOW_NORMAL | cv2.WINDOW_KEEPRATIO)  # allow window resize (Linux)\n                    cv2.resizeWindow(str(p), im0.shape[1], im0.shape[0])\n                cv2.imshow(str(p), im0)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[624:640]\n==train:[665:681]\n            opt.exist_ok, opt.resume = opt.resume, False  # pass resume to exist_ok and disable resume\n        if opt.name == \"cfg\":\n            opt.name = Path(opt.cfg).stem  # use model.yaml as name\n        opt.save_dir = str(increment_path(Path(opt.project) / opt.name, exist_ok=opt.exist_ok))\n\n    # DDP mode\n    device = select_device(opt.device, batch_size=opt.batch_size)\n    if LOCAL_RANK != -1:\n        msg = \"is not compatible with YOLOv5 Multi-GPU DDP training\"\n        assert not opt.image_weights, f\"--image-weights {msg}\"\n        assert not opt.evolve, f\"--evolve {msg}\"\n        assert opt.batch_size != -1, f\"AutoBatch with --batch-size -1 {msg}, please pass a valid --batch-size\"\n        assert opt.batch_size % WORLD_SIZE == 0, f\"--batch-size {opt.batch_size} must be multiple of WORLD_SIZE\"\n        assert torch.cuda.device_count() > LOCAL_RANK, \"insufficient CUDA devices for DDP command\"\n        torch.cuda.set_device(LOCAL_RANK)\n        device = torch.device(\"cuda\", LOCAL_RANK)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[161:177]\n==train:[199:215]\n    cuda = device.type != \"cpu\"\n    init_seeds(opt.seed + 1 + RANK, deterministic=True)\n    with torch_distributed_zero_first(LOCAL_RANK):\n        data_dict = data_dict or check_dataset(data)  # check if None\n    train_path, val_path = data_dict[\"train\"], data_dict[\"val\"]\n    nc = 1 if single_cls else int(data_dict[\"nc\"])  # number of classes\n    names = {0: \"item\"} if single_cls and len(data_dict[\"names\"]) != 1 else data_dict[\"names\"]  # class names\n    is_coco = isinstance(val_path, str) and val_path.endswith(\"coco/val2017.txt\")  # COCO dataset\n\n    # Model\n    check_suffix(weights, \".pt\")  # check weights\n    pretrained = weights.endswith(\".pt\")\n    if pretrained:\n        with torch_distributed_zero_first(LOCAL_RANK):\n            weights = attempt_download(weights)  # download if not found locally\n        ckpt = torch.load(weights, map_location=\"cpu\")  # load checkpoint to CPU to avoid CUDA memory leak",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[137:156]\n==train:[154:173]\n    w = save_dir / \"weights\"  # weights dir\n    (w.parent if evolve else w).mkdir(parents=True, exist_ok=True)  # make dir\n    last, best = w / \"last.pt\", w / \"best.pt\"\n\n    # Hyperparameters\n    if isinstance(hyp, str):\n        with open(hyp, errors=\"ignore\") as f:\n            hyp = yaml.safe_load(f)  # load hyps dict\n    LOGGER.info(colorstr(\"hyperparameters: \") + \", \".join(f\"{k}={v}\" for k, v in hyp.items()))\n    opt.hyp = hyp.copy()  # for saving hyps to checkpoints\n\n    # Save run settings\n    if not evolve:\n        yaml_save(save_dir / \"hyp.yaml\", hyp)\n        yaml_save(save_dir / \"opt.yaml\", vars(opt))\n\n    # Loggers\n    data_dict = None\n    if RANK in {-1, 0}:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[119:132]\n==train:[137:150]\n        Path(opt.save_dir),\n        opt.epochs,\n        opt.batch_size,\n        opt.weights,\n        opt.single_cls,\n        opt.evolve,\n        opt.data,\n        opt.cfg,\n        opt.resume,\n        opt.noval,\n        opt.nosave,\n        opt.workers,\n        opt.freeze,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[184:196]\n==utils.segment.dataloaders:[47:59]\n            path,\n            imgsz,\n            batch_size,\n            augment=augment,  # augmentation\n            hyp=hyp,  # hyperparameters\n            rect=rect,  # rectangular batches\n            cache_images=cache,\n            single_cls=single_cls,\n            stride=int(stride),\n            pad=pad,\n            image_weights=image_weights,\n            prefix=prefix,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[223:241]\n==detect:[398:437]\n    parser.add_argument(\"--half\", action=\"store_true\", help=\"use FP16 half-precision inference\")\n    parser.add_argument(\"--dnn\", action=\"store_true\", help=\"use OpenCV DNN for ONNX inference\")\n    parser.add_argument(\"--vid-stride\", type=int, default=1, help=\"video frame-rate stride\")\n    opt = parser.parse_args()\n    opt.imgsz *= 2 if len(opt.imgsz) == 1 else 1  # expand\n    print_args(vars(opt))\n    return opt\n\n\ndef main(opt):\n    \"\"\"\n    Executes YOLOv5 model inference based on provided command-line arguments, validating dependencies before running.\n\n    Args:\n        opt (argparse.Namespace): Command-line arguments for YOLOv5 detection. See function `parse_opt` for details.\n\n    Returns:\n        None\n\n    Note:\n        This function performs essential pre-execution checks and initiates the YOLOv5 detection process based on user-specified\n        options. Refer to the usage guide and examples for more information about different sources and formats at:\n        https://github.com/ultralytics/ultralytics\n\n    Example usage:\n\n    ```python\n    if __name__ == \"__main__\":\n        opt = parse_opt()\n        main(opt)\n    ```\n    \"\"\"\n    check_requirements(ROOT / \"requirements.txt\", exclude=(\"tensorboard\", \"thop\"))\n    run(**vars(opt))\n\n\nif __name__ == \"__main__\":\n    opt = parse_opt()\n    main(opt)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[139:189]\n==val:[172:256]\n    correct_class = labels[:, 0:1] == detections[:, 5]\n    for i in range(len(iouv)):\n        x = torch.where((iou >= iouv[i]) & correct_class)  # IoU > threshold and classes match\n        if x[0].shape[0]:\n            matches = torch.cat((torch.stack(x, 1), iou[x[0], x[1]][:, None]), 1).cpu().numpy()  # [label, detect, iou]\n            if x[0].shape[0] > 1:\n                matches = matches[matches[:, 2].argsort()[::-1]]\n                matches = matches[np.unique(matches[:, 1], return_index=True)[1]]\n                # matches = matches[matches[:, 2].argsort()[::-1]]\n                matches = matches[np.unique(matches[:, 0], return_index=True)[1]]\n            correct[matches[:, 1].astype(int), i] = True\n    return torch.tensor(correct, dtype=torch.bool, device=iouv.device)\n\n\n@smart_inference_mode()\ndef run(\n    data,\n    weights=None,  # model.pt path(s)\n    batch_size=32,  # batch size\n    imgsz=640,  # inference size (pixels)\n    conf_thres=0.001,  # confidence threshold\n    iou_thres=0.6,  # NMS IoU threshold\n    max_det=300,  # maximum detections per image\n    task=\"val\",  # train, val, test, speed or study\n    device=\"\",  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n    workers=8,  # max dataloader workers (per RANK in DDP mode)\n    single_cls=False,  # treat as single-class dataset\n    augment=False,  # augmented inference\n    verbose=False,  # verbose output\n    save_txt=False,  # save results to *.txt\n    save_hybrid=False,  # save label+prediction hybrid results to *.txt\n    save_conf=False,  # save confidences in --save-txt labels\n    save_json=False,  # save a COCO-JSON results file\n    project=ROOT / \"runs/val\",  # save to project/name\n    name=\"exp\",  # save to project/name\n    exist_ok=False,  # existing project/name ok, do not increment\n    half=True,  # use FP16 half-precision inference\n    dnn=False,  # use OpenCV DNN for ONNX inference\n    model=None,\n    dataloader=None,\n    save_dir=Path(\"\"),\n    plots=True,\n    callbacks=Callbacks(),\n    compute_loss=None,\n):\n    \"\"\"\n    Evaluates a YOLOv5 model on a dataset and logs performance metrics.\n\n    Args:\n        data (str | dict): Path to a dataset YAML file or a dataset dictionary.\n        weights (str | list[str], optional): Path to the model weights file(s). Supports various formats including PyTorch,\n            TorchScript, ONNX, OpenVINO, TensorRT, CoreML, TensorFlow SavedModel, TensorFlow GraphDef, TensorFlow Lite,\n            TensorFlow Edge TPU, and PaddlePaddle.\n        batch_size (int, optional): Batch size for inference. Default is 32.\n        imgsz (int, optional): Input image size (pixels). Default is 640.\n        conf_thres (float, optional): Confidence threshold for object detection. Default is 0.001.\n        iou_thres (float, optional): IoU threshold for Non-Maximum Suppression (NMS). Default is 0.6.\n        max_det (int, optional): Maximum number of detections per image. Default is 300.\n        task (str, optional): Task type - 'train', 'val', 'test', 'speed', or 'study'. Default is 'val'.\n        device (str, optional): Device to use for computation, e.g., '0' or '0,1,2,3' for CUDA or 'cpu' for CPU. Default is ''.\n        workers (int, optional): Number of dataloader workers. Default is 8.\n        single_cls (bool, optional): Treat dataset as a single class. Default is False.\n        augment (bool, optional): Enable augmented inference. Default is False.\n        verbose (bool, optional): Enable verbose output. Default is False.\n        save_txt (bool, optional): Save results to *.txt files. Default is False.\n        save_hybrid (bool, optional): Save label and prediction hybrid results to *.txt files. Default is False.\n        save_conf (bool, optional): Save confidences in --save-txt labels. Default is False.\n        save_json (bool, optional): Save a COCO-JSON results file. Default is False.\n        project (str | Path, optional): Directory to save results. Default is ROOT/'runs/val'.\n        name (str, optional): Name of the run. Default is 'exp'.\n        exist_ok (bool, optional): Overwrite existing project/name without incrementing. Default is False.\n        half (bool, optional): Use FP16 half-precision inference. Default is True.\n        dnn (bool, optional): Use OpenCV DNN for ONNX inference. Default is False.\n        model (torch.nn.Module, optional): Model object for training. Default is None.\n        dataloader (torch.utils.data.DataLoader, optional): Dataloader object. Default is None.\n        save_dir (Path, optional): Directory to save results. Default is Path('').\n        plots (bool, optional): Plot validation images and metrics. Default is True.\n        callbacks (utils.callbacks.Callbacks, optional): Callbacks for logging and monitoring. Default is Callbacks().\n        compute_loss (function, optional): Loss function for training. Default is None.\n\n    Returns:\n        dict: Contains performance metrics including precision, recall, mAP50, and mAP50-95.\n    \"\"\"\n    # Initialize/load model and set device",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[552:563]\n==train:[569:580]\n    parser.add_argument(\"--hyp\", type=str, default=ROOT / \"data/hyps/hyp.scratch-low.yaml\", help=\"hyperparameters path\")\n    parser.add_argument(\"--epochs\", type=int, default=100, help=\"total training epochs\")\n    parser.add_argument(\"--batch-size\", type=int, default=16, help=\"total batch size for all GPUs, -1 for autobatch\")\n    parser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", type=int, default=640, help=\"train, val image size (pixels)\")\n    parser.add_argument(\"--rect\", action=\"store_true\", help=\"rectangular training\")\n    parser.add_argument(\"--resume\", nargs=\"?\", const=True, default=False, help=\"resume most recent training\")\n    parser.add_argument(\"--nosave\", action=\"store_true\", help=\"only save final checkpoint\")\n    parser.add_argument(\"--noval\", action=\"store_true\", help=\"only validate final epoch\")\n    parser.add_argument(\"--noautoanchor\", action=\"store_true\", help=\"disable AutoAnchor\")\n    parser.add_argument(\"--noplots\", action=\"store_true\", help=\"save no plot files\")\n    parser.add_argument(\"--evolve\", type=int, nargs=\"?\", const=300, help=\"evolve hyperparameters for x generations\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[185:203]\n==train:[223:241]\n    amp = check_amp(model)  # check AMP\n\n    # Freeze\n    freeze = [f\"model.{x}.\" for x in (freeze if len(freeze) > 1 else range(freeze[0]))]  # layers to freeze\n    for k, v in model.named_parameters():\n        v.requires_grad = True  # train all layers\n        # v.register_hook(lambda x: torch.nan_to_num(x))  # NaN to 0 (commented for erratic training results)\n        if any(x in k for x in freeze):\n            LOGGER.info(f\"freezing {k}\")\n            v.requires_grad = False\n\n    # Image size\n    gs = max(int(model.stride.max()), 32)  # grid size (max stride)\n    imgsz = check_img_size(opt.imgsz, gs, floor=gs * 2)  # verify imgsz is gs-multiple\n\n    # Batch size\n    if RANK == -1 and batch_size == -1:  # single-GPU only, estimate best batch size\n        batch_size = check_train_batch_size(model, imgsz, amp)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[228:240]\n==segment.predict:[155:167]\n        for i, det in enumerate(pred):  # per image\n            seen += 1\n            if webcam:  # batch_size >= 1\n                p, im0, frame = path[i], im0s[i].copy(), dataset.count\n                s += f\"{i}: \"\n            else:\n                p, im0, frame = path, im0s.copy(), getattr(dataset, \"frame\", 0)\n\n            p = Path(p)  # to Path\n            save_path = str(save_dir / p.name)  # im.jpg\n            txt_path = str(save_dir / \"labels\" / p.stem) + (\"\" if dataset.mode == \"image\" else f\"_{frame}\")  # im.txt\n            s += \"{:g}x{:g} \".format(*im.shape[2:])  # print string",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[926:937]\n==utils.segment.dataloaders:[285:295]\n            img4,\n            labels4,\n            segments4,\n            degrees=self.hyp[\"degrees\"],\n            translate=self.hyp[\"translate\"],\n            scale=self.hyp[\"scale\"],\n            shear=self.hyp[\"shear\"],\n            perspective=self.hyp[\"perspective\"],\n            border=self.mosaic_border,\n        )  # border to remove",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[554:564]\n==utils.loggers.comet.hpo:[38:48]\n    parser.add_argument(\"--batch-size\", type=int, default=16, help=\"total batch size for all GPUs, -1 for autobatch\")\n    parser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", type=int, default=640, help=\"train, val image size (pixels)\")\n    parser.add_argument(\"--rect\", action=\"store_true\", help=\"rectangular training\")\n    parser.add_argument(\"--resume\", nargs=\"?\", const=True, default=False, help=\"resume most recent training\")\n    parser.add_argument(\"--nosave\", action=\"store_true\", help=\"only save final checkpoint\")\n    parser.add_argument(\"--noval\", action=\"store_true\", help=\"only validate final epoch\")\n    parser.add_argument(\"--noautoanchor\", action=\"store_true\", help=\"disable AutoAnchor\")\n    parser.add_argument(\"--noplots\", action=\"store_true\", help=\"save no plot files\")\n    parser.add_argument(\"--evolve\", type=int, nargs=\"?\", const=300, help=\"evolve hyperparameters for x generations\")\n    parser.add_argument(\"--bucket\", type=str, default=\"\", help=\"gsutil bucket\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.val:[86:98]\n==val:[270:282]\n        stride, pt, jit, engine = model.stride, model.pt, model.jit, model.engine\n        imgsz = check_img_size(imgsz, s=stride)  # check image size\n        half = model.fp16  # FP16 supported on limited backends with CUDA\n        if engine:\n            batch_size = model.batch_size\n        else:\n            device = model.device\n            if not (pt or jit):\n                batch_size = 1  # export.py models default to batch-size 1\n                LOGGER.info(f\"Forcing --batch-size 1 square inference (1,3,{imgsz},{imgsz}) for non-PyTorch models\")\n\n        # Dataloader",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[573:585]\n==train:[594:606]\n    parser.add_argument(\"--name\", default=\"exp\", help=\"save to project/name\")\n    parser.add_argument(\"--exist-ok\", action=\"store_true\", help=\"existing project/name ok, do not increment\")\n    parser.add_argument(\"--quad\", action=\"store_true\", help=\"quad dataloader\")\n    parser.add_argument(\"--cos-lr\", action=\"store_true\", help=\"cosine LR scheduler\")\n    parser.add_argument(\"--label-smoothing\", type=float, default=0.0, help=\"Label smoothing epsilon\")\n    parser.add_argument(\"--patience\", type=int, default=100, help=\"EarlyStopping patience (epochs without improvement)\")\n    parser.add_argument(\"--freeze\", nargs=\"+\", type=int, default=[0], help=\"Freeze layers: backbone=10, first3=0 1 2\")\n    parser.add_argument(\"--save-period\", type=int, default=-1, help=\"Save checkpoint every x epochs (disabled if < 1)\")\n    parser.add_argument(\"--seed\", type=int, default=0, help=\"Global training seed\")\n    parser.add_argument(\"--local_rank\", type=int, default=-1, help=\"Automatic DDP Multi-GPU argument, do not modify\")\n\n    # Instance Segmentation Args",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[138:150]\n==detect:[229:240]\n            seen += 1\n            if webcam:  # batch_size >= 1\n                p, im0, frame = path[i], im0s[i].copy(), dataset.count\n                s += f\"{i}: \"\n            else:\n                p, im0, frame = path, im0s.copy(), getattr(dataset, \"frame\", 0)\n\n            p = Path(p)  # to Path\n            save_path = str(save_dir / p.name)  # im.jpg\n            txt_path = str(save_dir / \"labels\" / p.stem) + (\"\" if dataset.mode == \"image\" else f\"_{frame}\")  # im.txt\n\n            s += \"{:g}x{:g} \".format(*im.shape[2:])  # print string",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loss:[181:191]\n==utils.segment.loss:[102:112]\n            obji = self.BCEobj(pi[..., 4], tobj)\n            lobj += obji * self.balance[i]  # obj loss\n            if self.autobalance:\n                self.balance[i] = self.balance[i] * 0.9999 + 0.0001 / obji.detach().item()\n\n        if self.autobalance:\n            self.balance = [x / self.balance[self.ssi] for x in self.balance]\n        lbox *= self.hyp[\"box\"]\n        lobj *= self.hyp[\"obj\"]\n        lcls *= self.hyp[\"cls\"]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[803:814]\n==utils.segment.dataloaders:[174:184]\n                    degrees=hyp[\"degrees\"],\n                    translate=hyp[\"translate\"],\n                    scale=hyp[\"scale\"],\n                    shear=hyp[\"shear\"],\n                    perspective=hyp[\"perspective\"],\n                )\n\n        nl = len(labels)  # number of labels\n        if nl:\n            labels[:, 1:5] = xyxy2xywhn(labels[:, 1:5], w=img.shape[1], h=img.shape[0], clip=True, eps=1e-3)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.train:[32:79]\n==segment.train:[36:103]\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[1]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nimport segment.val as validate  # for end-of-epoch mAP\nfrom models.experimental import attempt_load\nfrom models.yolo import SegmentationModel\nfrom utils.autoanchor import check_anchors\nfrom utils.autobatch import check_train_batch_size\nfrom utils.callbacks import Callbacks\nfrom utils.downloads import attempt_download, is_url\nfrom utils.general import (\n    LOGGER,\n    TQDM_BAR_FORMAT,\n    check_amp,\n    check_dataset,\n    check_file,\n    check_git_info,\n    check_git_status,\n    check_img_size,\n    check_requirements,\n    check_suffix,\n    check_yaml,\n    colorstr,\n    get_latest_run,\n    increment_path,\n    init_seeds,\n    intersect_dicts,\n    labels_to_class_weights,\n    labels_to_image_weights,\n    one_cycle,\n    print_args,\n    print_mutation,\n    strip_optimizer,\n    yaml_save,\n)\nfrom utils.loggers import GenericLogger\nfrom utils.plots import plot_evolve, plot_labels\nfrom utils.segment.dataloaders import create_dataloader\nfrom utils.segment.loss import ComputeLoss\nfrom utils.segment.metrics import KEYS, fitness\nfrom utils.segment.plots import plot_images_and_masks, plot_results_with_masks\nfrom utils.torch_utils import (\n    EarlyStopping,\n    ModelEMA,\n    de_parallel,\n    select_device,\n    smart_DDP,\n    smart_optimizer,\n    smart_resume,\n    torch_distributed_zero_first,\n)\n\nLOCAL_RANK = int(os.getenv(\"LOCAL_RANK\", -1))  # https://pytorch.org/docs/stable/elastic/run.html\nRANK = int(os.getenv(\"RANK\", -1))\nWORLD_SIZE = int(os.getenv(\"WORLD_SIZE\", 1))\nGIT_INFO = check_git_info()\n\n\ndef train(hyp, opt, device, callbacks):\n    \"\"\"\n    Trains the YOLOv5 model on a dataset, managing hyperparameters, model optimization, logging, and validation.\n\n    `hyp` is path/to/hyp.yaml or hyp dictionary.\n    \"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[36:94]\n==val:[34:129]\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nimport torch.nn.functional as F\n\nfrom models.common import DetectMultiBackend\nfrom models.yolo import SegmentationModel\nfrom utils.callbacks import Callbacks\nfrom utils.general import (\n    LOGGER,\n    NUM_THREADS,\n    TQDM_BAR_FORMAT,\n    Profile,\n    check_dataset,\n    check_img_size,\n    check_requirements,\n    check_yaml,\n    coco80_to_coco91_class,\n    colorstr,\n    increment_path,\n    non_max_suppression,\n    print_args,\n    scale_boxes,\n    xywh2xyxy,\n    xyxy2xywh,\n)\nfrom utils.metrics import ConfusionMatrix, box_iou\nfrom utils.plots import output_to_target, plot_val_study\nfrom utils.segment.dataloaders import create_dataloader\nfrom utils.segment.general import mask_iou, process_mask, process_mask_native, scale_image\nfrom utils.segment.metrics import Metrics, ap_per_class_box_and_mask\nfrom utils.segment.plots import plot_images_and_masks\nfrom utils.torch_utils import de_parallel, select_device, smart_inference_mode\n\n\ndef save_one_txt(predn, save_conf, shape, file):\n    \"\"\"Saves detection results in txt format; includes class, xywh (normalized), optionally confidence if `save_conf` is\n    True.\n    \"\"\"\n    gn = torch.tensor(shape)[[1, 0, 1, 0]]  # normalization gain whwh\n    for *xyxy, conf, cls in predn.tolist():\n        xywh = (xyxy2xywh(torch.tensor(xyxy).view(1, 4)) / gn).view(-1).tolist()  # normalized xywh\n        line = (cls, *xywh, conf) if save_conf else (cls, *xywh)  # label format\n        with open(file, \"a\") as f:\n            f.write((\"%g \" * len(line)).rstrip() % line + \"\\n\")\n\n\ndef save_one_json(predn, jdict, path, class_map, pred_masks):\n    \"\"\"\n    Saves a JSON file with detection results including bounding boxes, category IDs, scores, and segmentation masks.\n\n    Example JSON result: {\"image_id\": 42, \"category_id\": 18, \"bbox\": [258.15, 41.29, 348.26, 243.78], \"score\": 0.236}.\n    \"\"\"\n    from pycocotools.mask import encode\n\n    def single_encode(x):\n        \"\"\"Encodes binary mask arrays into RLE (Run-Length Encoding) format for JSON serialization.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==train:[571:580]\n==utils.loggers.comet.hpo:[38:47]\n    parser.add_argument(\"--batch-size\", type=int, default=16, help=\"total batch size for all GPUs, -1 for autobatch\")\n    parser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", type=int, default=640, help=\"train, val image size (pixels)\")\n    parser.add_argument(\"--rect\", action=\"store_true\", help=\"rectangular training\")\n    parser.add_argument(\"--resume\", nargs=\"?\", const=True, default=False, help=\"resume most recent training\")\n    parser.add_argument(\"--nosave\", action=\"store_true\", help=\"only save final checkpoint\")\n    parser.add_argument(\"--noval\", action=\"store_true\", help=\"only validate final epoch\")\n    parser.add_argument(\"--noautoanchor\", action=\"store_true\", help=\"disable AutoAnchor\")\n    parser.add_argument(\"--noplots\", action=\"store_true\", help=\"save no plot files\")\n    parser.add_argument(\"--evolve\", type=int, nargs=\"?\", const=300, help=\"evolve hyperparameters for x generations\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[563:572]\n==train:[584:593]\n    parser.add_argument(\"--bucket\", type=str, default=\"\", help=\"gsutil bucket\")\n    parser.add_argument(\"--cache\", type=str, nargs=\"?\", const=\"ram\", help=\"image --cache ram/disk\")\n    parser.add_argument(\"--image-weights\", action=\"store_true\", help=\"use weighted image selection for training\")\n    parser.add_argument(\"--device\", default=\"\", help=\"cuda device, i.e. 0 or 0,1,2,3 or cpu\")\n    parser.add_argument(\"--multi-scale\", action=\"store_true\", help=\"vary img-size +/- 50%%\")\n    parser.add_argument(\"--single-cls\", action=\"store_true\", help=\"train multi-class data as single-class\")\n    parser.add_argument(\"--optimizer\", type=str, choices=[\"SGD\", \"Adam\", \"AdamW\"], default=\"SGD\", help=\"optimizer\")\n    parser.add_argument(\"--sync-bn\", action=\"store_true\", help=\"use SyncBatchNorm, only available in DDP mode\")\n    parser.add_argument(\"--workers\", type=int, default=8, help=\"max dataloader workers (per RANK in DDP mode)\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[401:437]\n==segment.predict:[292:307]\n    opt = parser.parse_args()\n    opt.imgsz *= 2 if len(opt.imgsz) == 1 else 1  # expand\n    print_args(vars(opt))\n    return opt\n\n\ndef main(opt):\n    \"\"\"Executes YOLOv5 model inference with given options, checking for requirements before launching.\"\"\"\n    check_requirements(ROOT / \"requirements.txt\", exclude=(\"tensorboard\", \"thop\"))\n    run(**vars(opt))\n\n\nif __name__ == \"__main__\":\n    opt = parse_opt()\n    main(opt)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[368:377]\n==segment.predict:[265:274]\n    parser.add_argument(\"--source\", type=str, default=ROOT / \"data/images\", help=\"file/dir/URL/glob/screen/0(webcam)\")\n    parser.add_argument(\"--data\", type=str, default=ROOT / \"data/coco128.yaml\", help=\"(optional) dataset.yaml path\")\n    parser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", nargs=\"+\", type=int, default=[640], help=\"inference size h,w\")\n    parser.add_argument(\"--conf-thres\", type=float, default=0.25, help=\"confidence threshold\")\n    parser.add_argument(\"--iou-thres\", type=float, default=0.45, help=\"NMS IoU threshold\")\n    parser.add_argument(\"--max-det\", type=int, default=1000, help=\"maximum detections per image\")\n    parser.add_argument(\"--device\", default=\"\", help=\"cuda device, i.e. 0 or 0,1,2,3 or cpu\")\n    parser.add_argument(\"--view-img\", action=\"store_true\", help=\"show results\")\n    parser.add_argument(\"--save-txt\", action=\"store_true\", help=\"save results to *.txt\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[814:829]\n==utils.segment.dataloaders:[201:216]\n        if self.augment:\n            # Albumentations\n            # there are some augmentation that won't change boxes and masks,\n            # so just be it for now.\n            img, labels = self.albumentations(img, labels)\n            nl = len(labels)  # update after albumentations\n\n            # HSV color-space\n            augment_hsv(img, hgain=hyp[\"hsv_h\"], sgain=hyp[\"hsv_s\"], vgain=hyp[\"hsv_v\"])\n\n            # Flip up-down\n            if random.random() < hyp[\"flipud\"]:\n                img = np.flipud(img)\n                if nl:\n                    labels[:, 2] = 1 - labels[:, 2]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[335:345]\n==val:[370:380]\n            if single_cls:\n                pred[:, 5] = 0\n            predn = pred.clone()\n            scale_boxes(im[si].shape[1:], predn[:, :4], shape, shapes[si][1])  # native-space pred\n\n            # Evaluate\n            if nl:\n                tbox = xywh2xyxy(labels[:, 1:5])  # target boxes\n                scale_boxes(im[si].shape[1:], tbox, shape, shapes[si][1])  # native-space labels\n                labelsn = torch.cat((labels[:, 0:1], tbox), 1)  # native-space labels",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[202:214]\n==val:[261:273]\n    else:  # called directly\n        device = select_device(device, batch_size=batch_size)\n\n        # Directories\n        save_dir = increment_path(Path(project) / name, exist_ok=exist_ok)  # increment run\n        (save_dir / \"labels\" if save_txt else save_dir).mkdir(parents=True, exist_ok=True)  # make dir\n\n        # Load model\n        model = DetectMultiBackend(weights, device=device, dnn=dnn, data=data, fp16=half)\n        stride, pt, jit, engine = model.stride, model.pt, model.jit, model.engine\n        imgsz = check_img_size(imgsz, s=stride)  # check image size\n        half = model.fp16  # FP16 supported on limited backends with CUDA",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.val:[72:82]\n==val:[256:266]\n    training = model is not None\n    if training:  # called by train.py\n        device, pt, jit, engine = next(model.parameters()).device, True, False, False  # get model device, PyTorch model\n        half &= device.type != \"cpu\"  # half precision only supported on CUDA\n        model.half() if half else model.float()\n    else:  # called directly\n        device = select_device(device, batch_size=batch_size)\n\n        # Directories\n        save_dir = increment_path(Path(project) / name, exist_ok=exist_ok)  # increment run",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.train:[372:382]\n==train:[976:986]\n    opt = parse_opt(True)\n    for k, v in kwargs.items():\n        setattr(opt, k, v)\n    main(opt)\n    return opt\n\n\nif __name__ == \"__main__\":\n    opt = parse_opt()\n    main(opt)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[393:401]\n==segment.predict:[283:291]\n    parser.add_argument(\"--name\", default=\"exp\", help=\"save results to project/name\")\n    parser.add_argument(\"--exist-ok\", action=\"store_true\", help=\"existing project/name ok, do not increment\")\n    parser.add_argument(\"--line-thickness\", default=3, type=int, help=\"bounding box thickness (pixels)\")\n    parser.add_argument(\"--hide-labels\", default=False, action=\"store_true\", help=\"hide labels\")\n    parser.add_argument(\"--hide-conf\", default=False, action=\"store_true\", help=\"hide confidences\")\n    parser.add_argument(\"--half\", action=\"store_true\", help=\"use FP16 half-precision inference\")\n    parser.add_argument(\"--dnn\", action=\"store_true\", help=\"use OpenCV DNN for ONNX inference\")\n    parser.add_argument(\"--vid-stride\", type=int, default=1, help=\"video frame-rate stride\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[384:392]\n==segment.predict:[274:282]\n    parser.add_argument(\"--save-conf\", action=\"store_true\", help=\"save confidences in --save-txt labels\")\n    parser.add_argument(\"--save-crop\", action=\"store_true\", help=\"save cropped prediction boxes\")\n    parser.add_argument(\"--nosave\", action=\"store_true\", help=\"do not save images/videos\")\n    parser.add_argument(\"--classes\", nargs=\"+\", type=int, help=\"filter by class: --classes 0, or --classes 0 2 3\")\n    parser.add_argument(\"--agnostic-nms\", action=\"store_true\", help=\"class-agnostic NMS\")\n    parser.add_argument(\"--augment\", action=\"store_true\", help=\"augmented inference\")\n    parser.add_argument(\"--visualize\", action=\"store_true\", help=\"visualize features\")\n    parser.add_argument(\"--update\", action=\"store_true\", help=\"update all models\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[183:191]\n==segment.predict:[133:143]\n    seen, windows, dt = 0, [], (Profile(device=device), Profile(device=device), Profile(device=device))\n    for path, im, im0s, vid_cap, s in dataset:\n        with dt[0]:\n            im = torch.from_numpy(im).to(model.device)\n            im = im.half() if model.fp16 else im.float()  # uint8 to fp16/32\n            im /= 255  # 0 - 255 to 0.0 - 1.0\n            if len(im.shape) == 3:\n                im = im[None]  # expand for batch dim",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[197:209]\n==detect:[313:367]\n    t = tuple(x.t / seen * 1e3 for x in dt)  # speeds per image\n    LOGGER.info(f\"Speed: %.1fms pre-process, %.1fms inference, %.1fms NMS per image at shape {(1, 3, *imgsz)}\" % t)\n    if save_txt or save_img:\n        s = f\"\\n{len(list(save_dir.glob('labels/*.txt')))} labels saved to {save_dir / 'labels'}\" if save_txt else \"\"\n        LOGGER.info(f\"Results saved to {colorstr('bold', save_dir)}{s}\")\n    if update:\n        strip_optimizer(weights[0])  # update model (to fix SourceChangeWarning)\n\n\ndef parse_opt():\n    \"\"\"Parses command line arguments for YOLOv5 inference settings including model, source, device, and image size.\"\"\"\n    parser = argparse.ArgumentParser()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[1010:1018]\n==utils.segment.dataloaders:[288:295]\n            degrees=self.hyp[\"degrees\"],\n            translate=self.hyp[\"translate\"],\n            scale=self.hyp[\"scale\"],\n            shear=self.hyp[\"shear\"],\n            perspective=self.hyp[\"perspective\"],\n            border=self.mosaic_border,\n        )  # border to remove",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.augmentations:[211:221]\n==utils.segment.augmentations:[82:91]\n            segments = resample_segments(segments)  # upsample\n            for i, segment in enumerate(segments):\n                xy = np.ones((len(segment), 3))\n                xy[:, :2] = segment\n                xy = xy @ M.T  # transform\n                xy = xy[:, :2] / xy[:, 2:3] if perspective else xy[:, :2]  # perspective rescale or affine\n\n                # clip\n                new[i] = segment2box(xy, width, height)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[565:572]\n==utils.loggers.comet.hpo:[49:56]\n    parser.add_argument(\"--image-weights\", action=\"store_true\", help=\"use weighted image selection for training\")\n    parser.add_argument(\"--device\", default=\"\", help=\"cuda device, i.e. 0 or 0,1,2,3 or cpu\")\n    parser.add_argument(\"--multi-scale\", action=\"store_true\", help=\"vary img-size +/- 50%%\")\n    parser.add_argument(\"--single-cls\", action=\"store_true\", help=\"train multi-class data as single-class\")\n    parser.add_argument(\"--optimizer\", type=str, choices=[\"SGD\", \"Adam\", \"AdamW\"], default=\"SGD\", help=\"optimizer\")\n    parser.add_argument(\"--sync-bn\", action=\"store_true\", help=\"use SyncBatchNorm, only available in DDP mode\")\n    parser.add_argument(\"--workers\", type=int, default=8, help=\"max dataloader workers (per RANK in DDP mode)\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.val:[89:98]\n==segment.val:[215:224]\n        if engine:\n            batch_size = model.batch_size\n        else:\n            device = model.device\n            if not (pt or jit):\n                batch_size = 1  # export.py models default to batch-size 1\n                LOGGER.info(f\"Forcing --batch-size 1 square inference (1,3,{imgsz},{imgsz}) for non-PyTorch models\")\n\n        # Dataloader",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[165:172]\n==segment.predict:[217:224]\n            im0 = annotator.result()\n            if view_img:\n                if platform.system() == \"Linux\" and p not in windows:\n                    windows.append(p)\n                    cv2.namedWindow(str(p), cv2.WINDOW_NORMAL | cv2.WINDOW_KEEPRATIO)  # allow window resize (Linux)\n                    cv2.resizeWindow(str(p), im0.shape[1], im0.shape[0])\n                cv2.imshow(str(p), im0)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[257:265]\n==val:[313:321]\n        )[0]\n\n    seen = 0\n    confusion_matrix = ConfusionMatrix(nc=nc)\n    names = model.names if hasattr(model, \"names\") else model.module.names  # get class names\n    if isinstance(names, (list, tuple)):  # old format\n        names = dict(enumerate(names))\n    class_map = coco80_to_coco91_class() if is_coco else list(range(1000))",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==train:[822:829]\n==utils.loggers.__init__:[93:100]\n                    \"metrics/precision\",\n                    \"metrics/recall\",\n                    \"metrics/mAP_0.5\",\n                    \"metrics/mAP_0.5:0.95\",\n                    \"val/box_loss\",\n                    \"val/obj_loss\",\n                    \"val/cls_loss\",",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[326:334]\n==train:[358:365]\n    LOGGER.info(\n        f'Image sizes {imgsz} train, {imgsz} val\\n'\n        f'Using {train_loader.num_workers * WORLD_SIZE} dataloader workers\\n'\n        f\"Logging results to {colorstr('bold', save_dir)}\\n\"\n        f'Starting training for {epochs} epochs...'\n    )\n    for epoch in range(start_epoch, epochs):  # epoch ------------------------------------------------------------------",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.train:[228:236]\n==train:[424:431]\n            scaler.unscale_(optimizer)  # unscale gradients\n            torch.nn.utils.clip_grad_norm_(model.parameters(), max_norm=10.0)  # clip gradients\n            scaler.step(optimizer)\n            scaler.update()\n            optimizer.zero_grad()\n            if ema:\n                ema.update(model)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.train:[34:79]\n==train:[42:136]\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nfrom classify import val as validate\nfrom models.experimental import attempt_load\nfrom models.yolo import ClassificationModel, DetectionModel\nfrom utils.dataloaders import create_classification_dataloader\nfrom utils.general import (\n    DATASETS_DIR,\n    LOGGER,\n    TQDM_BAR_FORMAT,\n    WorkingDirectory,\n    check_git_info,\n    check_git_status,\n    check_requirements,\n    colorstr,\n    download,\n    increment_path,\n    init_seeds,\n    print_args,\n    yaml_save,\n)\nfrom utils.loggers import GenericLogger\nfrom utils.plots import imshow_cls\nfrom utils.torch_utils import (\n    ModelEMA,\n    de_parallel,\n    model_info,\n    reshape_classifier_output,\n    select_device,\n    smart_DDP,\n    smart_optimizer,\n    smartCrossEntropyLoss,\n    torch_distributed_zero_first,\n)\n\nLOCAL_RANK = int(os.getenv(\"LOCAL_RANK\", -1))  # https://pytorch.org/docs/stable/elastic/run.html\nRANK = int(os.getenv(\"RANK\", -1))\nWORLD_SIZE = int(os.getenv(\"WORLD_SIZE\", 1))\nGIT_INFO = check_git_info()\n\n\ndef train(opt, device):\n    \"\"\"Trains a YOLOv5 model, managing datasets, model optimization, logging, and saving checkpoints.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.val:[165:178]\n==detect:[403:437]\n    print_args(vars(opt))\n    return opt\n\n\ndef main(opt):\n    \"\"\"Executes the YOLOv5 model prediction workflow, handling argument parsing and requirement checks.\"\"\"\n    check_requirements(ROOT / \"requirements.txt\", exclude=(\"tensorboard\", \"thop\"))\n    run(**vars(opt))\n\n\nif __name__ == \"__main__\":\n    opt = parse_opt()\n    main(opt)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loggers.__init__:[98:104]\n==utils.segment.metrics:[207:214]\n            \"val/obj_loss\",\n            \"val/cls_loss\",  # val loss\n            \"x/lr0\",\n            \"x/lr1\",\n            \"x/lr2\",\n        ]  # params",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.plots:[441:447]\n==utils.segment.plots:[122:128]\n    ax = ax.ravel()\n    files = list(save_dir.glob(\"results*.csv\"))\n    assert len(files), f\"No results.csv files found in {save_dir.resolve()}, nothing to plot.\"\n    for f in files:\n        try:\n            data = pd.read_csv(f)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loss:[249:258]\n==utils.segment.loss:[186:194]\n            gij = (gxy - offsets).long()\n            gi, gj = gij.T  # grid indices\n\n            # Append\n            indices.append((b, a, gj.clamp_(0, shape[2] - 1), gi.clamp_(0, shape[3] - 1)))  # image, anchor, grid\n            tbox.append(torch.cat((gxy - gij, gwh), 1))  # box\n            anch.append(anchors[a])  # anchors\n            tcls.append(c)  # class\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[786:796]\n==utils.segment.dataloaders:[145:156]\n        else:\n            # Load image\n            img, (h0, w0), (h, w) = self.load_image(index)\n\n            # Letterbox\n            shape = self.batch_shapes[self.batch[index]] if self.rect else self.img_size  # final letterboxed shape\n            img, ratio, pad = letterbox(img, shape, auto=False, scaleup=self.augment)\n            shapes = (h0, w0), ((h / h0, w / w0), pad)  # for COCO mAP rescaling\n\n            labels = self.labels[index].copy()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[478:489]\n==val:[542:571]\n    opt.save_txt |= opt.save_hybrid\n    print_args(vars(opt))\n    return opt\n\n\ndef main(opt):\n    \"\"\"\n    Executes YOLOv5 tasks like training, validation, testing, speed, and study benchmarks based on provided options.\n\n    Args:\n        opt (argparse.Namespace): Parsed command-line options.\n            This includes values for parameters like 'data', 'weights', 'batch_size', 'imgsz', 'conf_thres',\n            'iou_thres', 'max_det', 'task', 'device', 'workers', 'single_cls', 'augment', 'verbose', 'save_txt',\n            'save_hybrid', 'save_conf', 'save_json', 'project', 'name', 'exist_ok', 'half', and 'dnn', essential\n            for configuring the YOLOv5 tasks.\n\n    Returns:\n        None\n\n    Examples:\n        To validate a trained YOLOv5 model on the COCO dataset with a specific weights file, use:\n        ```python\n        $ python val.py --weights yolov5s.pt --data coco128.yaml --img 640\n        ```\n    \"\"\"\n    check_requirements(ROOT / \"requirements.txt\", exclude=(\"tensorboard\", \"thop\"))\n\n    if opt.task in (\"train\", \"val\", \"test\"):  # run normally\n        if opt.conf_thres > 0.001:  # https://github.com/ultralytics/yolov5/issues/1466",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[471:478]\n==val:[535:541]\n    parser.add_argument(\"--name\", default=\"exp\", help=\"save to project/name\")\n    parser.add_argument(\"--exist-ok\", action=\"store_true\", help=\"existing project/name ok, do not increment\")\n    parser.add_argument(\"--half\", action=\"store_true\", help=\"use FP16 half-precision inference\")\n    parser.add_argument(\"--dnn\", action=\"store_true\", help=\"use OpenCV DNN for ONNX inference\")\n    opt = parser.parse_args()\n    opt.data = check_yaml(opt.data)  # check YAML",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[436:444]\n==val:[455:463]\n        except Exception as e:\n            LOGGER.info(f\"pycocotools unable to run: {e}\")\n\n    # Return results\n    model.float()  # for training\n    if not training:\n        s = f\"\\n{len(list(save_dir.glob('labels/*.txt')))} labels saved to {save_dir / 'labels'}\" if save_txt else \"\"\n        LOGGER.info(f\"Results saved to {colorstr('bold', save_dir)}{s}\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[400:410]\n==val:[420:428]\n    t = tuple(x.t / seen * 1e3 for x in dt)  # speeds per image\n    if not training:\n        shape = (batch_size, 3, imgsz, imgsz)\n        LOGGER.info(f\"Speed: %.1fms pre-process, %.1fms inference, %.1fms NMS per image at shape {shape}\" % t)\n\n    # Plots\n    if plots:\n        confusion_matrix.plot(save_dir=save_dir, names=list(names.values()))\n    # callbacks.run('on_val_end')\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[105:111]\n==val:[133:139]\n        jdict.append(\n            {\n                \"image_id\": image_id,\n                \"category_id\": class_map[int(p[5])],\n                \"bbox\": [round(x, 3) for x in b],\n                \"score\": round(p[4], 5),",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[740:754]\n==train:[880:912]\n        plot_evolve(evolve_csv)\n        LOGGER.info(\n            f'Hyperparameter evolution finished {opt.evolve} generations\\n'\n            f\"Results saved to {colorstr('bold', save_dir)}\\n\"\n            f'Usage example: $ python train.py --hyp {evolve_yaml}'\n        )\n\n\ndef run(**kwargs):\n    \"\"\"\n    Executes YOLOv5 training with given parameters, altering options programmatically; returns updated options.\n\n    Example: import train; train.run(data='coco128.yaml', imgsz=320, weights='yolov5m.pt')\n    \"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[449:459]\n==train:[468:476]\n                )\n\n            # Update best mAP\n            fi = fitness(np.array(results).reshape(1, -1))  # weighted combination of [P, R, mAP@.5, mAP@.5-.95]\n            stop = stopper(epoch=epoch, fitness=fi)  # early stop check\n            if fi > best_fitness:\n                best_fitness = fi\n            log_vals = list(mloss) + list(results) + lr\n            # callbacks.run('on_fit_epoch_end', log_vals, epoch, best_fitness, fi)\n            # Log val metrics and media",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[286:294]\n==train:[320:328]\n            prefix=colorstr(\"val: \"),\n        )[0]\n\n        if not resume:\n            if not opt.noautoanchor:\n                check_anchors(dataset, model=model, thr=hyp[\"anchor_t\"], imgsz=imgsz)  # run AutoAnchor\n            model.half().float()  # pre-reduce anchor precision\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[178:184]\n==train:[216:222]\n        exclude = [\"anchor\"] if (cfg or hyp.get(\"anchors\")) and not resume else []  # exclude keys\n        csd = ckpt[\"model\"].float().state_dict()  # checkpoint state_dict as FP32\n        csd = intersect_dicts(csd, model.state_dict(), exclude=exclude)  # intersect\n        model.load_state_dict(csd, strict=False)  # load\n        LOGGER.info(f\"Transferred {len(csd)}/{len(model.state_dict())} items from {weights}\")  # report\n    else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loggers.comet.__init__:[9:16]\n==utils.loggers.comet.hpo:[11:24]\nlogger = logging.getLogger(__name__)\n\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[3]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.plots:[186:191]\n==utils.segment.plots:[55:60]\n        x, y = int(w * (i // ns)), int(h * (i % ns))  # block origin\n        annotator.rectangle([x, y, x + w, y + h], None, (255, 255, 255), width=2)  # borders\n        if paths:\n            annotator.text([x + 5, y + 5], text=Path(paths[i]).name[:40], txt_color=(220, 220, 220))  # filenames\n        if len(targets) > 0:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.loss:[146:153]\n==utils.segment.loss:[59:65]\n        for i, pi in enumerate(p):  # layer index, layer predictions\n            b, a, gj, gi = indices[i]  # image, anchor, gridy, gridx\n            tobj = torch.zeros(pi.shape[:4], dtype=pi.dtype, device=self.device)  # target obj\n\n            n = b.shape[0]  # number of targets\n            if n:\n                # pxy, pwh, _, pcls = pi[b, a, gj, gi].tensor_split((2, 4, 5), dim=1)  # faster, requires torch 1.8.0",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[838:846]\n==utils.segment.dataloaders:[227:235]\n        labels_out = torch.zeros((nl, 6))\n        if nl:\n            labels_out[:, 1:] = torch.from_numpy(labels)\n\n        # Convert\n        img = img.transpose((2, 0, 1))[::-1]  # HWC to CHW, BGR to RGB\n        img = np.ascontiguousarray(img)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.dataloaders:[1372:1377]\n==utils.segment.dataloaders:[72:77]\n        dataset,\n        batch_size=batch_size,\n        shuffle=shuffle and sampler is None,\n        num_workers=nw,\n        sampler=sampler,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[36:91]\n==segment.val:[34:76]\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[1]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nimport torch.nn.functional as F\n\nfrom models.common import DetectMultiBackend\nfrom models.yolo import SegmentationModel\nfrom utils.callbacks import Callbacks\nfrom utils.general import (\n    LOGGER,\n    NUM_THREADS,\n    TQDM_BAR_FORMAT,\n    Profile,\n    check_dataset,\n    check_img_size,\n    check_requirements,\n    check_yaml,\n    coco80_to_coco91_class,\n    colorstr,\n    increment_path,\n    non_max_suppression,\n    print_args,\n    scale_boxes,\n    xywh2xyxy,\n    xyxy2xywh,\n)\nfrom utils.metrics import ConfusionMatrix, box_iou\nfrom utils.plots import output_to_target, plot_val_study\nfrom utils.segment.dataloaders import create_dataloader\nfrom utils.segment.general import mask_iou, process_mask, process_mask_native, scale_image\nfrom utils.segment.metrics import Metrics, ap_per_class_box_and_mask\nfrom utils.segment.plots import plot_images_and_masks\nfrom utils.torch_utils import de_parallel, select_device, smart_inference_mode\n\n\ndef save_one_txt(predn, save_conf, shape, file):\n    \"\"\"Saves detection results in txt format; includes class, xywh (normalized), optionally confidence if `save_conf` is\n    True.\n    \"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==models.tf:[568:573]\n==models.yolo:[429:434]\n                args.insert(2, n)\n                n = 1\n        elif m is nn.BatchNorm2d:\n            args = [ch[f]]\n        elif m is Concat:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==models.tf:[556:561]\n==models.yolo:[411:416]\n            MixConv2d,\n            Focus,\n            CrossConv,\n            BottleneckCSP,\n            C3,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==models.tf:[609:616]\n==models.yolo:[222:229]\n        super().__init__()\n        if isinstance(cfg, dict):\n            self.yaml = cfg  # model dict\n        else:  # is *.yaml\n            import yaml  # for torch hub\n\n            self.yaml_file = Path(cfg).name",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==models.common:[835:857]\n==models.yolo:[210:217]\n            m.stride = fn(m.stride)\n            m.grid = list(map(fn, m.grid))\n            if isinstance(m.anchor_grid, list):\n                m.anchor_grid = list(map(fn, m.anchor_grid))\n        return self\n\n    @smart_inference_mode()\n    def forward(self, ims, size=640, augment=False, profile=False):\n        \"\"\"\n        Performs inference on inputs with optional augment & profiling.\n\n        Supports various formats including file, URI, OpenCV, PIL, numpy, torch.\n        \"\"\"\n        # For size(height=640, width=1280), RGB images example inputs are:\n        #   file:        ims = 'data/images/zidane.jpg'  # str or PosixPath\n        #   URI:             = 'https://ultralytics.com/images/zidane.jpg'\n        #   OpenCV:          = cv2.imread('image.jpg')[:,:,::-1]  # HWC BGR to RGB x(640,1280,3)\n        #   PIL:             = Image.open('image.jpg') or ImageGrab.grab()  # HWC x(640,1280,3)\n        #   numpy:           = np.zeros((640,1280,3))  # HWC\n        #   torch:           = torch.zeros(16,3,320,640)  # BCHW (scaled to size=640, 0-1 values)\n        #   multiple:        = [Image.open('image1.jpg'), Image.open('image2.jpg'), ...]  # list of images\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.val:[30:72]\n==segment.predict:[38:100]\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[1]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nfrom ultralytics.utils.plotting import Annotator, colors, save_one_box\n\nfrom models.common import DetectMultiBackend\nfrom utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\nfrom utils.general import (\n    LOGGER,\n    Profile,\n    check_file,\n    check_img_size,\n    check_imshow,\n    check_requirements,\n    colorstr,\n    cv2,\n    increment_path,\n    non_max_suppression,\n    print_args,\n    scale_boxes,\n    scale_segments,\n    strip_optimizer,\n)\nfrom utils.segment.general import masks2segments, process_mask, process_mask_native\nfrom utils.torch_utils import select_device, smart_inference_mode\n\n\n@smart_inference_mode()\ndef run(\n    weights=ROOT / \"yolov5s-seg.pt\",  # model.pt path(s)\n    source=ROOT / \"data/images\",  # file/dir/URL/glob/screen/0(webcam)\n    data=ROOT / \"data/coco128.yaml\",  # dataset.yaml path\n    imgsz=(640, 640),  # inference size (height, width)\n    conf_thres=0.25,  # confidence threshold\n    iou_thres=0.45,  # NMS IOU threshold\n    max_det=1000,  # maximum detections per image\n    device=\"\",  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n    view_img=False,  # show results\n    save_txt=False,  # save results to *.txt\n    save_conf=False,  # save confidences in --save-txt labels\n    save_crop=False,  # save cropped prediction boxes\n    nosave=False,  # do not save images/videos\n    classes=None,  # filter by class: --class 0, or --class 0 2 3\n    agnostic_nms=False,  # class-agnostic NMS\n    augment=False,  # augmented inference\n    visualize=False,  # visualize features\n    update=False,  # update all models\n    project=ROOT / \"runs/predict-seg\",  # save results to project/name\n    name=\"exp\",  # save results to project/name\n    exist_ok=False,  # existing project/name ok, do not increment\n    line_thickness=3,  # bounding box thickness (pixels)\n    hide_labels=False,  # hide labels\n    hide_conf=False,  # hide confidences\n    half=False,  # use FP16 half-precision inference\n    dnn=False,  # use OpenCV DNN for ONNX inference\n    vid_stride=1,  # video frame-rate stride\n    retina_masks=False,\n):\n    \"\"\"Run YOLOv5 segmentation inference on diverse sources including images, videos, directories, and streams.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.train:[353:360]\n==segment.train:[636:643]\n        assert opt.batch_size % WORLD_SIZE == 0, f\"--batch-size {opt.batch_size} must be multiple of WORLD_SIZE\"\n        assert torch.cuda.device_count() > LOCAL_RANK, \"insufficient CUDA devices for DDP command\"\n        torch.cuda.set_device(LOCAL_RANK)\n        device = torch.device(\"cuda\", LOCAL_RANK)\n        dist.init_process_group(backend=\"nccl\" if dist.is_nccl_available() else \"gloo\")\n\n    # Parameters",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[116:123]\n==segment.predict:[129:136]\n    vid_path, vid_writer = [None] * bs, [None] * bs\n\n    # Run inference\n    model.warmup(imgsz=(1 if pt else bs, 3, *imgsz))  # warmup\n    seen, windows, dt = 0, [], (Profile(device=device), Profile(device=device), Profile(device=device))\n    for path, im, im0s, vid_cap, s in dataset:\n        with dt[0]:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.predict:[39:87]\n==classify.train:[32:71]\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[1]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nfrom ultralytics.utils.plotting import Annotator\n\nfrom models.common import DetectMultiBackend\nfrom utils.augmentations import classify_transforms\nfrom utils.dataloaders import IMG_FORMATS, VID_FORMATS, LoadImages, LoadScreenshots, LoadStreams\nfrom utils.general import (\n    LOGGER,\n    Profile,\n    check_file,\n    check_img_size,\n    check_imshow,\n    check_requirements,\n    colorstr,\n    cv2,\n    increment_path,\n    print_args,\n    strip_optimizer,\n)\nfrom utils.torch_utils import select_device, smart_inference_mode\n\n\n@smart_inference_mode()\ndef run(\n    weights=ROOT / \"yolov5s-cls.pt\",  # model.pt path(s)\n    source=ROOT / \"data/images\",  # file/dir/URL/glob/screen/0(webcam)\n    data=ROOT / \"data/coco128.yaml\",  # dataset.yaml path\n    imgsz=(224, 224),  # inference size (height, width)\n    device=\"\",  # cuda device, i.e. 0 or 0,1,2,3 or cpu\n    view_img=False,  # show results\n    save_txt=False,  # save results to *.txt\n    nosave=False,  # do not save images/videos\n    augment=False,  # augmented inference\n    visualize=False,  # visualize features\n    update=False,  # update all models\n    project=ROOT / \"runs/predict-cls\",  # save results to project/name\n    name=\"exp\",  # save results to project/name\n    exist_ok=False,  # existing project/name ok, do not increment\n    half=False,  # use FP16 half-precision inference\n    dnn=False,  # use OpenCV DNN for ONNX inference\n    vid_stride=1,  # video frame-rate stride\n):\n    \"\"\"Conducts YOLOv5 classification inference on diverse input sources and saves results.\"\"\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==utils.metrics:[157:162]\n==val:[175:181]\n        if x[0].shape[0]:\n            matches = torch.cat((torch.stack(x, 1), iou[x[0], x[1]][:, None]), 1).cpu().numpy()\n            if x[0].shape[0] > 1:\n                matches = matches[matches[:, 2].argsort()[::-1]]\n                matches = matches[np.unique(matches[:, 1], return_index=True)[1]]",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[429:434]\n==val:[449:454]\n            if is_coco:\n                eval.params.imgIds = [int(Path(x).stem) for x in dataloader.dataset.im_files]  # image IDs to evaluate\n            eval.evaluate()\n            eval.accumulate()\n            eval.summarize()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[416:425]\n==val:[436:442]\n        pred_json = str(save_dir / f\"{w}_predictions.json\")  # predictions\n        LOGGER.info(f\"\\nEvaluating pycocotools mAP... saving {pred_json}...\")\n        with open(pred_json, \"w\") as f:\n            json.dump(jdict, f)\n\n        try:  # https://github.com/cocodataset/cocoapi/blob/master/PythonAPI/pycocoEvalDemo.ipynb",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.val:[196:201]\n==val:[256:261]\n    training = model is not None\n    if training:  # called by train.py\n        device, pt, jit, engine = next(model.parameters()).device, True, False, False  # get model device, PyTorch model\n        half &= device.type != \"cpu\"  # half precision only supported on CUDA\n        model.half() if half else model.float()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.val:[160:165]\n==val:[535:540]\n    parser.add_argument(\"--name\", default=\"exp\", help=\"save to project/name\")\n    parser.add_argument(\"--exist-ok\", action=\"store_true\", help=\"existing project/name ok, do not increment\")\n    parser.add_argument(\"--half\", action=\"store_true\", help=\"use FP16 half-precision inference\")\n    parser.add_argument(\"--dnn\", action=\"store_true\", help=\"use OpenCV DNN for ONNX inference\")\n    opt = parser.parse_args()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==train:[565:570]\n==utils.loggers.comet.hpo:[32:37]\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"--weights\", type=str, default=ROOT / \"yolov5s.pt\", help=\"initial weights path\")\n    parser.add_argument(\"--cfg\", type=str, default=\"\", help=\"model.yaml path\")\n    parser.add_argument(\"--data\", type=str, default=ROOT / \"data/coco128.yaml\", help=\"dataset.yaml path\")\n    parser.add_argument(\"--hyp\", type=str, default=ROOT / \"data/hyps/hyp.scratch-low.yaml\", help=\"hyperparameters path\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==segment.train:[334:346]\n==train:[366:378]\n        model.train()\n\n        # Update image weights (optional, single-GPU only)\n        if opt.image_weights:\n            cw = model.class_weights.cpu().numpy() * (1 - maps) ** 2 / nc  # class weights\n            iw = labels_to_image_weights(dataset.labels, nc=nc, class_weights=cw)  # image weights\n            dataset.indices = random.choices(range(dataset.n), weights=iw, k=dataset.n)  # rand weighted idx\n\n        # Update mosaic border (optional)\n        # b = int(random.uniform(0.25 * imgsz, 0.75 * imgsz + gs) // gs * gs)\n        # dataset.mosaic_border = [b - imgsz, -b]  # height, width borders\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==classify.train:[339:350]\n==train:[615:640]\n    return parser.parse_known_args()[0] if known else parser.parse_args()\n\n\ndef main(opt, callbacks=Callbacks()):\n    \"\"\"\n    Runs the main entry point for training or hyperparameter evolution with specified options and optional callbacks.\n\n    Args:\n        opt (argparse.Namespace): The command-line arguments parsed for YOLOv5 training and evolution.\n        callbacks (ultralytics.utils.callbacks.Callbacks, optional): Callback functions for various training stages.\n            Defaults to Callbacks().\n\n    Returns:\n        None\n\n    Note:\n        For detailed usage, refer to:\n        https://github.com/ultralytics/yolov5/tree/master/models\n    \"\"\"\n    if RANK in {-1, 0}:\n        print_args(vars(opt))\n        check_git_status()\n        check_requirements(ROOT / \"requirements.txt\")\n\n    # Resume (from specified or most recent last.pt)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==detect:[39:150]\n==train:[40:96]\nFILE = Path(__file__).resolve()\nROOT = FILE.parents[0]  # YOLOv5 root directory\nif str(ROOT) not in sys.path:\n    sys.path.append(str(ROOT))  # add ROOT to PATH\nROOT = Path(os.path.relpath(ROOT, Path.cwd()))  # relative\n\nimport val as validate  # for end-of-epoch mAP\nfrom models.experimental import attempt_load\nfrom models.yolo import Model\nfrom utils.autoanchor import check_anchors\nfrom utils.autobatch import check_train_batch_size\nfrom utils.callbacks import Callbacks\nfrom utils.dataloaders import create_dataloader\nfrom utils.downloads import attempt_download, is_url\nfrom utils.general import (\n    LOGGER,\n    TQDM_BAR_FORMAT,\n    check_amp,\n    check_dataset,\n    check_file,\n    check_git_info,\n    check_git_status,\n    check_img_size,\n    check_requirements,\n    check_suffix,\n    check_yaml,\n    colorstr,\n    get_latest_run,\n    increment_path,\n    init_seeds,\n    intersect_dicts,\n    labels_to_class_weights,\n    labels_to_image_weights,\n    methods,\n    one_cycle,\n    print_args,\n    print_mutation,\n    strip_optimizer,\n    yaml_save,\n)\nfrom utils.loggers import LOGGERS, Loggers\nfrom utils.loggers.comet.comet_utils import check_comet_resume\nfrom utils.loss import ComputeLoss\nfrom utils.metrics import fitness\nfrom utils.plots import plot_evolve\nfrom utils.torch_utils import (\n    EarlyStopping,\n    ModelEMA,\n    de_parallel,\n    select_device,\n    smart_DDP,\n    smart_optimizer,\n    smart_resume,\n    torch_distributed_zero_first,\n)\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (utils.downloads -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (utils -> utils.torch_utils -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (utils -> utils.torch_utils -> utils.general -> utils.metrics)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> utils.dataloaders -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> utils.torch_utils -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> models.experimental -> models.yolo -> utils.plots -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.experimental -> models.yolo)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> models.experimental -> models.yolo)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (export -> utils.dataloaders -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils -> utils.general -> models.common)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> utils.dataloaders -> utils.torch_utils -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (export -> models.tf -> models.common)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (export -> models.yolo -> utils.plots -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils -> utils.general -> models.common)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (export -> models.tf -> models.yolo -> utils.plots -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils -> utils.general -> models.common)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> models.experimental -> models.yolo -> utils.autoanchor -> utils.dataloaders -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils -> utils.general)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> utils.dataloaders -> utils.augmentations -> utils.metrics -> utils -> utils.torch_utils)",
        "message-id": "R0401"
    },
    {
        "type": "refactor",
        "module": "utils.segment.__init__",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "yolov5\\utils\\segment\\__init__.py",
        "symbol": "cyclic-import",
        "message": "Cyclic import (models.common -> utils.dataloaders -> utils.torch_utils)",
        "message-id": "R0401"
    }
]
